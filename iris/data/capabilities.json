{
    "account": {
        "correlation_id": "70fea640-47f4-4652-9115-1ddfe27cab21",
        "attributes": {
            "state": {
                "readonly": false,
                "required": true,
                "type": "string",
                "description": "Platform-owned state of the account"
            },
            "taxExempt": {
                "readonly": true,
                "required": false,
                "type": "boolean",
                "description": "Platform-owned indicator of whether or not the billing account is tax-exempt.  If not present it implies that it is not"
            },
            "billingFirstName": {
                "readonly": true,
                "required": false,
                "type": "string",
                "description": "Platform-owned first name on the billing account."
            },
            "billingLastName": {
                "readonly": true,
                "required": false,
                "type": "string",
                "description": "Platfrom-owned last name on the billing account."
            },
            "billingCCType": {
                "readonly": true,
                "required": false,
                "type": "string",
                "description": "Platform-owned type of CC on the billing account."
            },
            "billingCCLast4": {
                "readonly": true,
                "required": false,
                "type": "string",
                "description": "Platform-owned last 4 digits of the CC on the billing account"
            },
            "billingStreet1": {
                "readonly": true,
                "required": false,
                "type": "string",
                "description": "Platform-owned street address on the billing account"
            },
            "billingStreet2": {
                "readonly": true,
                "required": false,
                "type": "string",
                "description": "Platform-owned street address on the billing account"
            },
            "billingCity": {
                "readonly": true,
                "required": false,
                "type": "string",
                "description": "Platform-owned city on the billing account's address"
            },
            "billingState": {
                "readonly": true,
                "required": false,
                "type": "string",
                "description": "Platform-owned state on the billing account's address"
            },
            "billingZip": {
                "readonly": true,
                "required": false,
                "type": "string",
                "description": "Platform-owned zip code on the billing account's address"
            },
            "billingZipPlusFour": {
                "readonly": true,
                "required": false,
                "type": "string",
                "description": "Platform-owned digits of the zip code after the plus sign on the billing account's address"
            },
            "owner": {
                "readonly": true,
                "required": true,
                "type": "string",
                "description": "The person ID of the account owner"
            }
        },
        "is_device": false,
        "methods": {
            "ListDevices": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {}
                }
            },
            "ListHubs": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {}
                }
            },
            "ListPlaces": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {}
                }
            },
            "ListInvoices": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {}
                }
            },
            "ListAdjustments": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {}
                }
            },
            "SignupTransition": {
                "enabled": true,
                "required": [
                    "stepcompleted"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "stepcompleted": {
                            "type": "string",
                            "description": "The last step the account has completed during the signup process",
                            "optional": false
                        }
                    }
                }
            },
            "UpdateBillingInfoCC": {
                "enabled": true,
                "required": [
                    "billingToken"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "billingToken": {
                            "type": "string",
                            "description": "Billing token recevied from ReCurly",
                            "optional": false
                        }
                    }
                }
            },
            "SkipPremiumTrial": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {}
                }
            },
            "CreateBillingAccount": {
                "enabled": true,
                "required": [
                    "billingToken",
                    "placeID"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "billingToken": {
                            "type": "string",
                            "description": "Billing token recevied from ReCurly",
                            "optional": false
                        },
                        "placeID": {
                            "type": "string",
                            "description": "Place ID to associate the initial subscription to",
                            "optional": false
                        }
                    }
                }
            },
            "UpdateServicePlan": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {
                        "placeID": {
                            "type": "uuid",
                            "description": "Place ID to associate the new service plan info with."
                        },
                        "serviceLevel": {
                            "type": "enum",
                            "description": "The new service level for the specified place."
                        },
                        "addons": {
                            "type": "object",
                            "description": "Map of addons to booleans indicating if the addon is active for the specified place."
                        }
                    },
                    "serviceLevel": [
                        "BASIC",
                        "PREMIUM",
                        "PREMIUM_FREE",
                        "PREMIUM_PROMON_FREE",
                        "PREMIUM_PROMON"
                    ]
                }
            },
            "AddPlace": {
                "enabled": true,
                "required": [
                    "place",
                    "serviceLevel"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "place": {
                            "type": "Place",
                            "description": "Instance of the writable place model attributes represented as a map",
                            "optional": false
                        },
                        "population": {
                            "type": "uuid",
                            "description": "The ID of the population that the place will be a member of.  If not provided the place will be part of the general population",
                            "optional": true
                        },
                        "serviceLevel": {
                            "type": "enum",
                            "description": "The service level the new place will be at.",
                            "optional": false
                        },
                        "addons": {
                            "type": "object",
                            "description": "Map of addons to booleans indicating if the addon will be actived for the new place.",
                            "optional": true
                        }
                    },
                    "serviceLevel": [
                        "BASIC",
                        "PREMIUM",
                        "PREMIUM_FREE"
                    ]
                }
            },
            "Delete": {
                "enabled": false,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {
                        "deleteOwnerLogin": {
                            "type": "boolean",
                            "description": "When set to true will also remove the login for the owner of the account, false will leave it.  If not specified, defaults to false",
                            "optional": true
                        }
                    }
                }
            },
            "DelinquentAccountEvent": {
                "enabled": true,
                "required": [
                    "accountId"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "accountId": {
                            "type": "string",
                            "description": "The account id for the deliquent invoice",
                            "optional": false
                        }
                    }
                }
            },
            "IssueCredit": {
                "enabled": true,
                "required": [
                    "amountInCents"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "amountInCents": {
                            "type": "string",
                            "description": "The amount to credit. Must be a negative amount of cents",
                            "optional": false
                        },
                        "description": {
                            "type": "string",
                            "description": "The reason for the credit, or empty",
                            "optional": true
                        }
                    }
                }
            },
            "IssueInvoiceRefund": {
                "enabled": true,
                "required": [
                    "invoiceNumber"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "invoiceNumber": {
                            "type": "string",
                            "description": "The invoice number to refund.",
                            "optional": false
                        }
                    }
                }
            },
            "Activate": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {}
                }
            }
        },
        "events": {}
    },
    "accountmig": {
        "correlation_id": "f759a6e7-49d5-44ef-80e5-184d06ac2cf8",
        "attributes": {},
        "is_device": false,
        "methods": {
            "MigrateBillingAccount": {
                "enabled": true,
                "required": [
                    "billingToken",
                    "placeID",
                    "serviceLevel"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "billingToken": {
                            "type": "string",
                            "description": "Billing token recevied from ReCurly",
                            "optional": false
                        },
                        "placeID": {
                            "type": "string",
                            "description": "Place ID to associate the initial subscription to",
                            "optional": false
                        },
                        "serviceLevel": {
                            "type": "enum",
                            "description": "The current v1 service level translated into the V2 enumeration",
                            "optional": false
                        }
                    },
                    "serviceLevel": [
                        "BASIC",
                        "PREMIUM"
                    ]
                }
            }
        },
        "events": {}
    },
    "alarm": {
        "correlation_id": "d14f2eb9-050e-404e-b755-ac98c7c48a54",
        "attributes": {
            "alertState": {
                "readonly": true,
                "required": true,
                "type": "enum",
                "description": "The current state of this alert.",
                "valid": [
                    "INACTIVE",
                    "DISARMED",
                    "ARMING",
                    "READY",
                    "PREALERT",
                    "ALERT",
                    "CLEARING"
                ]
            },
            "devices": {
                "readonly": true,
                "required": true,
                "type": "set<String>",
                "description": "The addresses of all the devices that are able to participate in this alarm."
            },
            "excludedDevices": {
                "readonly": true,
                "required": true,
                "type": "set<String>",
                "description": "The addresses of the devices that are excluded from participating in this alarm."
            },
            "activeDevices": {
                "readonly": true,
                "required": true,
                "type": "set<String>",
                "description": "The addresses of the devices that are participating in this alarm."
            },
            "offlineDevices": {
                "readonly": true,
                "required": true,
                "type": "set<String>",
                "description": "The addresses of the devices would be active except they have fallen offline."
            },
            "triggeredDevices": {
                "readonly": true,
                "required": true,
                "type": "set<String>",
                "description": "The addresses of the devices which are currently triggered."
            },
            "triggers": {
                "readonly": true,
                "required": true,
                "type": "list<IncidentTrigger>",
                "description": "The triggers associated with the current alert."
            },
            "monitored": {
                "readonly": true,
                "required": true,
                "type": "boolean",
                "description": "True if this alarm is professionally monitored."
            },
            "silent": {
                "readonly": false,
                "required": true,
                "type": "boolean",
                "description": "When true only notifications will be sent, alert devices / keypads will not sound."
            }
        },
        "is_device": false,
        "methods": {},
        "events": {}
    },
    "incident": {
        "correlation_id": "6aae8364-ff04-4b68-87b4-b8e5758e68d5",
        "attributes": {
            "placeId": {
                "readonly": true,
                "required": true,
                "type": "string",
                "description": "The place this incident occurred at"
            },
            "startTime": {
                "readonly": true,
                "required": true,
                "type": "timestamp",
                "description": "Platform-owned start time of the incident"
            },
            "prealertEndtime": {
                "readonly": true,
                "required": false,
                "type": "timestamp",
                "description": "The time that the prealert will complete."
            },
            "endTime": {
                "readonly": true,
                "required": false,
                "type": "timestamp",
                "description": "The time the incident ended, won't be set for the currently active incident"
            },
            "alertState": {
                "readonly": true,
                "required": true,
                "type": "enum",
                "description": "The current alert state of the incident.  This may begin in PREALERT for a security alarm grace period, then go to ALERT, transition to CANCELLING when the user requests that it be cancelled, and finally to COMPLETE when it is no longer active.",
                "valid": [
                    "PREALERT",
                    "ALERT",
                    "CANCELLING",
                    "COMPLETE"
                ]
            },
            "confirmed": {
                "readonly": true,
                "required": false,
                "type": "boolean",
                "description": "True if the incident has been confirmed"
            },
            "monitoringState": {
                "readonly": true,
                "required": true,
                "type": "enum",
                "description": "An enum of the current monitoring state: NONE - If the alerts are not monitored PENDING - If the alert is monitored but we have not contacted the monitoring station yet DISPATCHING - If we have contacted the monitoring station but the authorities have not been contacted yet DISPATCHED - If the authorities have been contacted REFUSED - If the authorities have been contacted but refused the dispatch CANCELLED - If the alarm was cancelled before the authorities were contacted FAILED - If the signal to the monitoring station failed or the monitoring station did not clear the incident within a configured timeout.",
                "valid": [
                    "NONE",
                    "PENDING",
                    "DISPATCHING",
                    "DISPATCHED",
                    "REFUSED",
                    "CANCELLED",
                    "FAILED"
                ]
            },
            "platformState": {
                "readonly": true,
                "required": true,
                "type": "enum",
                "description": "An enum of the current platform's view of the incident state.  If hubState is not present, this will be the same as alertState.",
                "valid": [
                    "PREALERT",
                    "ALERT",
                    "CANCELLING",
                    "COMPLETE"
                ]
            },
            "hubState": {
                "readonly": true,
                "required": false,
                "type": "enum",
                "description": "An enum of the current hub's view of the incident state.  If there is only a platform alarm provider this will not be present.",
                "valid": [
                    "PREALERT",
                    "ALERT",
                    "CANCELLING",
                    "COMPLETE"
                ]
            },
            "alert": {
                "readonly": true,
                "required": true,
                "type": "enum",
                "description": "The primary alert type",
                "valid": [
                    "SECURITY",
                    "PANIC",
                    "SMOKE",
                    "CO",
                    "WATER",
                    "CARE",
                    "WEATHER"
                ]
            },
            "additionalAlerts": {
                "readonly": true,
                "required": true,
                "type": "set<string>",
                "description": "Additional alerts that were part of this incident"
            },
            "tracker": {
                "readonly": true,
                "required": true,
                "type": "list<TrackerEvent>",
                "description": "A time series list of tracker events."
            },
            "cancelled": {
                "readonly": true,
                "required": true,
                "type": "boolean",
                "description": "If this incident has been cancelled by the user.  It can't be completely cleared until the sensors have stopped reporting smoke/CO and any professional monitoring dispatch has completed."
            },
            "cancelledBy": {
                "readonly": true,
                "required": false,
                "type": "string",
                "description": "The address of the person who cancelled the alarm.  This will only be set if: 1 - the incident has cleared 2 - it was \"actively\" silenced by a user, rather than passively closed by timeout or other event"
            },
            "monitored": {
                "readonly": true,
                "required": true,
                "type": "boolean",
                "description": "The monitored flag that should be true if any of the active alarms are monitored or false if none are monitored"
            }
        },
        "is_device": false,
        "methods": {
            "Verify": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {}
                }
            },
            "Cancel": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {}
                }
            },
            "ListHistoryEntries": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {
                        "limit": {
                            "type": "int",
                            "description": "The maximum number of events to return (defaults to 10)",
                            "optional": true
                        },
                        "token": {
                            "type": "string",
                            "description": "The token from a previous query to use for retrieving the next set of results",
                            "optional": true
                        }
                    }
                }
            }
        },
        "events": {
            "COAlert": {
                "required": [],
                "valid": {
                    "params": {}
                },
                "description": "Fired when a carbon monoxide alarm is triggered"
            },
            "PanicAlert": {
                "required": [],
                "valid": {
                    "params": {}
                },
                "description": "Fired when a panic alarm is triggered"
            },
            "SecurityAlert": {
                "required": [],
                "valid": {
                    "params": {}
                },
                "description": "Fired when a security alarm is triggered"
            },
            "SmokeAlert": {
                "required": [],
                "valid": {
                    "params": {}
                },
                "description": "Fired when a smoke alarm is triggered"
            },
            "WaterAlert": {
                "required": [],
                "valid": {
                    "params": {}
                },
                "description": "Fired when a water alarm is triggered"
            },
            "HistoryAdded": {
                "required": [],
                "valid": {
                    "params": {}
                },
                "description": "Fired when new history about an incident is added"
            },
            "Completed": {
                "required": [],
                "valid": {
                    "params": {}
                },
                "description": "Fired when an incident has fully completed"
            }
        }
    },
    "subalarm": {
        "correlation_id": "ca4c39c2-6b52-48b9-a6b7-b090e8995917",
        "attributes": {
            "alarmState": {
                "readonly": true,
                "required": true,
                "type": "enum",
                "description": "The combined state of the alarm across all alerts.",
                "valid": [
                    "INACTIVE",
                    "READY",
                    "PREALERT",
                    "ALERTING",
                    "CLEARING"
                ]
            },
            "securityMode": {
                "readonly": true,
                "required": true,
                "type": "enum",
                "description": "The state of the security alarm.",
                "valid": [
                    "INACTIVE",
                    "DISARMED",
                    "ON",
                    "PARTIAL"
                ]
            },
            "securityArmTime": {
                "readonly": true,
                "required": false,
                "type": "timestamp",
                "description": "The time at which the security system was or will be armed.  This will be cleared when the security system is disarmed."
            },
            "lastArmedTime": {
                "readonly": true,
                "required": false,
                "type": "timestamp",
                "description": "The last time the security alarm was armed."
            },
            "lastArmedBy": {
                "readonly": true,
                "required": false,
                "type": "string",
                "description": "The address of the last person to arm the security alarm, this may be empty if it was armed from a scene or a rule."
            },
            "lastArmedFrom": {
                "readonly": true,
                "required": false,
                "type": "string",
                "description": "The address of the keypad, rule, scene, or app the security alarm was armed from."
            },
            "lastDisarmedTime": {
                "readonly": true,
                "required": false,
                "type": "timestamp",
                "description": "The last time at which the security system was disarmed."
            },
            "lastDisarmedBy": {
                "readonly": true,
                "required": false,
                "type": "string",
                "description": "The address of the last person to disarm the security alarm, this may be empty if it was disarmed from a scene or a rule."
            },
            "lastDisarmedFrom": {
                "readonly": true,
                "required": false,
                "type": "string",
                "description": "The address of the keypad, rule, scene, or app the security alarm was disarmed from."
            },
            "activeAlerts": {
                "readonly": true,
                "required": true,
                "type": "list<enum>",
                "description": "A priority ordered list of alerts that are currently active.  Note that the banner should always use the first element from this list, it is ordered.",
                "valid": [
                    "SECURITY",
                    "PANIC",
                    "SMOKE",
                    "CO",
                    "WATER",
                    "CARE",
                    "WEATHER"
                ]
            },
            "availableAlerts": {
                "readonly": true,
                "required": true,
                "type": "set<enum>",
                "description": "The set of alarms which are supported by the devices paired at the current place.",
                "valid": [
                    "SECURITY",
                    "PANIC",
                    "SMOKE",
                    "CO",
                    "WATER",
                    "CARE",
                    "WEATHER"
                ]
            },
            "monitoredAlerts": {
                "readonly": false,
                "required": true,
                "type": "set<enum>",
                "description": "The set of alarms which are professionally monitored.",
                "valid": [
                    "SECURITY",
                    "PANIC",
                    "SMOKE",
                    "CO",
                    "WATER",
                    "CARE",
                    "WEATHER"
                ]
            },
            "currentIncident": {
                "readonly": true,
                "required": true,
                "type": "string",
                "description": "The currently incident, will be the empty string when there is no current incident.  This may stay populated for a period of time after this incident is over to notify the user that an incident happened next time they login.   Cancelling the incident or disarming from the keypad will clear out the current incident, although it will remain active until dispatch has completed.  When this field is populated the incident screen should be shown."
            },
            "callTree": {
                "readonly": false,
                "required": true,
                "type": "list<CallTreeEntry>",
                "description": "The list of people who should be notified when the alarm goes into alert mode.  This is marked as a list to maintain ordering, but each entry may only appear once. Note that all addresses must be persons associated with this place."
            },
            "testModeEnabled": {
                "readonly": false,
                "required": true,
                "type": "boolean",
                "description": "Flag used by AlarmIncidentService. When true the service implementation should create a mock incident instead. Defaults to false"
            },
            "fanShutoffSupported": {
                "readonly": true,
                "required": true,
                "type": "boolean",
                "description": "Indicates whether fanShutoffOnSmoke and fanShutoffOnCO are supported for the current place.  True if there are any fans, thermostats or space heaters at the current place."
            },
            "fanShutoffOnSmoke": {
                "readonly": false,
                "required": true,
                "type": "boolean",
                "description": "When set to true, all fans, thermostats and space heaters will be turned off when a Smoke alarm is triggered.  Defaults to false."
            },
            "fanShutoffOnCO": {
                "readonly": false,
                "required": true,
                "type": "boolean",
                "description": "When set to true, all fans, thermostats and space heaters will be turned off when a CO alarm is triggered.  Defaults to true"
            },
            "recordingSupported": {
                "readonly": true,
                "required": true,
                "type": "boolean",
                "description": "Whether or not the alarm subsystem supports recording on alarm.  This requires the user to have cameras and a premium / promonitoring service level to support recording."
            },
            "recordOnSecurity": {
                "readonly": false,
                "required": true,
                "type": "boolean",
                "description": "When set to true all cameras will record.  This flag may be true even if recordingSupported is false.  Default to be true."
            },
            "recordingDurationSec": {
                "readonly": false,
                "required": true,
                "type": "int",
                "description": "The number of seconds to record for when a security alarm is triggered.  Default to be 60 seconds.",
                "min": "30",
                "max": "1200"
            },
            "alarmProvider": {
                "readonly": true,
                "required": true,
                "type": "enum",
                "description": "The provider of the alarming implementation. Defaults to PLATFORM.",
                "valid": [
                    "PLATFORM",
                    "HUB"
                ]
            }
        },
        "is_device": false,
        "methods": {
            "ListIncidents": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {}
                }
            },
            "Arm": {
                "enabled": true,
                "required": [
                    "mode"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "mode": {
                            "type": "string",
                            "optional": false
                        }
                    }
                }
            },
            "ArmBypassed": {
                "enabled": true,
                "required": [
                    "mode"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "mode": {
                            "type": "string",
                            "optional": false
                        }
                    }
                }
            },
            "Disarm": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {}
                }
            },
            "Panic": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {}
                }
            },
            "SetProvider": {
                "enabled": true,
                "required": [
                    "provider"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "provider": {
                            "type": "enum",
                            "optional": false
                        }
                    },
                    "provider": [
                        "PLATFORM",
                        "HUB"
                    ]
                }
            }
        },
        "events": {}
    },
    "alert": {
        "correlation_id": "7a9e8e88-6689-486c-8bce-255129f9c78c",
        "attributes": {
            "state": {
                "readonly": false,
                "required": true,
                "type": "enum",
                "description": "Reflects the current state of the alert where quiet means that whatever alarm the device is now silent and alerting implies the device is currently alarming (blinking lights, making some noise).",
                "valid": [
                    "QUIET",
                    "ALERTING"
                ]
            },
            "maxAlertSecs": {
                "readonly": false,
                "required": true,
                "type": "int",
                "description": "Maximum number of seconds that the alert device will stay in alerting state before it will be reset to quiet automatically by its driver. 0 = No Limit."
            },
            "defaultMaxAlertSecs": {
                "readonly": true,
                "required": true,
                "type": "int",
                "description": "Default value of maxAlertSecs."
            },
            "lastAlertTime": {
                "readonly": true,
                "required": true,
                "type": "timestamp",
                "description": "The last time this device went to alert state."
            }
        },
        "is_device": true,
        "methods": {},
        "events": {}
    },
    "aosmithwaterheatercontroller": {
        "correlation_id": "f1a47db8-f3db-4f5f-9b52-ec3170b2fc2d",
        "attributes": {
            "updaterate": {
                "readonly": false,
                "required": true,
                "type": "int",
                "description": "The rate in seconds of how often the water heater polls the platform."
            },
            "units": {
                "readonly": false,
                "type": "enum",
                "description": "The display unit of the temperation.",
                "valid": [
                    "C",
                    "F"
                ]
            },
            "controlmode": {
                "readonly": false,
                "required": true,
                "type": "enum",
                "description": "This is the mode setting of the device, not whether or not it is actually heating the water at the moment.",
                "valid": [
                    "STANDARD",
                    "VACATION",
                    "ENERGY_SMART"
                ]
            },
            "leakdetect": {
                "readonly": false,
                "required": false,
                "type": "enum",
                "description": "Enable or disable leak detection. Or report that no sensor is present and force to disabled.",
                "valid": [
                    "DISABLED",
                    "ENABLED",
                    "NOTDETECTED"
                ]
            },
            "leak": {
                "readonly": true,
                "required": false,
                "type": "enum",
                "description": "Water conductivity detected on probes.",
                "valid": [
                    "NONE",
                    "DETECTED",
                    "UNPLUGGED",
                    "ERROR"
                ]
            },
            "gridenabled": {
                "readonly": true,
                "required": true,
                "type": "boolean",
                "description": "This device was originally destined for utilities, so if the grid is controlling your device, it means you are responding to commands over Wifi."
            },
            "dryfire": {
                "readonly": true,
                "required": true,
                "type": "boolean",
                "description": "Detects that a dry-fire condition was present"
            },
            "elementfail": {
                "readonly": true,
                "required": true,
                "type": "enum",
                "description": "Status of upper and lower elements",
                "valid": [
                    "NONE",
                    "UPPER",
                    "LOWER",
                    "UPPER_LOWER"
                ]
            },
            "tanksensorfail": {
                "readonly": true,
                "required": true,
                "type": "enum",
                "description": "Status of uppwer and lower temperature sensors.",
                "valid": [
                    "NONE",
                    "UPPER",
                    "LOWER",
                    "UPPER_LOWER"
                ]
            },
            "ecoerror": {
                "readonly": true,
                "required": true,
                "type": "boolean",
                "description": "Mechanical tank over temperature sensor."
            },
            "masterdispfail": {
                "readonly": true,
                "type": "enum",
                "description": "Master (ET) and Display (ESM) self-test status",
                "valid": [
                    "NONE",
                    "MASTER",
                    "DISPLAY"
                ]
            },
            "errors": {
                "readonly": true,
                "required": true,
                "type": "map<string>",
                "description": "Contains a map of device error codes to verbose, user-friendly definitions."
            },
            "modelnumber": {
                "readonly": false,
                "required": false,
                "type": "string",
                "description": "Model number as recorded on the heater's label "
            },
            "serialnumber": {
                "readonly": false,
                "required": false,
                "type": "string",
                "description": "Serial number as recorded on the heater's label "
            }
        },
        "is_device": true,
        "methods": {},
        "events": {}
    },
    "atmos": {
        "correlation_id": "de979140-26f4-4548-9691-6de5b78a1d24",
        "attributes": {
            "pressure": {
                "readonly": true,
                "required": true,
                "type": "double",
                "description": "Atmospheric air pressure."
            }
        },
        "is_device": true,
        "methods": {},
        "events": {}
    },
    "bridge": {
        "correlation_id": "d05c04e9-2b82-4f15-905a-3a74685f1502",
        "attributes": {
            "pairedDevices": {
                "readonly": true,
                "required": true,
                "type": "map<string>",
                "description": "Map from bridge-owned device identifier to the protocol address of paired children devices"
            },
            "unpairedDevices": {
                "readonly": true,
                "required": true,
                "type": "set<string>",
                "description": "Set of bridge-owned device identifiers that have been seen but not paired."
            },
            "pairingState": {
                "readonly": true,
                "required": true,
                "type": "enum",
                "description": "The current pairing state of the bridge device.  PAIRING indicates that any new devices seen will be paired, UNPAIRING that devices are being removed and IDLE means neither",
                "valid": [
                    "PAIRING",
                    "UNPAIRING",
                    "IDLE"
                ]
            },
            "numDevicesSupported": {
                "readonly": true,
                "required": true,
                "type": "int",
                "description": "Total number of devices this bridge can support."
            }
        },
        "is_device": true,
        "methods": {
            "StartPairing": {
                "enabled": true,
                "required": [
                    "device",
                    "timeout"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "device": {
                            "type": "string",
                            "decription": "The name of the bridge device."
                        },
                        "timeout": {
                            "type": "long",
                            "description": "Amount of time that the bridge device will stay in pairing mode in milliseconds.",
                            "optional": false
                        }
                    }
                }
            },
            "StopPairing": {
                "enabled": true,
                "required": [
                    "device"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "device": {
                            "type": "string",
                            "decription": "The name of the bridge device."
                        }
                    }
                }
            }
        },
        "events": {}
    },
    "bridgechild": {
        "correlation_id": "cb6069f0-8fac-42d3-b856-cd627bd6cc4b",
        "attributes": {
            "parentAddress": {
                "readonly": true,
                "required": true,
                "type": "string",
                "description": "The parent device's protocol address."
            },
            "bridgeSpecificId": {
                "readonly": true,
                "required": true,
                "type": "string",
                "description": "The id assigned to this child device by its parent bridge device."
            }
        },
        "is_device": true,
        "methods": {},
        "events": {}
    },
    "but": {
        "correlation_id": "08a3e8ba-2398-4125-b657-9e301eab7986",
        "attributes": {
            "state": {
                "readonly": false,
                "required": true,
                "type": "enum",
                "description": "Reflects the current state of the button where pressed implies the user has pressed the button and released the opposite. Also used to set the state of the button.",
                "valid": [
                    "PRESSED",
                    "RELEASED"
                ]
            },
            "statechanged": {
                "readonly": true,
                "required": true,
                "type": "timestamp",
                "description": "UTC date time of last state change"
            }
        },
        "is_device": true,
        "methods": {},
        "events": {}
    },
    "camera": {
        "correlation_id": "835d9daf-c220-42b8-8a85-7bfd42e486ba",
        "attributes": {
            "privacy": {
                "readonly": true,
                "required": false,
                "type": "boolean",
                "description": "When true, camera's privacy function is enabled"
            },
            "resolutionssupported": {
                "readonly": true,
                "required": false,
                "type": "list<string>",
                "description": "List of resolutions supported by the camera e.g. 160x120, 320x240, 640x480, 1280x960 "
            },
            "resolution": {
                "readonly": false,
                "required": false,
                "type": "string",
                "description": "Current resolution of the camera. Must appear in resolutionssupported list."
            },
            "bitratetype": {
                "readonly": false,
                "required": false,
                "type": "enum",
                "description": "Constant bit rate or variable bit rate",
                "valid": [
                    "cbr",
                    "vbr"
                ]
            },
            "bitratessupported": {
                "readonly": true,
                "required": false,
                "type": "list<string>",
                "description": "List of bitrates supported by the camera e.g. 32K, 64K, 96K, 128K, 256K, 384K, 512K, 768K, 1024K, 1280K, 2048K"
            },
            "bitrate": {
                "readonly": false,
                "required": false,
                "type": "string",
                "description": "Only valid when bitrate type is cbr. Must appear in bitratessupported list."
            },
            "qualitiessupported": {
                "readonly": true,
                "required": false,
                "type": "list<string>",
                "description": "List of quality levels supported by the camera e.g Very Low, Low, Normal, High, Very High"
            },
            "quality": {
                "readonly": false,
                "required": false,
                "type": "string",
                "description": "Current quality of the camera. Must appear in qualitiessupported list."
            },
            "minframerate": {
                "readonly": true,
                "required": false,
                "type": "int",
                "description": "Minimum framerate supported."
            },
            "maxframerate": {
                "readonly": true,
                "required": false,
                "type": "int",
                "description": "Maximum framerate supported."
            },
            "framerate": {
                "readonly": false,
                "required": false,
                "type": "int",
                "description": "Current framerate of the camera. Must be minframerate <= framerate <= maxframerate"
            },
            "flip": {
                "readonly": false,
                "required": false,
                "type": "boolean",
                "description": "When true, camera's image is flipped vertically"
            },
            "mirror": {
                "readonly": false,
                "required": false,
                "type": "boolean",
                "description": "When true, camera's image is mirrored horizontally"
            },
            "irLedSupportedModes": {
                "readonly": true,
                "required": false,
                "type": "set<string>",
                "description": "What camera IR LED modes are supported?"
            },
            "irLedMode": {
                "readonly": false,
                "required": false,
                "type": "enum",
                "description": "Reflects the mode of IR LED on the camera.",
                "valid": [
                    "ON",
                    "OFF",
                    "AUTO"
                ]
            },
            "irLedLuminance": {
                "readonly": false,
                "required": false,
                "type": "int",
                "description": "Reflects the current IR LED luminance, on a scale of 1 to 5.",
                "min": "1",
                "max": "5"
            }
        },
        "is_device": true,
        "methods": {
            "StartStreaming": {
                "enabled": true,
                "required": [
                    "device",
                    "url",
                    "username",
                    "password",
                    "maxDuration"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "device": {
                            "type": "string",
                            "decription": "The name of the camera device."
                        },
                        "url": {
                            "type": "string",
                            "description": "The url to stream to",
                            "optional": false
                        },
                        "username": {
                            "type": "string",
                            "description": "The username to authenticate with",
                            "optional": false
                        },
                        "password": {
                            "type": "string",
                            "description": "The password to authenticate with",
                            "optional": false
                        },
                        "maxDuration": {
                            "type": "int",
                            "description": "The maximum time in seconds to stream",
                            "optional": false
                        }
                    }
                }
            }
        },
        "events": {}
    },
    "cameraptz": {
        "correlation_id": "2572c62f-adf0-4ec2-9a5f-962dcef29381",
        "attributes": {
            "currentPan": {
                "readonly": true,
                "required": true,
                "type": "int",
                "description": "Curent camera pan position, in degrees",
                "min": "0",
                "max": "359"
            },
            "currentTilt": {
                "readonly": true,
                "required": true,
                "type": "int",
                "description": "Curent camera tilt position, in degrees",
                "min": "0",
                "max": "180"
            },
            "currentZoom": {
                "readonly": true,
                "required": false,
                "type": "int",
                "description": "Curent camera zoom value",
                "min": "0",
                "max": "100"
            },
            "maximumPan": {
                "readonly": true,
                "required": true,
                "type": "int",
                "description": "Maximum camera pan position, in degrees",
                "min": "0",
                "max": "359"
            },
            "minimumPan": {
                "readonly": true,
                "required": true,
                "type": "int",
                "description": "Minimum camera pan position, in degrees",
                "min": "0",
                "max": "359"
            },
            "maximumTilt": {
                "readonly": true,
                "required": true,
                "type": "int",
                "description": "Maximum camera tilt position, in degrees",
                "min": "0",
                "max": "180"
            },
            "minimumTilt": {
                "readonly": true,
                "required": true,
                "type": "int",
                "description": "Minimum camera tilt position, in degrees",
                "min": "0",
                "max": "180"
            },
            "maximumZoom": {
                "readonly": true,
                "required": false,
                "type": "int",
                "description": "Maximum camera zoom value",
                "min": "0",
                "max": "100"
            },
            "minimumZoom": {
                "readonly": true,
                "required": false,
                "type": "int",
                "description": "Minimum camera zoom value",
                "min": "0",
                "max": "100"
            }
        },
        "is_device": true,
        "methods": {
            "GotoHome": {
                "enabled": true,
                "required": [
                    "device"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "device": {
                            "type": "string",
                            "decription": "The name of the cameraptz device."
                        }
                    }
                }
            },
            "GotoAbsolute": {
                "enabled": true,
                "required": [
                    "device",
                    "pan",
                    "tilt"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "device": {
                            "type": "string",
                            "decription": "The name of the cameraptz device."
                        },
                        "pan": {
                            "type": "int",
                            "description": "Absolute pan position",
                            "optional": false
                        },
                        "tilt": {
                            "type": "int",
                            "description": "Absolute tilt position",
                            "optional": false
                        },
                        "zoom": {
                            "type": "int",
                            "description": "Absolute zoom value",
                            "optional": true
                        }
                    }
                }
            },
            "GotoRelative": {
                "enabled": true,
                "required": [
                    "device",
                    "deltaPan",
                    "deltaTilt"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "device": {
                            "type": "string",
                            "decription": "The name of the cameraptz device."
                        },
                        "deltaPan": {
                            "type": "int",
                            "description": "Relative pan position",
                            "optional": false
                        },
                        "deltaTilt": {
                            "type": "int",
                            "description": "Relative tilt position",
                            "optional": false
                        },
                        "deltaZoom": {
                            "type": "int",
                            "description": "Relative zoom value",
                            "optional": true
                        }
                    }
                }
            }
        },
        "events": {}
    },
    "subcameras": {
        "correlation_id": "339af5bc-1e91-446b-b3e0-ec8a8c0d2c14",
        "attributes": {
            "cameras": {
                "readonly": true,
                "required": true,
                "type": "set<String>",
                "description": "The addresses of cameras defined at this place"
            },
            "offlineCameras": {
                "readonly": true,
                "required": true,
                "type": "set<String>",
                "description": "The addresses of offline cameras defined at this place"
            },
            "warnings": {
                "readonly": true,
                "required": true,
                "type": "map<String>",
                "description": "A set of warnings about devices.  The key is the address of the device with a warning and the value is an I18N code with the description of the problem."
            },
            "recordingEnabled": {
                "readonly": true,
                "required": true,
                "type": "boolean",
                "description": "Whether or not recording is enabled based on the service level"
            },
            "maxSimultaneousStreams": {
                "readonly": false,
                "required": true,
                "type": "int",
                "description": "An estimate of how many simultaneous streams can be supported.  NOTE: While this is currently r/w for testing purposes, it will likely be made read-only in the future and should not be directly exposed as a writable attribute to the end-user.",
                "min": "1",
                "max": "6"
            }
        },
        "is_device": false,
        "methods": {},
        "events": {}
    },
    "camerastatus": {
        "correlation_id": "28646261-8712-40a1-bee1-c2b53ab1366a",
        "attributes": {
            "camera": {
                "readonly": true,
                "required": true,
                "type": "string",
                "description": "The address of the associated camera."
            },
            "state": {
                "readonly": true,
                "required": true,
                "type": "enum",
                "description": "An *estimate* of the current state of the camera.  This should be used for displaying metadata not as a guarantee that prevents new recordings / streams from being attempted.",
                "valid": [
                    "OFFLINE",
                    "IDLE",
                    "RECORDING",
                    "STREAMING"
                ]
            },
            "lastRecording": {
                "readonly": true,
                "required": false,
                "type": "string",
                "description": " Address of the last recording completed by the camera. This will be the empty string in the following cases:  - Camera has never completed a recording  - The most recent recording has been deleted by the user           "
            },
            "lastRecordingTime": {
                "readonly": true,
                "required": false,
                "type": "timestamp",
                "description": " Start time of the last recording that has completed for this camera. Note it will not be updated until the current recording completes.  Also it may contain a time for a non-existent recording if the user has deleted the most recent recording.          "
            },
            "activeRecording": {
                "readonly": true,
                "required": false,
                "type": "string",
                "description": "The address of the video that the camera is currently streaming / recording."
            }
        },
        "is_device": false,
        "methods": {},
        "events": {}
    },
    "co": {
        "correlation_id": "cf8ce694-3ead-48ee-b5e5-f9dfa6a6359e",
        "attributes": {
            "co": {
                "readonly": true,
                "required": true,
                "type": "enum",
                "description": "Reflects the state of the carbon monoxide presence. When 'DETECTED' the sensor has detected CO, when 'SAFE' no CO has been detected.",
                "valid": [
                    "SAFE",
                    "DETECTED"
                ]
            },
            "eol": {
                "readonly": true,
                "required": false,
                "type": "enum",
                "description": "Reflects the state of the carbon monoxide sensor itself. When 'OK' the sensor is operational, when 'EOL' the sensor has reached its 'end-of-life' and should be replaced.",
                "valid": [
                    "OK",
                    "EOL"
                ]
            },
            "cochanged": {
                "readonly": true,
                "required": true,
                "type": "timestamp",
                "description": "UTC date time of last co change"
            },
            "coppm": {
                "readonly": true,
                "required": false,
                "type": "long",
                "description": "Measured value of the Carbon Monoxide in the room in parts per million"
            }
        },
        "is_device": true,
        "methods": {},
        "events": {}
    },
    "subcare": {
        "correlation_id": "ec0df3c9-b4f3-4fc2-81dc-a972aea49f7d",
        "attributes": {
            "triggeredDevices": {
                "readonly": true,
                "required": true,
                "type": "set<string>",
                "description": "The addresses of all the currently triggered care-capable devices in this place."
            },
            "inactiveDevices": {
                "readonly": true,
                "required": true,
                "type": "set<string>",
                "description": "The addresses of all the currently inactive care-capable devices in this place."
            },
            "careDevices": {
                "readonly": false,
                "required": true,
                "type": "set<string>",
                "description": "This addresses of all the current care devices in this place."
            },
            "careCapableDevices": {
                "readonly": true,
                "required": true,
                "type": "set<string>",
                "description": "The addresses of all the current care-capable devices in this place."
            },
            "behaviors": {
                "readonly": true,
                "required": true,
                "type": "set<string>",
                "description": "The list of ids of behaviors that are currently defined on the subsystem.  Use ListBehaviors to get details."
            },
            "activeBehaviors": {
                "readonly": true,
                "required": true,
                "type": "set<string>",
                "description": "The list of ids of behaviors that are currently active"
            },
            "alarmMode": {
                "readonly": false,
                "required": true,
                "type": "enum",
                "description": "Whether the care alarm is currently turned on or in visit mode.  During visit mode behaviors will not trigger the care alarm, but the care pendant may still generate a panic.",
                "valid": [
                    "ON",
                    "VISIT"
                ]
            },
            "alarmState": {
                "readonly": true,
                "required": true,
                "type": "enum",
                "description": "Whether the alarm is currently going of or not.",
                "valid": [
                    "READY",
                    "ALERT"
                ]
            },
            "lastAlertTime": {
                "readonly": true,
                "required": true,
                "type": "timestamp",
                "description": "The last time the alarm was fired."
            },
            "lastAlertCause": {
                "readonly": true,
                "required": true,
                "type": "string",
                "description": "The reason the alarm was fired."
            },
            "lastAlertTriggers": {
                "readonly": true,
                "required": true,
                "type": "map<timestamp>",
                "description": "A map of behavior id to timestamp of when a behavior was triggered during an alert.  This map will not be populated until the alarm enters the alert state. Note this will only include the first time a behavior was triggered during an alert.  For more detailed information see the history log."
            },
            "lastAcknowledgement": {
                "readonly": true,
                "required": true,
                "type": "enum",
                "description": "The current state of acknowledgement:     PENDING - Iris is attempting to notify the user that an alarm has been triggered     ACKNOWLEDGED - One of the persons from the call tree has acknowledged the alarm     FAILED - No one acknowledged the alarm but no one was available to acknowledged it.",
                "valid": [
                    "PENDING",
                    "ACKNOWLEDGED",
                    "FAILED"
                ]
            },
            "lastAcknowledgementTime": {
                "readonly": true,
                "required": true,
                "type": "timestamp",
                "description": "The last time at which acknowledgement changed to ACKNOWLEDGED or FAILED.  This will be empty when lastAcknowledgement is PENDING."
            },
            "lastAcknowledgedBy": {
                "readonly": true,
                "required": true,
                "type": "string",
                "description": "The actor that acknowledge the alarm when lastAcknowledgement is ACKNOWLEDGED.  Otherwise this field will be empty."
            },
            "lastClearTime": {
                "readonly": true,
                "required": true,
                "type": "timestamp",
                "description": "The last time the alarm was disarmed.  This is the time that Disarm was requested, not the time at which CLEARING completed."
            },
            "lastClearedBy": {
                "readonly": true,
                "required": true,
                "type": "string",
                "description": "The actor that disarmed the alarm, if available.  If it can't be determined this will be empty."
            },
            "callTreeEnabled": {
                "readonly": true,
                "required": true,
                "type": "boolean",
                "description": "Whether the call tree should be used or just the account owner should be notified in an alarm scenario.  This will currently be false when the place is on BASIC and true when the place is on PREMIUM."
            },
            "callTree": {
                "readonly": false,
                "required": true,
                "type": "list<CallTreeEntry>",
                "description": " The call tree of users to notify when an alarm is triggered.  This list includes all the persons associated with the current place, whether or not they are alerted is determined by the boolean flag.  Order is determined by the order of the list."
            },
            "silent": {
                "readonly": false,
                "required": true,
                "type": "boolean",
                "description": "When true only notifications will be sent, alert devices will not be triggered."
            },
            "careDevicesPopulated": {
                "readonly": true,
                "required": true,
                "type": "boolean",
                "description": "Flag indicating that careDevices has been initialized from careCapableDevices.  This is to initialize the field a single time. Data FIX"
            }
        },
        "is_device": false,
        "methods": {
            "Panic": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {}
                }
            },
            "Acknowledge": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {}
                }
            },
            "Clear": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {}
                }
            },
            "ListActivity": {
                "enabled": true,
                "required": [
                    "start",
                    "end",
                    "bucket"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "start": {
                            "type": "timestamp",
                            "description": "The start time of the interval",
                            "optional": false
                        },
                        "end": {
                            "type": "timestamp",
                            "description": "The end time of the interval",
                            "optional": false
                        },
                        "bucket": {
                            "type": "int",
                            "description": "The number of seconds in each bucket",
                            "optional": false
                        },
                        "devices": {
                            "type": "set<string>",
                            "description": "The devices to show activity for",
                            "optional": true
                        }
                    }
                }
            },
            "ListDetailedActivity": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {
                        "limit": {
                            "type": "int",
                            "description": "The maximum number of events to return (defaults to 10)",
                            "optional": true
                        },
                        "token": {
                            "type": "string",
                            "description": "The token from a previous query to use for retrieving the next set of results. Note an exact time may be jumped to by specifying token as a timestamp in epoch milliseconds.",
                            "optional": true
                        },
                        "devices": {
                            "type": "set<string>",
                            "description": "The devices to show activity for. If none are specified the value of careDevices will be used.",
                            "optional": true
                        }
                    }
                }
            },
            "ListBehaviors": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {}
                }
            },
            "ListBehaviorTemplates": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {}
                }
            },
            "AddBehavior": {
                "enabled": true,
                "required": [
                    "behavior"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "behavior": {
                            "type": "CareBehavior",
                            "description": "Behavior to add.",
                            "optional": false
                        }
                    }
                }
            },
            "UpdateBehavior": {
                "enabled": true,
                "required": [
                    "behavior"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "behavior": {
                            "type": "CareBehavior",
                            "description": "Behavior to add.",
                            "optional": false
                        }
                    }
                }
            },
            "RemoveBehavior": {
                "enabled": true,
                "required": [
                    "id"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "id": {
                            "type": "String",
                            "description": "Id of the behavior to remove.",
                            "optional": false
                        }
                    }
                }
            }
        },
        "events": {
            "BehaviorAlert": {
                "required": [
                    "behaviorId",
                    "behaviorName",
                    "triggeredDevices"
                ],
                "valid": {
                    "params": {
                        "behaviorId": {
                            "type": "String",
                            "description": "Behavior that triggered the alert.",
                            "optional": false
                        },
                        "behaviorName": {
                            "type": "String",
                            "description": "Behavior Name that triggered the alert.",
                            "optional": false
                        },
                        "triggeredDevices": {
                            "type": "set<string>",
                            "description": "List of device addresses that triggered the Care Alert",
                            "optional": false
                        }
                    }
                },
                "description": "Alerts the system that a behaviors has triggered an alert."
            },
            "BehaviorAlertCleared": {
                "required": [],
                "valid": {
                    "params": {}
                },
                "description": "The care alert has been cleared."
            },
            "BehaviorAlertAcknowledged": {
                "required": [],
                "valid": {
                    "params": {}
                },
                "description": "The care alert has been ackknowledged."
            },
            "BehaviorAction": {
                "required": [
                    "behaviorId",
                    "behaviorName",
                    "behaviorAction"
                ],
                "valid": {
                    "params": {
                        "behaviorId": {
                            "type": "String",
                            "description": "The behavior id of the modified behavior.",
                            "optional": false
                        },
                        "behaviorName": {
                            "type": "String",
                            "description": "The behavior name of the modified behavior",
                            "optional": false
                        },
                        "behaviorAction": [
                            "ADDED",
                            "MODIFIED",
                            "DELETED"
                        ]
                    }
                },
                "description": "Alerts the system that a behaviors has triggered an alert."
            }
        }
    },
    "cellbackup": {
        "correlation_id": "126330a9-12c1-425e-8392-3ee5122540cc",
        "attributes": {
            "status": {
                "readonly": true,
                "required": true,
                "type": "enum",
                "description": " READY:  Will work: Modem is plugged in, healthy, connected, and add on subscription exists for place ACTIVE:  Is working: Hub is actively connected to hub bridge via cellular NOTREADY:  Will not work (user recoverable) : check notReadyState to see if they need a modem or a subscription ERRORED:  Will not work (requires contact center) : check erroredState for more information ",
                "valid": [
                    "READY",
                    "ACTIVE",
                    "NOTREADY",
                    "ERRORED"
                ]
            },
            "errorState": {
                "readonly": true,
                "required": true,
                "type": "enum",
                "description": " NONE:  No error NOSIM:  Modem is plugged in but does not have a SIM NOTPROVISIONED:  Modem is plugged in but SIM is/was not properly provisioned DISABLED: BANNED: OTHER:  Modem is pluggin in and has a provisioned SIM but for some reason it cannot connect (hub4g:connectionStatus will have a vendor specific code as to why) ",
                "valid": [
                    "NONE",
                    "NOSIM",
                    "NOTPROVISIONED",
                    "DISABLED",
                    "BANNED",
                    "OTHER"
                ]
            },
            "notReadyState": {
                "readonly": true,
                "required": true,
                "type": "enum",
                "description": " NEEDSSUB:  Modem is plugged in, healthy, and connected, but no add on subscription for place exists NEEDSMODEM:  Add on subscription for place exists, but no modem plugged in BOTH:  Needs both modem and subscription ",
                "valid": [
                    "NEEDSSUB",
                    "NEEDSMODEM",
                    "BOTH"
                ]
            }
        },
        "is_device": false,
        "methods": {
            "Ban": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {}
                }
            },
            "Unban": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {}
                }
            }
        },
        "events": {
            "CellAccessBanned": {
                "required": [],
                "valid": {
                    "params": {}
                },
                "description": "Event emitted from the subsystem to the hub-bridges to boot the hub if it is currently connected by cell backup"
            },
            "CellAccessUnbanned": {
                "required": [],
                "valid": {
                    "params": {}
                },
                "description": "Event emitted from the subsystem to the hub-bridges to boot the hub if it is currently connected by cell backup"
            }
        }
    },
    "centralitesmartplug": {
        "correlation_id": "a2e8cac4-833c-4eae-8ec2-70f1c7c4453f",
        "attributes": {
            "homeid": {
                "readonly": true,
                "required": true,
                "type": "string",
                "description": ""
            },
            "nodeid": {
                "readonly": true,
                "required": true,
                "type": "string",
                "description": ""
            }
        },
        "is_device": true,
        "methods": {
            "SetLearnMode": {
                "enabled": true,
                "required": [
                    "device"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "device": {
                            "type": "string",
                            "decription": "The name of the centralitesmartplug device."
                        }
                    }
                }
            },
            "SendNif": {
                "enabled": true,
                "required": [
                    "device"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "device": {
                            "type": "string",
                            "decription": "The name of the centralitesmartplug device."
                        }
                    }
                }
            },
            "Reset": {
                "enabled": true,
                "required": [
                    "device"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "device": {
                            "type": "string",
                            "decription": "The name of the centralitesmartplug device."
                        }
                    }
                }
            },
            "Pair": {
                "enabled": true,
                "required": [
                    "device"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "device": {
                            "type": "string",
                            "decription": "The name of the centralitesmartplug device."
                        }
                    }
                }
            },
            "Query": {
                "enabled": true,
                "required": [
                    "device"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "device": {
                            "type": "string",
                            "decription": "The name of the centralitesmartplug device."
                        }
                    }
                }
            }
        },
        "events": {}
    },
    "subclimate": {
        "correlation_id": "2ac447d0-8786-4b82-8dd8-56b9d75f6fc2",
        "attributes": {
            "controlDevices": {
                "readonly": true,
                "required": true,
                "type": "set<String>",
                "description": "The addresses of all the climate control devices in the climate subsystem, this includes thermostats, fans, vents and spaceheaters."
            },
            "temperatureDevices": {
                "readonly": true,
                "required": true,
                "type": "set<String>",
                "description": "The addresses of all the devices in the place that have the temperature capability."
            },
            "humidityDevices": {
                "readonly": true,
                "required": true,
                "type": "set<String>",
                "description": "The addresses of all the devices in the place that have the humidity capability."
            },
            "thermostats": {
                "readonly": true,
                "required": true,
                "type": "set<String>",
                "description": "DEPRECATED: This attribute is deprecated and will be removed in future iterations! The addresses of all the devices in the place that have the thermostat capability."
            },
            "thermostatSchedules": {
                "readonly": true,
                "required": true,
                "type": "map<ThermostatScheduleStatus>",
                "description": "The current status of the schedule for each thermostat"
            },
            "closedVents": {
                "readonly": true,
                "required": true,
                "type": "set<String>",
                "description": " The addresses of all vents that are currently closed."
            },
            "activeFans": {
                "readonly": true,
                "required": true,
                "type": "set<String>",
                "description": "The addresses of all fans that are currently turned on."
            },
            "primaryTemperatureDevice": {
                "readonly": false,
                "required": false,
                "type": "string",
                "description": "The temperature sensor that should be used when displaying the temperature for the whole place.  This may be null if no devices support temperature."
            },
            "primaryHumidityDevice": {
                "readonly": false,
                "required": false,
                "type": "string",
                "description": " The humidity sensor that should be used when displaying the humidity for the whole place.  This may be null if no devices support humidity."
            },
            "primaryThermostat": {
                "readonly": false,
                "required": false,
                "type": "string",
                "description": "The primary thermostat for the house, this may be null if there are no thermostat devices."
            },
            "temperature": {
                "readonly": true,
                "required": false,
                "type": "double",
                "description": "The current temperature for the place, this may be null if there are no temperature devices.  This is currently calculated from primaryTemperatureDevice."
            },
            "humidity": {
                "readonly": true,
                "required": false,
                "type": "double",
                "description": "The current humidity for the place, this may be null if there are no humidity devices.  This is currently calculated from primaryHumidityDevice."
            },
            "activeHeaters": {
                "readonly": true,
                "required": true,
                "type": "set<String>",
                "description": "The addresses of all devices that implement spaceheater and have heatstate value of ON"
            }
        },
        "is_device": false,
        "methods": {
            "EnableScheduler": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {
                        "thermostat": {
                            "type": "String",
                            "description": "The address of the thermostat to enable the schedule for"
                        }
                    }
                }
            },
            "DisableScheduler": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {
                        "thermostat": {
                            "type": "String",
                            "description": "The address of the thermostat to disable the schedule for"
                        }
                    }
                }
            }
        },
        "events": {}
    },
    "clock": {
        "correlation_id": "1955263b-0489-4861-9cb6-9a3a6703bf69",
        "attributes": {
            "year": {
                "readonly": true,
                "required": true,
                "type": "int",
                "description": "Year gregorian calendar",
                "min": "0",
                "max": "9999"
            },
            "month": {
                "readonly": true,
                "required": true,
                "type": "int",
                "description": "Month 1-12 (Jan - Dec)",
                "min": "1",
                "max": "12"
            },
            "day": {
                "readonly": true,
                "required": true,
                "type": "int",
                "description": "Day of the month",
                "min": "1",
                "max": "31"
            },
            "hour": {
                "readonly": true,
                "required": true,
                "type": "int",
                "description": "Hour of the day 0-23.  Midnight = 0",
                "min": "0",
                "max": "23"
            },
            "minute": {
                "readonly": true,
                "required": true,
                "type": "int",
                "description": "Minute of the hour",
                "min": "0",
                "max": "59"
            },
            "second": {
                "readonly": true,
                "required": true,
                "type": "int",
                "description": "Second of the minute",
                "min": "0",
                "max": "59"
            },
            "day_of_week": {
                "readonly": true,
                "required": true,
                "type": "int",
                "description": "Day of the week",
                "min": "1",
                "max": "7"
            }
        },
        "is_device": true,
        "methods": {},
        "events": {}
    },
    "color": {
        "correlation_id": "4b99a32c-d69b-4210-8101-4355c14db6d7",
        "attributes": {
            "hue": {
                "readonly": false,
                "required": true,
                "type": "int",
                "description": "Reflects the current hue or for lack of a better word color. May also be used to set the hue. Range is 0-360 angular degrees.",
                "min": "0",
                "max": "360"
            },
            "saturation": {
                "readonly": false,
                "required": true,
                "type": "int",
                "description": "The saturation or intensity of the hue. Lower values result in less intensity (more gray) and higher values result in a more intense hue (less gray). May also be used to set the saturation.",
                "min": "0",
                "max": "100"
            }
        },
        "is_device": true,
        "methods": {},
        "events": {}
    },
    "colortemp": {
        "correlation_id": "c05211ad-44a8-4290-b4db-1721559607a9",
        "attributes": {
            "colortemp": {
                "readonly": false,
                "required": true,
                "type": "int",
                "description": "Current color temperature in degrees Kelvin."
            },
            "mincolortemp": {
                "readonly": true,
                "required": true,
                "type": "int",
                "description": "Warmest color temperature supported."
            },
            "maxcolortemp": {
                "readonly": true,
                "required": true,
                "type": "int",
                "description": "Coolest color temperature supported."
            }
        },
        "is_device": true,
        "methods": {},
        "events": {}
    },
    "cont": {
        "correlation_id": "55f8a735-f54c-4c26-bee0-f04cddecb224",
        "attributes": {
            "contact": {
                "readonly": true,
                "required": true,
                "type": "enum",
                "description": "Reflects the state of the contact sensor (opened or closed).",
                "valid": [
                    "OPENED",
                    "CLOSED"
                ]
            },
            "contactchanged": {
                "readonly": true,
                "required": true,
                "type": "timestamp",
                "description": "UTC date time of last contact change"
            },
            "usehint": {
                "readonly": false,
                "required": true,
                "type": "enum",
                "description": "How the device should be treated for display to the user.  UNKNOWN indicates this value hasn't been set and the user should be queried for how it was installed.  Some devices, such as door hinges, may populate this with an initial value of DOOR or WINDOW, but most drivers will initialize it to UNKNOWN",
                "valid": [
                    "DOOR",
                    "WINDOW",
                    "OTHER",
                    "UNKNOWN"
                ]
            }
        },
        "is_device": true,
        "methods": {},
        "events": {}
    },
    "daynight": {
        "correlation_id": "b7f1cea8-55ef-4191-b86b-c2bfa1806e41",
        "attributes": {
            "mode": {
                "readonly": true,
                "required": true,
                "type": "enum",
                "description": "Indicates whether sensor believes it is day or night",
                "valid": [
                    "day",
                    "night"
                ]
            },
            "modechanged": {
                "readonly": true,
                "required": true,
                "type": "timestamp",
                "description": "UTC date time of last mode change"
            }
        },
        "is_device": true,
        "methods": {},
        "events": {}
    },
    "devadv": {
        "correlation_id": "78e09435-4445-4723-acff-f9fbf58d4447",
        "attributes": {
            "drivername": {
                "readonly": true,
                "required": true,
                "type": "string",
                "description": "The name of the driver handling the device."
            },
            "driverversion": {
                "readonly": true,
                "required": true,
                "type": "string",
                "description": "The current verison of the driver handling the device."
            },
            "drivercommit": {
                "readonly": true,
                "required": true,
                "type": "string",
                "description": "The commit id from the commit that this file was last changed in."
            },
            "driverhash": {
                "readonly": true,
                "required": true,
                "type": "string",
                "description": "A hash of the contents of the file."
            },
            "protocol": {
                "readonly": true,
                "required": true,
                "type": "string",
                "description": "Protocol supported by the device; should initially be one of (zwave, zigbee, alljoyn, ipcd)"
            },
            "subprotocol": {
                "readonly": true,
                "required": false,
                "type": "string",
                "description": "Sub-protocol supported by the device. For zigbee devices, this may be ha1.1, ha1.2, etc."
            },
            "protocolid": {
                "readonly": true,
                "required": true,
                "type": "string",
                "description": "Protocol specific identifier for this device. This should be globally unique. For zigbee devices this will be the mac address. For zwave devices, this should be homeid.deviceid."
            },
            "errors": {
                "readonly": true,
                "required": true,
                "type": "map<string>",
                "description": "A map where the keys are the errorCode and the values are a more descriptive error message.  These errors should be used for devices that have an error status that may be cleared or may simply indicate the device has passed its usable lifetime.  This is not intended for maintenance errors such as low battery or air filter change."
            },
            "added": {
                "readonly": true,
                "required": true,
                "type": "timestamp",
                "description": "Time at which this device was most recently added (date of driver instantiation)"
            },
            "firmwareVersion": {
                "readonly": true,
                "required": false,
                "type": "string",
                "description": "The firmware version of the device, primarily for devices that do not support OTA. For ZigBee devices it contains the version from the basic cluster, the OTA cluster version goes in devota."
            },
            "hubLocal": {
                "readonly": true,
                "required": true,
                "type": "boolean",
                "description": "True if the device is operating in a hub local manner."
            },
            "degraded": {
                "readonly": true,
                "required": true,
                "type": "boolean",
                "description": "True if the device is operating in a degraded manner for any reason."
            },
            "degradedCode": {
                "readonly": false,
                "required": true,
                "type": "string",
                "description": "The code string indicating the reason that a device is operating in a degraded manner."
            }
        },
        "is_device": true,
        "methods": {
            "UpgradeDriver": {
                "enabled": true,
                "required": [
                    "device"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "device": {
                            "type": "string",
                            "decription": "The name of the devadv device."
                        },
                        "driverName": {
                            "type": "string",
                            "description": "Optional driver name to upgrade this device to.  If specified driverVersion must also be provided.",
                            "optional": true
                        },
                        "driverVersion": {
                            "type": "string",
                            "description": "Optional driver version to upgrade this device to.  If specified driverName must also be provided.",
                            "optional": true
                        }
                    }
                }
            },
            "GetReflexes": {
                "enabled": true,
                "required": [
                    "device"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "device": {
                            "type": "string",
                            "decription": "The name of the devadv device."
                        }
                    }
                }
            }
        },
        "events": {
            "RemovedDevice": {
                "required": [
                    "protocol",
                    "protocolId"
                ],
                "valid": {
                    "params": {
                        "protocol": [
                            ""
                        ],
                        "protocolId": [
                            ""
                        ],
                        "accountId": [
                            ""
                        ],
                        "hubId": [
                            ""
                        ],
                        "status": [
                            "CLEAN",
                            "FORCED",
                            "SPONTANEOUS"
                        ]
                    }
                },
                "description": "Sent when a device has been removed for any reason. This may be very specific to the given protocol and require client interpretation."
            }
        }
    },
    "dev": {
        "correlation_id": "918bed31-fb0a-4090-9f01-fa43b6936127",
        "attributes": {
            "account": {
                "readonly": true,
                "required": true,
                "type": "uuid",
                "description": "Driver-owned account associated with the device"
            },
            "place": {
                "readonly": true,
                "required": true,
                "type": "uuid",
                "description": "Driver-owned place where the device is currently located"
            },
            "devtypehint": {
                "readonly": true,
                "required": false,
                "type": "string",
                "description": "Device Details screen that should be used to view this device"
            },
            "name": {
                "readonly": false,
                "required": true,
                "type": "string",
                "description": "Human readable name for the device"
            },
            "vendor": {
                "readonly": true,
                "required": false,
                "type": "string",
                "description": "Vendor name"
            },
            "model": {
                "readonly": true,
                "required": false,
                "type": "string",
                "description": "Model name"
            },
            "productId": {
                "readonly": true,
                "required": true,
                "type": "string",
                "description": "ID of the product catalog that describes this device"
            }
        },
        "is_device": false,
        "methods": {
            "ListHistoryEntries": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {
                        "limit": {
                            "type": "int",
                            "description": "The maximum number of events to return (defaults to 10)",
                            "optional": true
                        },
                        "token": {
                            "type": "string",
                            "description": "The token from a previous query to use for retrieving the next set of results",
                            "optional": true
                        }
                    }
                }
            },
            "Remove": {
                "enabled": true,
                "required": [
                    "timeout"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "timeout": {
                            "type": "long",
                            "description": "The number of milliseconds that device removal is expected for.",
                            "optional": false
                        }
                    }
                }
            },
            "ForceRemove": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {}
                }
            }
        },
        "events": {
            "DeviceConnected": {
                "required": [],
                "valid": {
                    "params": {}
                },
                "description": "Sent when a device comes online. This may be very specific to the given protocol and require client interpretation."
            },
            "DeviceDisconnected": {
                "required": [],
                "valid": {
                    "params": {}
                },
                "description": "Sent when a device goes offline. This may be very specific to the given protocol and require client interpretation.  Not all drivers will be able to detect this event."
            },
            "DeviceRemoved": {
                "required": [],
                "valid": {
                    "params": {}
                },
                "description": "Sent when a device is removed."
            }
        }
    },
    "devconn": {
        "correlation_id": "41370452-3382-4c40-b051-859b3d612524",
        "attributes": {
            "state": {
                "readonly": true,
                "required": true,
                "type": "enum",
                "description": "Reflects the state of the connection to this device. If the device has intermediate connectivity states at the protocol level, it must be marked as offline until it can be fully controlled by the platform",
                "valid": [
                    "ONLINE",
                    "OFFLINE"
                ]
            },
            "status": {
                "readonly": true,
                "required": true,
                "type": "enum",
                "description": "Reflects the status of the connection to this device.",
                "valid": [
                    "ONLINE",
                    "FLAPPING",
                    "LOST"
                ]
            },
            "lastchange": {
                "readonly": true,
                "required": true,
                "type": "timestamp",
                "description": "Time of the last change in connect.state"
            },
            "signal": {
                "readonly": true,
                "required": false,
                "type": "int",
                "description": "A projection from a protocol transport specific measurement of signal strength. For zigbee or wifi this may be the RSSI normalized to percentage.",
                "min": "0",
                "max": "100"
            }
        },
        "is_device": true,
        "methods": {
            "LostDevice": {
                "enabled": true,
                "required": [
                    "device"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "device": {
                            "type": "string",
                            "decription": "The name of the devconn device."
                        }
                    }
                }
            }
        },
        "events": {}
    },
    "devota": {
        "correlation_id": "1ff106e5-5dce-49e1-abb6-983c507ac7a3",
        "attributes": {
            "currentVersion": {
                "readonly": true,
                "required": true,
                "type": "string",
                "description": "Version of the currently installed firmware."
            },
            "targetVersion": {
                "readonly": true,
                "required": false,
                "type": "string",
                "description": "Version of the target firmware."
            },
            "status": {
                "readonly": true,
                "required": false,
                "type": "enum",
                "description": "Status of the current firmware update process.",
                "valid": [
                    "IDLE",
                    "INPROGRESS",
                    "COMPLETED",
                    "FAILED"
                ]
            },
            "retryCount": {
                "readonly": true,
                "required": false,
                "type": "int",
                "description": "Current firmware update retry count."
            },
            "lastAttempt": {
                "readonly": true,
                "required": false,
                "type": "timestamp",
                "description": "UTC date time of last retry attempt."
            },
            "progressPercent": {
                "readonly": true,
                "required": false,
                "type": "double",
                "description": "Progress of the current firmware download."
            },
            "lastFailReason": {
                "readonly": true,
                "required": false,
                "type": "string",
                "description": "Reason for failure of the OTA (offline, timeout, refused, etc.)."
            }
        },
        "is_device": true,
        "methods": {
            "FirmwareUpdate": {
                "enabled": true,
                "required": [
                    "device",
                    "url"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "device": {
                            "type": "string",
                            "decription": "The name of the devota device."
                        },
                        "url": {
                            "type": "string",
                            "description": "The URL of the firmware.",
                            "optional": false
                        },
                        "priority": {
                            "type": "enum",
                            "description": "The priority of the firmware update. Updates at NORMAL priority may be refused in some senarios.",
                            "optional": true
                        }
                    },
                    "priority": [
                        "NORMAL",
                        "URGENT"
                    ]
                }
            },
            "FirmwareUpdateCancel": {
                "enabled": true,
                "required": [
                    "device"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "device": {
                            "type": "string",
                            "decription": "The name of the devota device."
                        }
                    }
                }
            }
        },
        "events": {
            "FirmwareUpdateProgress": {
                "required": [
                    "dlProgress",
                    "otaProgress"
                ],
                "valid": {
                    "params": {
                        "dlProgress": {
                            "type": "double",
                            "description": "The percentage of the firmware that has been downloaded.",
                            "optional": false
                        },
                        "otaProgress": {
                            "type": "double",
                            "description": "The percentage of the firmware that has been delivered to the device.",
                            "optional": false
                        },
                        "status": [
                            "INPROGRESS",
                            "COMPLETE",
                            "FAILED"
                        ],
                        "reason": {
                            "type": "string",
                            "description": "A message indicating the failure reason",
                            "optional": true
                        },
                        "fileVersion": {
                            "type": "string",
                            "description": "Name of the file version used for OTA",
                            "optional": true
                        }
                    }
                },
                "description": "Sent when a device has been removed for any reason. This may be very specific to the given protocol and require client interpretation."
            }
        }
    },
    "devpow": {
        "correlation_id": "40e957c6-011f-4d20-a235-a23b8da46267",
        "attributes": {
            "source": {
                "readonly": true,
                "required": true,
                "type": "enum",
                "description": "Indicates that this device is currently line-powered",
                "valid": [
                    "LINE",
                    "BATTERY",
                    "BACKUPBATTERY"
                ]
            },
            "linecapable": {
                "readonly": true,
                "required": true,
                "type": "boolean",
                "description": "When true, indicates that it is possible to line-power this device from the mains."
            },
            "backupbatterycapable": {
                "readonly": true,
                "required": true,
                "type": "boolean",
                "description": "When true, indicates the device can support a back-up battery."
            },
            "battery": {
                "readonly": true,
                "required": false,
                "type": "int",
                "description": "Level of primary battery. 0 = battery not present.",
                "min": "0",
                "max": "100"
            },
            "backupbattery": {
                "readonly": true,
                "required": false,
                "type": "int",
                "description": "Level of primary battery. 0 = battery not present.",
                "min": "0",
                "max": "100"
            },
            "sourcechanged": {
                "readonly": true,
                "required": true,
                "type": "timestamp",
                "description": "UTC date time of last source change"
            }
        },
        "is_device": true,
        "methods": {},
        "events": {
            "BackupBattery": {
                "required": [],
                "valid": {
                    "params": {}
                },
                "description": "Fired when a line powered device loses power and is on backup battery."
            },
            "LinePowerRestored": {
                "required": [],
                "valid": {
                    "params": {}
                },
                "description": "Fired when a device currently on backup battery has line power restored."
            },
            "BatteryLow": {
                "required": [],
                "valid": {
                    "params": {}
                },
                "description": "Fired when a battery (backup or otherwise) is under 40%."
            }
        }
    },
    "devmock": {
        "correlation_id": "e0c46dce-8c23-4a22-b726-1f9480d800ae",
        "attributes": {},
        "is_device": true,
        "methods": {
            "SetAttributes": {
                "enabled": true,
                "required": [
                    "device"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "device": {
                            "type": "string",
                            "decription": "The name of the devmock device."
                        },
                        "attrs": {
                            "type": "map<any>",
                            "description": "Attributes to set on the device"
                        }
                    }
                }
            },
            "Connect": {
                "enabled": true,
                "required": [
                    "device"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "device": {
                            "type": "string",
                            "decription": "The name of the devmock device."
                        }
                    }
                }
            },
            "Disconnect": {
                "enabled": true,
                "required": [
                    "device"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "device": {
                            "type": "string",
                            "decription": "The name of the devmock device."
                        }
                    }
                }
            }
        },
        "events": {}
    },
    "dim": {
        "correlation_id": "782f1f3b-efba-4edd-9faa-b28478272f38",
        "attributes": {
            "brightness": {
                "readonly": false,
                "required": true,
                "type": "int",
                "description": "Reflects the current level of brightness, as a percentage. If ramping is not desired, this parameter can be set to immediately achieve the desired brightness level.",
                "min": "0",
                "max": "100"
            },
            "rampingtarget": {
                "readonly": true,
                "required": false,
                "type": "int",
                "description": "Reflects the target brightness, as a percentage, that the dimmer is ramping towards. This should be set to current brightness if ramping is complete. This parameter is read-only and should be controlled via the RampBrightness method if ramping is desired.",
                "min": "0",
                "max": "100"
            },
            "rampingtime": {
                "readonly": true,
                "required": false,
                "type": "int",
                "description": "Number of seconds remaining at current ramping rate before brightness is equal to rampingtarget. When ramping is complete, this value should be set to 0. This parameter is read-only and should be controlled via the RampBrightness method if ramping is desired."
            }
        },
        "is_device": true,
        "methods": {
            "RampBrightness": {
                "enabled": true,
                "required": [
                    "device",
                    "brightness",
                    "seconds"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "device": {
                            "type": "string",
                            "decription": "The name of the dim device."
                        },
                        "brightness": {
                            "type": "int",
                            "description": "Brightness percentage within the range of 0..100",
                            "optional": false
                        },
                        "seconds": {
                            "type": "int",
                            "description": "Number of seconds to reach desired brightness; must be a positive integer",
                            "optional": false
                        }
                    }
                }
            },
            "IncrementBrightness": {
                "enabled": true,
                "required": [
                    "device",
                    "amount"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "device": {
                            "type": "string",
                            "decription": "The name of the dim device."
                        },
                        "amount": {
                            "type": "int",
                            "description": "The amount to increase the brightness as a percentage from 0 to 100",
                            "optional": false
                        }
                    }
                }
            },
            "DecrementBrightness": {
                "enabled": true,
                "required": [
                    "device",
                    "amount"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "device": {
                            "type": "string",
                            "decription": "The name of the dim device."
                        },
                        "amount": {
                            "type": "int",
                            "description": "The amount to decrease the brightness as a percentage from 0 to 100",
                            "optional": false
                        }
                    }
                }
            }
        },
        "events": {}
    },
    "doorlock": {
        "correlation_id": "bc777c07-fe21-41da-84eb-4269f60dfe28",
        "attributes": {
            "lockstate": {
                "readonly": false,
                "required": true,
                "type": "enum",
                "description": "Reflects the state of the lock mechanism.",
                "valid": [
                    "LOCKED",
                    "UNLOCKED",
                    "LOCKING",
                    "UNLOCKING"
                ]
            },
            "type": {
                "readonly": true,
                "required": true,
                "type": "enum",
                "description": "Reflects the type of door lock.",
                "valid": [
                    "DEADBOLT",
                    "LEVERLOCK",
                    "OTHER"
                ]
            },
            "slots": {
                "readonly": true,
                "required": true,
                "type": "map<string>",
                "description": "Reflects the mapping between slots and people"
            },
            "numPinsSupported": {
                "readonly": true,
                "required": true,
                "type": "int",
                "description": "The number of pins that this device supports"
            },
            "supportsInvalidPin": {
                "readonly": true,
                "required": true,
                "type": "boolean",
                "description": "True if this driver will fire an event when an invalid pin is used"
            },
            "supportsBuzzIn": {
                "readonly": true,
                "required": true,
                "type": "boolean",
                "description": "Indicates whether or not the driver supports the BuzzIn method."
            },
            "lockstatechanged": {
                "readonly": true,
                "required": true,
                "type": "timestamp",
                "description": "UTC date time of last lockstate change"
            }
        },
        "is_device": true,
        "methods": {
            "AuthorizePerson": {
                "enabled": true,
                "required": [
                    "device",
                    "personId"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "device": {
                            "type": "string",
                            "decription": "The name of the doorlock device."
                        },
                        "personId": {
                            "type": "uuid",
                            "description": "The ID of the person to add to the lock",
                            "optional": false
                        }
                    }
                }
            },
            "DeauthorizePerson": {
                "enabled": true,
                "required": [
                    "device",
                    "personId"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "device": {
                            "type": "string",
                            "decription": "The name of the doorlock device."
                        },
                        "personId": {
                            "type": "uuid",
                            "description": "The ID of the person to remove from the lock",
                            "optional": false
                        }
                    }
                }
            },
            "BuzzIn": {
                "enabled": true,
                "required": [
                    "device"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "device": {
                            "type": "string",
                            "decription": "The name of the doorlock device."
                        }
                    }
                }
            },
            "ClearAllPins": {
                "enabled": true,
                "required": [
                    "device"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "device": {
                            "type": "string",
                            "decription": "The name of the doorlock device."
                        }
                    }
                }
            }
        },
        "events": {
            "InvalidPin": {
                "required": [],
                "valid": {
                    "params": {}
                },
                "description": "If the driver supports it this will be emitted when an invalid pin is entered"
            },
            "PinUsed": {
                "required": [],
                "valid": {
                    "params": {}
                },
                "description": "Fired when a pin is used to lock or unlock the lock"
            },
            "PinAddedAtLock": {
                "required": [],
                "valid": {
                    "params": {}
                },
                "description": "Fired when a pin is added manually at the lock."
            },
            "PinRemovedAtLock": {
                "required": [],
                "valid": {
                    "params": {}
                },
                "description": "Fired when a pin is removed manually at the lock."
            },
            "PinChangedAtLock": {
                "required": [],
                "valid": {
                    "params": {}
                },
                "description": "Fired when a pin is changed manually at the lock."
            },
            "PersonAuthorized": {
                "required": [],
                "valid": {
                    "params": {}
                },
                "description": "Emitted when the driver receives a report that a person has been provisioned on the device"
            },
            "PersonDeauthorized": {
                "required": [],
                "valid": {
                    "params": {}
                },
                "description": "Emitted when the driver receives a report that a person has been deprovisioned from the device"
            },
            "PinOperationFailed": {
                "required": [],
                "valid": {
                    "params": {}
                },
                "description": "Emitted when the driver receives report that a person's PIN operation failed on the device"
            },
            "AllPinsCleared": {
                "required": [],
                "valid": {
                    "params": {}
                }
            },
            "ClearAllPinsFailed": {
                "required": [],
                "valid": {
                    "params": {}
                },
                "description": "Emitted when the drivers receives a failure clearing the pins or fails to recieve confirmation"
            }
        }
    },
    "subdoorsnlocks": {
        "correlation_id": "831519a4-8b91-4aa0-96de-8f8aa0eac418",
        "attributes": {
            "lockDevices": {
                "readonly": true,
                "required": true,
                "type": "set<String>",
                "description": "The addresses of door locks defined at this place"
            },
            "motorizedDoorDevices": {
                "readonly": true,
                "required": true,
                "type": "set<String>",
                "description": "The addresses of motorized doors defined at this place"
            },
            "contactSensorDevices": {
                "readonly": true,
                "required": true,
                "type": "set<String>",
                "description": "The addresses of contact sensors defined at this place"
            },
            "petDoorDevices": {
                "readonly": true,
                "required": true,
                "type": "set<String>",
                "description": "The addresses of pet doors defined at this place"
            },
            "warnings": {
                "readonly": true,
                "required": true,
                "type": "map<String>",
                "description": "A set of warnings about devices which have potential issues that could cause an alarm to be missed.  The key is the address of the device with a warning and the value is an I18N code with the description of the problem."
            },
            "unlockedLocks": {
                "readonly": true,
                "required": true,
                "type": "set<String>",
                "description": "The addresses of door locks that are currently unlocked"
            },
            "offlineLocks": {
                "readonly": true,
                "required": true,
                "type": "set<String>",
                "description": "The addresses of door locks that are currently offline"
            },
            "jammedLocks": {
                "readonly": true,
                "required": true,
                "type": "set<String>",
                "description": "The addresses of door locks that are currently jammed"
            },
            "openMotorizedDoors": {
                "readonly": true,
                "required": true,
                "type": "set<String>",
                "description": "The addresses of motorized doors that are currently open"
            },
            "offlineMotorizedDoors": {
                "readonly": true,
                "required": true,
                "type": "set<String>",
                "description": "The addresses of motorized doors that are currently offline"
            },
            "obstructedMotorizedDoors": {
                "readonly": true,
                "required": true,
                "type": "set<String>",
                "description": "The addresses of motorized doors that are currently obstructed"
            },
            "openContactSensors": {
                "readonly": true,
                "required": true,
                "type": "set<String>",
                "description": "The addressees of currently open contact sensors"
            },
            "offlineContactSensors": {
                "readonly": true,
                "required": true,
                "type": "set<String>",
                "description": "The addresses of currently offline contact sensors"
            },
            "unlockedPetDoors": {
                "readonly": true,
                "required": true,
                "type": "set<String>",
                "description": "The addresses of currently locked pet doors"
            },
            "autoPetDoors": {
                "readonly": true,
                "required": true,
                "type": "set<String>",
                "description": "The addresses of pet doors in auto mode"
            },
            "offlinePetDoors": {
                "readonly": true,
                "required": true,
                "type": "set<String>",
                "description": "The addresses of offline pet doors"
            },
            "allPeople": {
                "readonly": true,
                "required": true,
                "type": "set<String>",
                "description": "The set of all people at the place that could be assigned to a lock (those with access and a pin)"
            },
            "authorizationByLock": {
                "readonly": true,
                "required": true,
                "type": "map<set<LockAuthorizationState>>",
                "description": "A between a door lock and the people that currently have access to that lock"
            },
            "chimeConfig": {
                "readonly": false,
                "required": true,
                "type": "set<DoorChimeConfig>",
                "description": "The set of all that could have a chiming enabled/disabled."
            }
        },
        "is_device": false,
        "methods": {
            "AuthorizePeople": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {
                        "device": {
                            "type": "String",
                            "description": "The address of the door lock to disassociate/associate people with"
                        },
                        "operations": {
                            "type": "list<LockAuthorizationOperation>",
                            "description": "The set of people to assign to the door lock"
                        }
                    }
                }
            },
            "SynchAuthorization": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {
                        "device": {
                            "type": "String",
                            "description": "The address of the device to synchronize"
                        }
                    }
                }
            }
        },
        "events": {
            "PersonAuthorized": {
                "required": [],
                "valid": {
                    "params": {}
                },
                "description": "Emitted from the subsystem when a person is authorized on a lock"
            },
            "PersonDeauthorized": {
                "required": [],
                "valid": {
                    "params": {}
                },
                "description": "Emitted from the subsystem when a person is deauthorized from a lock"
            },
            "LockJammed": {
                "required": [],
                "valid": {
                    "params": {}
                },
                "description": "Emitted when a door lock is jammed."
            },
            "LockUnjammed": {
                "required": [],
                "valid": {
                    "params": {}
                },
                "description": "Emitted when a door lock is no longer jammed."
            },
            "MotorizedDoorObstructed": {
                "required": [],
                "valid": {
                    "params": {}
                },
                "description": "Emitted when a motorized door is obstructed."
            },
            "MotorizedDoorUnobstructed": {
                "required": [],
                "valid": {
                    "params": {}
                },
                "description": "Emitted when a motorized door is no longer obstructed."
            }
        }
    },
    "ecowater": {
        "correlation_id": "3469225e-983a-401d-9616-bee67eea894e",
        "attributes": {
            "excessiveUse": {
                "readonly": true,
                "required": true,
                "type": "boolean",
                "description": "Indicates whether or not the device is experiencing excessive water flow"
            },
            "continuousUse": {
                "readonly": true,
                "required": true,
                "type": "boolean",
                "description": "Indicates whether or not the device is experiencing continuous water flow"
            },
            "continuousDuration": {
                "readonly": false,
                "required": true,
                "type": "int",
                "description": "Number of seconds where flow must meet or exceed continuousRate before continuousUse will be marked true"
            },
            "continuousRate": {
                "readonly": false,
                "required": true,
                "type": "double",
                "description": "Flow threshold in gallons per minute used to determine continuousUse"
            },
            "alertOnContinuousUse": {
                "readonly": false,
                "required": true,
                "type": "boolean",
                "description": "Indicates whether the user wants to receive continuous use notifications"
            },
            "alertOnExcessiveUse": {
                "readonly": false,
                "required": true,
                "type": "boolean",
                "description": "Indicates whether the user wants to receive excessive use notifications"
            }
        },
        "is_device": true,
        "methods": {},
        "events": {}
    },
    "fan": {
        "correlation_id": "db86c542-c084-4c65-908e-2060aa275c9a",
        "attributes": {
            "speed": {
                "readonly": false,
                "required": true,
                "type": "int",
                "description": "Reflects the speed of the device. Also used to set the speed of the device.",
                "min": "0",
                "max": "10"
            },
            "maxSpeed": {
                "readonly": true,
                "required": true,
                "type": "int",
                "description": "Determine the max speed as reported by the fan.",
                "min": "1",
                "max": "10"
            },
            "direction": {
                "readonly": false,
                "required": false,
                "type": "enum",
                "description": "Reflects the direction of air flow through the fan.",
                "valid": [
                    "UP",
                    "DOWN"
                ]
            }
        },
        "is_device": true,
        "methods": {},
        "events": {}
    },
    "flow": {
        "correlation_id": "ac0c174c-fee4-4cf0-8d18-6f0b5b8cfd1c",
        "attributes": {
            "flow": {
                "readonly": true,
                "required": true,
                "type": "double",
                "description": "The instantaneous flow measurement."
            }
        },
        "is_device": true,
        "methods": {},
        "events": {}
    },
    "glass": {
        "correlation_id": "dbf92578-44f6-4c0b-b038-4861a67c39db",
        "attributes": {
            "break": {
                "readonly": true,
                "required": true,
                "type": "enum",
                "description": "Reflects the current state of the glass break sensor.",
                "valid": [
                    "SAFE",
                    "DETECTED"
                ]
            },
            "breakchanged": {
                "readonly": true,
                "required": true,
                "type": "timestamp",
                "description": "UTC date time of last break change"
            }
        },
        "is_device": true,
        "methods": {},
        "events": {}
    },
    "halo": {
        "correlation_id": "0e39a915-fc8b-48b1-8559-dc8e71597f03",
        "attributes": {
            "devicestate": {
                "readonly": true,
                "required": true,
                "type": "enum",
                "description": "Current state of Halo device.",
                "valid": [
                    "SAFE",
                    "WEATHER",
                    "SMOKE",
                    "CO",
                    "PRE_SMOKE",
                    "EOL",
                    "LOW_BATTERY",
                    "VERY_LOW_BATTERY",
                    "FAILED_BATTERY"
                ]
            },
            "hushstatus": {
                "readonly": true,
                "required": true,
                "type": "enum",
                "description": "Current status of Hush process.",
                "valid": [
                    "SUCCESS",
                    "TIMEOUT",
                    "READY",
                    "DISABLED"
                ]
            },
            "room": {
                "readonly": false,
                "required": true,
                "type": "enum",
                "description": "This is the room type description for the location of the Halo device, which can be read out in an alert.",
                "valid": [
                    "NONE",
                    "BASEMENT",
                    "BEDROOM",
                    "DEN",
                    "DINING_ROOM",
                    "DOWNSTAIRS",
                    "ENTRYWAY",
                    "FAMILY_ROOM",
                    "GAME_ROOM",
                    "GUEST_BEDROOM",
                    "HALLWAY",
                    "KIDS_BEDROOM",
                    "LIVING_ROOM",
                    "MASTER_BEDROOM",
                    "OFFICE",
                    "STUDY",
                    "UPSTAIRS",
                    "WORKOUT_ROOM"
                ]
            },
            "roomNames": {
                "readonly": true,
                "required": true,
                "type": "map<string>",
                "description": "Mapping of halo:room enum keys to human readable room names supported by this device"
            },
            "remotetestresult": {
                "readonly": true,
                "required": true,
                "type": "enum",
                "description": "Response code from remote test of the halo test feature.",
                "valid": [
                    "SUCCESS",
                    "FAIL_ION_SENSOR",
                    "FAIL_PHOTO_SENSOR",
                    "FAIL_CO_SENSOR",
                    "FAIL_TEMP_SENSOR",
                    "FAIL_WEATHER_RADIO",
                    "FAIL_OTHER"
                ]
            },
            "haloalertstate": {
                "readonly": false,
                "required": true,
                "type": "enum",
                "description": "State of the Iris system, as transmited to Halo to be indicated to the user through lights and sound.",
                "valid": [
                    "QUIET",
                    "INTRUDER",
                    "PANIC",
                    "WATER",
                    "SMOKE",
                    "CO",
                    "CARE",
                    "ALERTING_GENERIC"
                ]
            }
        },
        "is_device": true,
        "methods": {
            "StartHush": {
                "enabled": true,
                "required": [
                    "device"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "device": {
                            "type": "string",
                            "decription": "The name of the halo device."
                        }
                    }
                }
            },
            "SendHush": {
                "enabled": true,
                "required": [
                    "device",
                    "color"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "device": {
                            "type": "string",
                            "decription": "The name of the halo device."
                        },
                        "color": {
                            "type": "enum",
                            "description": "Color the user says is being currently displayed by Halo in the Hush process.",
                            "optional": false
                        }
                    },
                    "color": [
                        "RED",
                        "BLUE",
                        "GREEN"
                    ]
                }
            },
            "CancelHush": {
                "enabled": true,
                "required": [
                    "device"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "device": {
                            "type": "string",
                            "decription": "The name of the halo device."
                        }
                    }
                }
            },
            "StartTest": {
                "enabled": true,
                "required": [
                    "device"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "device": {
                            "type": "string",
                            "decription": "The name of the halo device."
                        }
                    }
                }
            }
        },
        "events": {}
    },
    "honeywelltcc": {
        "correlation_id": "60ac1618-5a1a-45c2-aeb2-d0fdef72d1a2",
        "attributes": {
            "requiresLogin": {
                "readonly": true,
                "required": true,
                "type": "boolean",
                "description": "Set to true when the end user needs to login into their Honeywell account to refresh tokens"
            },
            "authorizationState": {
                "readonly": true,
                "type": "enum",
                "description": "Whether the device is currently authorized for use by Iris",
                "valid": [
                    "AUTHORIZED",
                    "DEAUTHORIZED"
                ]
            }
        },
        "is_device": true,
        "methods": {},
        "events": {}
    },
    "hub4g": {
        "correlation_id": "c8323420-1915-4230-a7f9-812932a8ddcf",
        "attributes": {
            "present": {
                "readonly": true,
                "required": true,
                "type": "boolean",
                "description": "True if a 4G dongle is installed on the hub"
            },
            "simPresent": {
                "readonly": true,
                "required": true,
                "type": "boolean",
                "description": "True if the installed 4G dongle has a sim card present"
            },
            "simProvisioned": {
                "readonly": true,
                "required": true,
                "type": "boolean",
                "description": "True if the installed 4G sim card has been provisioned"
            },
            "simDisabled": {
                "readonly": true,
                "required": true,
                "type": "boolean",
                "description": "True if the installed 4G sim card has been marked invalid"
            },
            "simDisabledDate": {
                "readonly": true,
                "required": true,
                "type": "timestamp",
                "description": "Date when 4G sim card was disabled, if any"
            },
            "connectionState": {
                "readonly": true,
                "required": true,
                "type": "enum",
                "description": "Current state of 4g connection",
                "valid": [
                    "CONNECTING",
                    "CONNECTED",
                    "DISCONNECTING",
                    "DISCONNECTED"
                ]
            },
            "vendor": {
                "readonly": true,
                "required": true,
                "type": "string",
                "description": "String description of the 4G dongle vendor"
            },
            "model": {
                "readonly": true,
                "required": true,
                "type": "string",
                "description": "String description of the 4G dongle model"
            },
            "serialNumber": {
                "readonly": true,
                "required": true,
                "type": "string",
                "description": "Serial number of 4G dongle"
            },
            "imei": {
                "readonly": true,
                "required": true,
                "type": "string",
                "description": "IMEI of 4G dongle"
            },
            "imsi": {
                "readonly": true,
                "required": true,
                "type": "string",
                "description": "IMSI of 4G dongle"
            },
            "iccid": {
                "readonly": true,
                "required": true,
                "type": "string",
                "description": "ICCID of 4G dongle"
            },
            "phoneNumber": {
                "readonly": true,
                "required": true,
                "type": "string",
                "description": "Phone number of 4G dongle"
            },
            "mode": {
                "readonly": true,
                "required": true,
                "type": "string",
                "description": "Network connection mode"
            },
            "signalBars": {
                "readonly": true,
                "required": true,
                "type": "int",
                "description": "Signal strength in bars"
            },
            "connectionStatus": {
                "readonly": true,
                "required": true,
                "type": "string",
                "description": "Vendor specific connection status code"
            }
        },
        "is_device": false,
        "methods": {
            "GetInfo": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {}
                }
            },
            "ResetStatistics": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {}
                }
            },
            "GetStatistics": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {}
                }
            }
        },
        "events": {}
    },
    "hubadv": {
        "correlation_id": "9f847999-5a89-4ec5-b9e7-5ee3563be86f",
        "attributes": {
            "mac": {
                "readonly": true,
                "required": true,
                "type": "string",
                "description": "Primary MAC address of the hub (corresponds to ethernet MAC)"
            },
            "hardwarever": {
                "readonly": true,
                "required": false,
                "type": "string",
                "description": "Version of the hardware"
            },
            "osver": {
                "readonly": true,
                "required": true,
                "type": "string",
                "description": "Version of the base hub OS software"
            },
            "agentver": {
                "readonly": true,
                "required": true,
                "type": "string",
                "description": "Version of the agent code running on the hub"
            },
            "serialNum": {
                "readonly": true,
                "required": true,
                "type": "string",
                "description": "Serial number of the hub"
            },
            "mfgInfo": {
                "readonly": true,
                "required": false,
                "type": "string",
                "description": "Manufacturing information"
            },
            "bootloaderVer": {
                "readonly": true,
                "required": false,
                "type": "string",
                "description": "Version of the bootloader running on the hub"
            },
            "firmwareGroup": {
                "readonly": true,
                "required": false,
                "type": "string",
                "description": "Firmware group the hub belongs to"
            },
            "lastReset": {
                "readonly": true,
                "required": true,
                "type": "string",
                "description": "A time UUID indicating the last time the hub was started in a factory fresh state."
            },
            "lastDeviceAddRemove": {
                "readonly": true,
                "required": true,
                "type": "string",
                "description": "A time UUID indicating the last time a device was either added or removed from the hub."
            },
            "lastRestartReason": {
                "readonly": true,
                "required": true,
                "type": "enum",
                "description": "The reason for the last hub restart.",
                "valid": [
                    "UNKNOWN",
                    "FIRMWARE_UPDATE",
                    "REQUESTED",
                    "SOFT_RESET",
                    "FACTORY_RESET",
                    "GATEWAY_FAILURE",
                    "MIGRATION",
                    "BACKUP_RESTORE",
                    "WATCHDOG"
                ]
            },
            "lastRestartTime": {
                "readonly": true,
                "required": true,
                "type": "timestamp",
                "description": "The time of the last hub restart."
            },
            "lastFailedWatchdogChecksTime": {
                "readonly": true,
                "required": true,
                "type": "timestamp",
                "description": "The last time some watchdog checks failed"
            },
            "lastFailedWatchdogChecks": {
                "readonly": true,
                "required": true,
                "type": "set<string>",
                "description": "The set of failed watchdog checks, this is provided on a best effort basis and may not accurately reflect what actually caused a watchdog reset (we might fail to persist this information if an I/O failure caused the watchdog reset)."
            },
            "lastDbCheck": {
                "readonly": true,
                "required": true,
                "type": "timestamp",
                "description": "The last time an integrity check was run on the hub db."
            },
            "lastDbCheckResults": {
                "readonly": true,
                "required": true,
                "type": "string",
                "description": "A string describing the results of the last db check."
            },
            "migrationDualEui64": {
                "readonly": true,
                "required": true,
                "type": "boolean",
                "description": "True if the hub has ever had the dual EUI-64 problem after migration."
            },
            "migrationDualEui64Fixed": {
                "readonly": true,
                "required": true,
                "type": "boolean",
                "description": "True if the hub has had the fix for the dual EUI-64 issue applied."
            },
            "mfgBatchNumber": {
                "readonly": true,
                "required": false,
                "type": "string",
                "description": "Manufacturing raw batch number"
            },
            "mfgDate": {
                "readonly": true,
                "required": false,
                "type": "timestamp",
                "description": "Date of manufacture"
            },
            "mfgFactoryID": {
                "readonly": true,
                "required": false,
                "type": "int",
                "description": "Manufacturing factory ID"
            },
            "hwFlashSize": {
                "readonly": true,
                "required": false,
                "type": "long",
                "description": "Size of flash, in bytes"
            }
        },
        "is_device": false,
        "methods": {
            "Restart": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {}
                }
            },
            "Reboot": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {}
                }
            },
            "FirmwareUpdate": {
                "enabled": true,
                "required": [
                    "url",
                    "type"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "url": {
                            "type": "string",
                            "description": "The URL of the firmware",
                            "optional": false
                        },
                        "priority": {
                            "type": "enum",
                            "description": "The amount of time in milliseconds for which the place will be able to add devices",
                            "optional": true
                        },
                        "type": {
                            "type": "enum",
                            "description": "The type of firmware being updated.",
                            "optional": false
                        }
                    },
                    "priority": [
                        "NORMAL",
                        "URGENT"
                    ],
                    "type": [
                        "FIRMWARE",
                        "AGENT"
                    ]
                }
            },
            "FactoryReset": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {}
                }
            },
            "GetKnownDevices": {
                "enabled": true,
                "required": [
                    "protocols"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "protocols": {
                            "type": "set<string>",
                            "description": "The set of protocols that should be returned",
                            "optional": false
                        }
                    }
                }
            },
            "GetDeviceInfo": {
                "enabled": true,
                "required": [
                    "protocolAddress"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "protocolAddress": {
                            "type": "string",
                            "description": "The protocol address of the device to get the device information from.",
                            "optional": false
                        }
                    }
                }
            }
        },
        "events": {
            "FirmwareUpgradeProcess": {
                "required": [
                    "percentDone"
                ],
                "valid": {
                    "params": {
                        "percentDone": {
                            "type": "double",
                            "description": "The percentage of the firmware that has been downloaded",
                            "optional": false
                        },
                        "status": {
                            "type": "string",
                            "description": "An informative message about the status of the download",
                            "optional": true
                        }
                    }
                },
                "description": "Sent when a hub comes online.  This may be very specific to the given protocol and require client interpretation."
            },
            "Deregister": {
                "required": [],
                "valid": {
                    "params": {}
                },
                "description": "Event sent from the platform to the hub informing it that it needs to deregister (boot all devices and factory reset)"
            },
            "StartUploadingCameraPreviews": {
                "required": [],
                "valid": {
                    "params": {
                        "uploadUrl": {
                            "type": "string",
                            "description": "The URL at which the hub should upload multi-part batches of camera preview images."
                        }
                    }
                },
                "description": "Event sent from the platform to the hub informing it that it should start uploading camera preview snapshots up to the server. If the hub is already publishing snapshots, it should increment some counter for the number of requests it has received but not start new uploads so when StopCameraPreviews is issued it will know when it is safe to stop uploading."
            },
            "StopUploadingCameraPreviews": {
                "required": [],
                "valid": {
                    "params": {}
                },
                "description": "Event sent from the platform to the hub informing it to stop uploading camera previews.  This should decrement the counter of the PublishCameraPreviews (to account for multiple user sessions) and when it is zero should stop uploading."
            },
            "UnpairedDeviceRemoved": {
                "required": [
                    "devTypeGuess"
                ],
                "valid": {
                    "params": {
                        "devTypeGuess": {
                            "type": "string",
                            "description": "Best guess at the device",
                            "optional": false
                        }
                    }
                },
                "description": "Event sent when an unpaired or unvetted device is removed from the hub."
            },
            "Attention": {
                "required": [
                    "code",
                    "msg"
                ],
                "valid": {
                    "params": {
                        "code": {
                            "type": "string",
                            "description": "An attention code.",
                            "optional": false
                        },
                        "msg": {
                            "type": "string",
                            "description": "A message associated with the attention alert",
                            "optional": false
                        }
                    }
                },
                "description": "An event indicating that a hub needs attention"
            }
        }
    },
    "hubalarm": {
        "correlation_id": "42db8451-dc54-4695-acba-30bbfeec9e61",
        "attributes": {
            "state": {
                "readonly": true,
                "required": true,
                "type": "enum",
                "description": "The current state of the hub local alarm subsystem.",
                "valid": [
                    "SUSPENDED",
                    "ACTIVE"
                ]
            },
            "alarmState": {
                "readonly": true,
                "required": true,
                "type": "enum",
                "description": "The combined state of the alarm across all alerts.",
                "valid": [
                    "INACTIVE",
                    "READY",
                    "PREALERT",
                    "ALERTING",
                    "CLEARING"
                ]
            },
            "securityMode": {
                "readonly": true,
                "required": true,
                "type": "enum",
                "description": "The state of the security alarm.",
                "valid": [
                    "INACTIVE",
                    "DISARMED",
                    "ON",
                    "PARTIAL"
                ]
            },
            "securityArmTime": {
                "readonly": true,
                "required": false,
                "type": "timestamp",
                "description": "The time at which the security system was or will be armed.  This will be cleared when the security system is disarmed."
            },
            "lastArmedTime": {
                "readonly": true,
                "required": false,
                "type": "timestamp",
                "description": "The last time the security alarm was armed."
            },
            "lastArmedBy": {
                "readonly": true,
                "required": false,
                "type": "string",
                "description": "The address of the last person to arm the security alarm, this may be empty if it was armed from a scene or a rule."
            },
            "lastArmedFrom": {
                "readonly": true,
                "required": false,
                "type": "string",
                "description": "The address of the keypad, rule, scene, or app the security alarm was armed from."
            },
            "lastDisarmedTime": {
                "readonly": true,
                "required": false,
                "type": "timestamp",
                "description": "The last time at which the security system was disarmed."
            },
            "lastDisarmedBy": {
                "readonly": true,
                "required": false,
                "type": "string",
                "description": "The address of the last person to disarm the security alarm, this may be empty if it was disarmed from a scene or a rule."
            },
            "lastDisarmedFrom": {
                "readonly": true,
                "required": false,
                "type": "string",
                "description": "The address of the keypad, rule, scene, or app the security alarm was disarmed from."
            },
            "activeAlerts": {
                "readonly": true,
                "required": true,
                "type": "list<enum>",
                "description": "A priority ordered list of alerts that are currently active.  Note that the banner should always use the first element from this list, it is ordered.",
                "valid": [
                    "SECURITY",
                    "PANIC",
                    "SMOKE",
                    "CO",
                    "WATER",
                    "CARE",
                    "WEATHER"
                ]
            },
            "availableAlerts": {
                "readonly": true,
                "required": true,
                "type": "set<enum>",
                "description": "The set of alarms which are supported by the devices paired at the current place.",
                "valid": [
                    "SECURITY",
                    "PANIC",
                    "SMOKE",
                    "CO",
                    "WATER",
                    "CARE",
                    "WEATHER"
                ]
            },
            "currentIncident": {
                "readonly": true,
                "required": true,
                "type": "string",
                "description": "The currently incident, will be the empty string when there is no current incident."
            },
            "reconnectReport": {
                "readonly": true,
                "required": true,
                "type": "boolean",
                "description": "True if the report issued by the hub is due to a reconnect."
            },
            "securityAlertState": {
                "readonly": true,
                "required": true,
                "type": "enum",
                "description": "The current state of this alert.",
                "valid": [
                    "INACTIVE",
                    "PENDING_CLEAR",
                    "DISARMED",
                    "ARMING",
                    "READY",
                    "PREALERT",
                    "ALERT",
                    "CLEARING"
                ]
            },
            "securityDevices": {
                "readonly": true,
                "required": true,
                "type": "set<String>",
                "description": "The addresss of all devices that could participate in the security alarm."
            },
            "securityExcludedDevices": {
                "readonly": true,
                "required": true,
                "type": "set<String>",
                "description": "The addresses of the devices that are excluded from participating in this alarm."
            },
            "securityActiveDevices": {
                "readonly": true,
                "required": true,
                "type": "set<String>",
                "description": "The addresses of the devices that are participating in this alarm."
            },
            "securityCurrentActive": {
                "readonly": true,
                "required": true,
                "type": "set<String>",
                "description": "The addresses of the devices that were initially active at arm time."
            },
            "securityOfflineDevices": {
                "readonly": true,
                "required": true,
                "type": "set<String>",
                "description": "The addresses of the devices would be active except they have fallen offline."
            },
            "securityTriggeredDevices": {
                "readonly": true,
                "required": true,
                "type": "set<String>",
                "description": "The addresses of the devices which are currently triggered."
            },
            "securityTriggers": {
                "readonly": true,
                "required": true,
                "type": "list<IncidentTrigger>",
                "description": "The triggers associated with the current alert."
            },
            "securityPreAlertEndTime": {
                "readonly": true,
                "required": true,
                "type": "timestamp",
                "description": "The time at which the prealert time for the current incident expires."
            },
            "securitySilent": {
                "readonly": true,
                "required": true,
                "type": "boolean",
                "description": "When true only notifications will be sent, alert devices / keypads will not sound."
            },
            "securityEntranceDelay": {
                "readonly": true,
                "required": true,
                "type": "int",
                "description": "The amount of time an alarm device must be triggering for before the alarm is fired for the current arming cycle..<br/><b>Default: 30</b>"
            },
            "securitySensitivity": {
                "readonly": true,
                "required": true,
                "type": "int",
                "description": "The number of alarm devices which must trigger before the alarm is fired for the current arming cycle.<br/><b>Default: 1</b>"
            },
            "panicAlertState": {
                "readonly": true,
                "required": true,
                "type": "enum",
                "description": "The current state of this alert.",
                "valid": [
                    "INACTIVE",
                    "PENDING_CLEAR",
                    "DISARMED",
                    "ARMING",
                    "READY",
                    "PREALERT",
                    "ALERT",
                    "CLEARING"
                ]
            },
            "panicActiveDevices": {
                "readonly": true,
                "required": true,
                "type": "set<String>",
                "description": "The addresses of the devices that are participating in this alarm."
            },
            "panicOfflineDevices": {
                "readonly": true,
                "required": true,
                "type": "set<String>",
                "description": "The addresses of the devices would be active except they have fallen offline."
            },
            "panicTriggeredDevices": {
                "readonly": true,
                "required": true,
                "type": "set<String>",
                "description": "The addresses of the devices which are currently triggered."
            },
            "panicTriggers": {
                "readonly": true,
                "required": true,
                "type": "list<IncidentTrigger>",
                "description": "The triggers associated with the current alert."
            },
            "panicSilent": {
                "readonly": false,
                "required": true,
                "type": "boolean",
                "description": "When true only notifications will be sent, alert devices / keypads will not sound."
            },
            "smokeAlertState": {
                "readonly": true,
                "required": true,
                "type": "enum",
                "description": "The current state of this alert.",
                "valid": [
                    "INACTIVE",
                    "PENDING_CLEAR",
                    "DISARMED",
                    "ARMING",
                    "READY",
                    "PREALERT",
                    "ALERT",
                    "CLEARING"
                ]
            },
            "smokeActiveDevices": {
                "readonly": true,
                "required": true,
                "type": "set<String>",
                "description": "The addresses of the devices that are participating in this alarm."
            },
            "smokeOfflineDevices": {
                "readonly": true,
                "required": true,
                "type": "set<String>",
                "description": "The addresses of the devices would be active except they have fallen offline."
            },
            "smokeTriggeredDevices": {
                "readonly": true,
                "required": true,
                "type": "set<String>",
                "description": "The addresses of the devices which are currently triggered."
            },
            "smokeTriggers": {
                "readonly": true,
                "required": true,
                "type": "list<IncidentTrigger>",
                "description": "The triggers associated with the current alert."
            },
            "smokeSilent": {
                "readonly": false,
                "required": true,
                "type": "boolean",
                "description": "When true only notifications will be sent, alert devices / keypads will not sound."
            },
            "coAlertState": {
                "readonly": true,
                "required": true,
                "type": "enum",
                "description": "The current state of this alert.",
                "valid": [
                    "INACTIVE",
                    "PENDING_CLEAR",
                    "DISARMED",
                    "ARMING",
                    "READY",
                    "PREALERT",
                    "ALERT",
                    "CLEARING"
                ]
            },
            "coActiveDevices": {
                "readonly": true,
                "required": true,
                "type": "set<String>",
                "description": "The addresses of the devices that are participating in this alarm."
            },
            "coOfflineDevices": {
                "readonly": true,
                "required": true,
                "type": "set<String>",
                "description": "The addresses of the devices would be active except they have fallen offline."
            },
            "coTriggeredDevices": {
                "readonly": true,
                "required": true,
                "type": "set<String>",
                "description": "The addresses of the devices which are currently triggered."
            },
            "coTriggers": {
                "readonly": true,
                "required": true,
                "type": "list<IncidentTrigger>",
                "description": "The triggers associated with the current alert."
            },
            "coSilent": {
                "readonly": false,
                "required": true,
                "type": "boolean",
                "description": "When true only notifications will be sent, alert devices / keypads will not sound."
            },
            "waterAlertState": {
                "readonly": true,
                "required": true,
                "type": "enum",
                "description": "The current state of this alert.",
                "valid": [
                    "INACTIVE",
                    "PENDING_CLEAR",
                    "DISARMED",
                    "ARMING",
                    "READY",
                    "PREALERT",
                    "ALERT",
                    "CLEARING"
                ]
            },
            "waterActiveDevices": {
                "readonly": true,
                "required": true,
                "type": "set<String>",
                "description": "The addresses of the devices that are participating in this alarm."
            },
            "waterOfflineDevices": {
                "readonly": true,
                "required": true,
                "type": "set<String>",
                "description": "The addresses of the devices would be active except they have fallen offline."
            },
            "waterTriggeredDevices": {
                "readonly": true,
                "required": true,
                "type": "set<String>",
                "description": "The addresses of the devices which are currently triggered."
            },
            "waterTriggers": {
                "readonly": true,
                "required": true,
                "type": "list<IncidentTrigger>",
                "description": "The triggers associated with the current alert."
            },
            "waterSilent": {
                "readonly": false,
                "required": true,
                "type": "boolean",
                "description": "When true only notifications will be sent, alert devices / keypads will not sound."
            }
        },
        "is_device": false,
        "methods": {
            "Activate": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {}
                }
            },
            "Suspend": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {}
                }
            },
            "Arm": {
                "enabled": true,
                "required": [
                    "mode",
                    "bypassed",
                    "entranceDelaySecs",
                    "exitDelaySecs",
                    "alarmSensitivityDeviceCount",
                    "silent",
                    "soundsEnabled",
                    "activeDevices",
                    "armedBy",
                    "armedFrom"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "mode": {
                            "type": "enum",
                            "description": "The mode the alarm is being armed in",
                            "optional": false
                        },
                        "bypassed": {
                            "type": "boolean",
                            "description": "True if arming in bypass mode",
                            "optional": false
                        },
                        "entranceDelaySecs": {
                            "type": "int",
                            "description": "The amount of time an alarm device must be triggering for before the alarm is fired.<br/><b>Default: 30</b>",
                            "optional": false
                        },
                        "exitDelaySecs": {
                            "type": "int",
                            "description": "The amount of time before the alarm is fully armed.<br/><b>Default: 30</b>",
                            "optional": false
                        },
                        "alarmSensitivityDeviceCount": {
                            "type": "int",
                            "description": "The number of alarm devices which must trigger before the alarm is fired.<br/><b>Default: 1</b>",
                            "optional": false
                        },
                        "silent": {
                            "type": "boolean",
                            "description": "Hub and keypad make sounds when arming.<br/><b>Default: true</b>",
                            "optional": false
                        },
                        "soundsEnabled": {
                            "type": "boolean",
                            "description": "When true only notifications will be sent, alert devices will not be triggered.",
                            "optional": false
                        },
                        "activeDevices": {
                            "type": "set<string>",
                            "description": "The addresses of the devices that are participating in this alarm.",
                            "optional": false
                        },
                        "armedBy": {
                            "type": "string",
                            "description": "The person arming the security alarm or empty if being armed via keypad or a rule",
                            "optional": false
                        },
                        "armedFrom": {
                            "type": "string",
                            "description": "The address of the keypad, rule, scene, or app the security alarm was armed from.",
                            "optional": false
                        }
                    },
                    "mode": [
                        "ON",
                        "PARTIAL"
                    ]
                }
            },
            "Disarm": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {
                        "disarmedBy": {
                            "type": "string",
                            "description": "Address of the person that disarmed or cancelled the incident."
                        },
                        "disarmedFrom": {
                            "type": "string",
                            "description": "The address of the keypad, rule, scene, or app the security alarm was disarmed from."
                        }
                    }
                }
            },
            "Panic": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {
                        "source": {
                            "type": "string",
                            "description": "Address of the trigger source"
                        },
                        "event": {
                            "type": "enum",
                            "description": "Triggering Event"
                        }
                    },
                    "event": [
                        "RULE",
                        "VERIFIED_ALARM"
                    ]
                }
            },
            "ClearIncident": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {}
                }
            }
        },
        "events": {
            "Verified": {
                "required": [],
                "valid": {
                    "params": {}
                },
                "description": "Issued by alarm subsystem to the hub if a user verifies an alarm."
            }
        }
    },
    "hubav": {
        "correlation_id": "2155d793-bda1-4778-a369-7702564ddd40",
        "attributes": {
            "numAvailable": {
                "readonly": true,
                "required": true,
                "type": "int",
                "description": "Number of AV devices available for pairing"
            },
            "numPaired": {
                "readonly": true,
                "required": true,
                "type": "int",
                "description": "Number of AV devices paired to the hub"
            },
            "numDisconnected": {
                "readonly": true,
                "required": true,
                "type": "int",
                "description": "Number of AV devices that are no longer connected"
            },
            "avdevs": {
                "readonly": true,
                "required": true,
                "type": "map<string>",
                "description": "List of AV devices (by UUID) with current mode"
            }
        },
        "is_device": false,
        "methods": {
            "pair": {
                "enabled": true,
                "required": [
                    "uuid"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "uuid": {
                            "type": "string",
                            "description": "The UUID of the device.",
                            "optional": false
                        }
                    }
                }
            },
            "release": {
                "enabled": true,
                "required": [
                    "uuid"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "uuid": {
                            "type": "string",
                            "description": "The UUID of the device.",
                            "optional": false
                        }
                    }
                }
            },
            "getState": {
                "enabled": true,
                "required": [
                    "uuid"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "uuid": {
                            "type": "string",
                            "description": "The UUID of the device.",
                            "optional": false
                        }
                    }
                }
            },
            "getIPAddress": {
                "enabled": true,
                "required": [
                    "uuid"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "uuid": {
                            "type": "string",
                            "description": "The UUID of the device.",
                            "optional": false
                        }
                    }
                }
            },
            "getModel": {
                "enabled": true,
                "required": [
                    "uuid"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "uuid": {
                            "type": "string",
                            "description": "The UUID of the device.",
                            "optional": false
                        }
                    }
                }
            },
            "audioStart": {
                "enabled": true,
                "required": [
                    "uuid"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "uuid": {
                            "type": "string",
                            "description": "The UUID of the device.",
                            "optional": false
                        },
                        "url": {
                            "type": "string",
                            "description": "URL of media to play",
                            "optional": true
                        },
                        "metadata": {
                            "type": "string",
                            "description": "Metadata of media to play",
                            "optional": true
                        }
                    }
                }
            },
            "audioStop": {
                "enabled": true,
                "required": [
                    "uuid"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "uuid": {
                            "type": "string",
                            "description": "The UUID of the device.",
                            "optional": false
                        }
                    }
                }
            },
            "audioPause": {
                "enabled": true,
                "required": [
                    "uuid"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "uuid": {
                            "type": "string",
                            "description": "The UUID of the device.",
                            "optional": false
                        }
                    }
                }
            },
            "audioSeekTo": {
                "enabled": true,
                "required": [
                    "uuid",
                    "unit",
                    "target"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "uuid": {
                            "type": "string",
                            "description": "The UUID of the device.",
                            "optional": false
                        },
                        "unit": {
                            "type": "enum",
                            "description": "Seek mode of operation",
                            "optional": false
                        },
                        "target": {
                            "type": "int",
                            "description": "The offset (in milliseconds) or track number.",
                            "optional": false
                        }
                    },
                    "unit": [
                        "REL_TIME",
                        "TRACK_NR"
                    ]
                }
            },
            "setVolume": {
                "enabled": true,
                "required": [
                    "uuid",
                    "volume"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "uuid": {
                            "type": "string",
                            "description": "The UUID of the device.",
                            "optional": false
                        },
                        "volume": {
                            "type": "int",
                            "description": "The volume, 0-100",
                            "optional": false
                        }
                    }
                }
            },
            "getVolume": {
                "enabled": true,
                "required": [
                    "uuid"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "uuid": {
                            "type": "string",
                            "description": "The UUID of the device.",
                            "optional": false
                        }
                    }
                }
            },
            "setMute": {
                "enabled": true,
                "required": [
                    "uuid",
                    "mute"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "uuid": {
                            "type": "string",
                            "description": "The UUID of the device.",
                            "optional": false
                        },
                        "mute": {
                            "type": "boolean",
                            "description": "The mute setting",
                            "optional": false
                        }
                    }
                }
            },
            "getMute": {
                "enabled": true,
                "required": [
                    "uuid"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "uuid": {
                            "type": "string",
                            "description": "The UUID of the device.",
                            "optional": false
                        }
                    }
                }
            },
            "audioInfo": {
                "enabled": true,
                "required": [
                    "uuid"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "uuid": {
                            "type": "string",
                            "description": "The UUID of the device.",
                            "optional": false
                        }
                    }
                }
            }
        },
        "events": {
            "AVDevicePairingStatus": {
                "required": [
                    "uuid",
                    "status"
                ],
                "valid": {
                    "params": {
                        "uuid": {
                            "type": "string",
                            "description": "UUID of the device",
                            "optional": false
                        },
                        "status": [
                            "STARTED",
                            "ERROR",
                            "COMPLETE"
                        ],
                        "message": {
                            "type": "string",
                            "description": "Optional error message",
                            "optional": true
                        }
                    }
                },
                "description": "Sent when the status of an AV device pairing changes."
            }
        }
    },
    "hubbackup": {
        "correlation_id": "4aece785-8159-4f71-88a5-01cf3b2d7133",
        "attributes": {},
        "is_device": false,
        "methods": {
            "Backup": {
                "enabled": true,
                "required": [
                    "type"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "type": {
                            "type": "enum",
                            "description": "The requested format of the backup data.",
                            "optional": false
                        }
                    },
                    "type": [
                        "V2"
                    ]
                }
            },
            "Restore": {
                "enabled": true,
                "required": [
                    "type",
                    "data"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "type": {
                            "type": "enum",
                            "description": "The format of the backup data.",
                            "optional": false
                        },
                        "data": {
                            "type": "string",
                            "description": "A Base 64 encoded binary blob.",
                            "optional": false
                        }
                    },
                    "type": [
                        "V1",
                        "V2"
                    ]
                }
            }
        },
        "events": {
            "RestoreFinished": {
                "required": [
                    "report"
                ],
                "valid": {
                    "params": {
                        "report": {
                            "type": "list<object>",
                            "description": "A report of migrated devices.",
                            "optional": false
                        }
                    }
                },
                "description": "An event indicating that the migration process has finished."
            },
            "RestoreProgress": {
                "required": [
                    "progress"
                ],
                "valid": {
                    "params": {
                        "progress": {
                            "type": "double",
                            "description": "A progress percentage from 0.0 to 1.0",
                            "optional": false
                        }
                    }
                },
                "description": "A progress report for migration."
            }
        }
    },
    "hub": {
        "correlation_id": "cded3a50-84ae-4537-9f33-d2540b7924c6",
        "attributes": {
            "id": {
                "readonly": true,
                "required": true,
                "type": "string",
                "description": "Driver-owned globally unique identifier for the hub"
            },
            "account": {
                "readonly": true,
                "required": true,
                "type": "uuid",
                "description": "Driver-owned account associated with the hub"
            },
            "place": {
                "readonly": true,
                "required": true,
                "type": "uuid",
                "description": "Driver-owned place where the device is currently located"
            },
            "name": {
                "readonly": false,
                "required": true,
                "type": "string",
                "description": "Human readable name for the hub"
            },
            "image": {
                "readonly": false,
                "required": false,
                "type": "uuid",
                "description": "Media URL to image that represents the hub"
            },
            "vendor": {
                "readonly": true,
                "required": false,
                "type": "string",
                "description": "Vendor name"
            },
            "model": {
                "readonly": true,
                "required": false,
                "type": "string",
                "description": "Model name"
            },
            "state": {
                "readonly": true,
                "required": false,
                "type": "enum",
                "description": "State of the hub",
                "valid": [
                    "NORMAL",
                    "PAIRING",
                    "UNPAIRING",
                    "DOWN"
                ]
            },
            "registrationState": {
                "readonly": true,
                "required": true,
                "type": "enum",
                "description": "The registration state of the hub",
                "valid": [
                    "REGISTERED",
                    "UNREGISTERED",
                    "ORPHANED"
                ]
            },
            "time": {
                "readonly": true,
                "required": true,
                "type": "long",
                "description": "The current time on the hub. Milliseconds since Jan 1, 1970 (UTC)."
            },
            "tz": {
                "readonly": false,
                "required": false,
                "type": "string",
                "description": "The timezone for the hub."
            }
        },
        "is_device": false,
        "methods": {
            "PairingRequest": {
                "enabled": true,
                "required": [
                    "actionType",
                    "timeout"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "actionType": {
                            "type": "enum",
                            "description": "Whether pairing should start or stop",
                            "optional": false
                        },
                        "timeout": {
                            "type": "long",
                            "description": "The amount of time in milliseconds for which the place will be able to add devices",
                            "optional": false
                        }
                    },
                    "actionType": [
                        "START_PAIRING",
                        "STOP_PAIRING"
                    ]
                }
            },
            "UnpairingRequest": {
                "enabled": true,
                "required": [
                    "actionType",
                    "timeout"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "actionType": {
                            "type": "enum",
                            "description": "Whether pairing should start or stop",
                            "optional": false
                        },
                        "timeout": {
                            "type": "long",
                            "description": "The amount of time in milliseconds for which the place will be able to add devices.",
                            "optional": false
                        },
                        "protocol": {
                            "type": "string",
                            "description": "The namespace of the protocol of the device expected to be removed. By default no device is expected to be removed.",
                            "optional": true
                        },
                        "protocolId": {
                            "type": "string",
                            "description": "The protocolId of the device expected to be removed. By default no device is expected to be removed.",
                            "optional": true
                        },
                        "force": {
                            "type": "boolean",
                            "description": "True if the expected device is to be forcefully unpaired. Defaults to false.",
                            "optional": true
                        }
                    },
                    "actionType": [
                        "START_UNPAIRING",
                        "STOP_UNPAIRING"
                    ]
                }
            },
            "ListHubs": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {}
                }
            },
            "ResetLogLevels": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {}
                }
            },
            "SetLogLevel": {
                "enabled": true,
                "required": [
                    "level"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "level": {
                            "type": "enum",
                            "description": "The log level to set the scope to use",
                            "optional": false
                        },
                        "scope": {
                            "type": "enum",
                            "description": "The logging scope affected by the log level, ROOT if none is specified.",
                            "optional": true
                        }
                    },
                    "level": [
                        "TRACE",
                        "DEBUG",
                        "INFO",
                        "WARN",
                        "ERROR"
                    ],
                    "scope": [
                        "ROOT",
                        "AGENT",
                        "ZIGBEE",
                        "ZWAVE",
                        "BLE",
                        "SERCOMM"
                    ]
                }
            },
            "GetLogs": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {}
                }
            },
            "StreamLogs": {
                "enabled": true,
                "required": [
                    "duration"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "duration": {
                            "type": "long",
                            "description": "The amount of time to stream logs in milliseconds.",
                            "optional": false
                        },
                        "severity": {
                            "type": "enum",
                            "description": "The log severity and higher that should be streamed.",
                            "optional": true
                        }
                    },
                    "severity": [
                        "TRACE",
                        "DEBUG",
                        "INFO",
                        "WARN",
                        "ERROR"
                    ]
                }
            },
            "GetConfig": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {
                        "defaults": {
                            "type": "boolean",
                            "description": "A flag indicating if default values should be reported.",
                            "optional": true
                        },
                        "matching": {
                            "type": "string",
                            "description": "A regular expression used to select keys to include in the response.",
                            "optional": true
                        }
                    }
                }
            },
            "SetConfig": {
                "enabled": true,
                "required": [
                    "config"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "config": {
                            "type": "map<string>",
                            "description": "Key/value pairs to set in the hub configuration.",
                            "optional": false
                        }
                    }
                }
            },
            "Delete": {
                "enabled": false,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {}
                }
            }
        },
        "events": {
            "HubConnected": {
                "required": [],
                "valid": {
                    "params": {}
                },
                "description": "Sent when a hub comes online.  This may be very specific to the given protocol and require client interpretation."
            },
            "HubDisconnected": {
                "required": [],
                "valid": {
                    "params": {}
                },
                "description": "Sent when a hub goes offline.  This may be very specific to the given protocol and require client interpretation."
            }
        }
    },
    "hubchime": {
        "correlation_id": "04df44d0-5e65-45cd-b508-5a1a06134c15",
        "attributes": {},
        "is_device": false,
        "methods": {
            "chime": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {}
                }
            }
        },
        "events": {}
    },
    "hubconn": {
        "correlation_id": "58ea3a5d-091e-4be1-9576-3e4b00b6a877",
        "attributes": {
            "state": {
                "readonly": true,
                "required": true,
                "type": "enum",
                "description": "Determines if the connected state of the hub, if it is online or offline.",
                "valid": [
                    "ONLINE",
                    "HANDSHAKE",
                    "OFFLINE"
                ]
            },
            "lastchange": {
                "readonly": true,
                "required": true,
                "type": "timestamp",
                "description": "Time of the last change in connect.state."
            },
            "connQuality": {
                "readonly": true,
                "required": false,
                "type": "int",
                "description": "Determines if the connected state of the hub, if it is online or offline.",
                "min": "0",
                "max": "100"
            },
            "pingTime": {
                "readonly": true,
                "required": true,
                "type": "int",
                "description": "A measure of the hub to hub bridge ping time.",
                "min": "0",
                "max": "100000"
            },
            "pingResponse": {
                "readonly": true,
                "required": true,
                "type": "int",
                "description": "Percent number of pongs recevied for pongs sent over X period of time.",
                "min": "0",
                "max": "100"
            }
        },
        "is_device": false,
        "methods": {},
        "events": {}
    },
    "hubdebug": {
        "correlation_id": "cbd1e536-9e28-4bd9-83ab-005b1e3b6a3b",
        "attributes": {},
        "is_device": false,
        "methods": {
            "GetFiles": {
                "enabled": true,
                "required": [
                    "paths"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "paths": {
                            "type": "list<string>",
                            "description": "List of files/directories to return.",
                            "optional": false
                        }
                    }
                }
            },
            "ExecProcess": {
                "enabled": true,
                "required": [
                    "cmd"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "cmd": {
                            "type": "string",
                            "description": "Command to run",
                            "optional": false
                        },
                        "args": {
                            "type": "list<string>",
                            "description": "Command arguments, if any.",
                            "optional": true
                        },
                        "stdin": {
                            "type": "string",
                            "description": "Additional input data, if any.",
                            "optional": true
                        },
                        "timeout": {
                            "type": "int",
                            "description": "Command timeout, in ms.",
                            "optional": true
                        }
                    }
                }
            },
            "GetAgentDb": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {}
                }
            },
            "GetSyslog": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {}
                }
            },
            "GetBootlog": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {}
                }
            },
            "GetProcesses": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {}
                }
            },
            "GetLoad": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {}
                }
            }
        },
        "events": {}
    },
    "hubhue": {
        "correlation_id": "9bf63cbb-1c7d-40bd-86b3-a0b7b180389f",
        "attributes": {
            "bridgesAvailable": {
                "readonly": true,
                "required": true,
                "type": "map<string>",
                "description": "Mapping of UUIDs to models of bridges that have been seen and are online but not paired"
            },
            "bridgesPaired": {
                "readonly": true,
                "required": true,
                "type": "map<string>",
                "description": "Mapping of UUIDs to models of birdges that have been paired"
            },
            "lightsAvailable": {
                "readonly": true,
                "required": true,
                "type": "map<string>",
                "description": "The lights available for pairing where the key is the light's identifier and the value is the uuid of bridge the light is behind"
            },
            "lightsPaired": {
                "readonly": true,
                "required": true,
                "type": "map<string>",
                "description": "The lights paired where the key is the light's identifier and the value is the bridge the uuid of the bridge the light is behind"
            }
        },
        "is_device": false,
        "methods": {},
        "events": {}
    },
    "hubmetric": {
        "correlation_id": "553b126c-e265-412d-903a-e37aadc4ef1b",
        "attributes": {
            "metricsjobs": {
                "readonly": true,
                "required": true,
                "type": "list<string>",
                "description": "List of the active metrics reporting jobs."
            }
        },
        "is_device": false,
        "methods": {
            "StartMetricsJob": {
                "enabled": true,
                "required": [
                    "jobname",
                    "periodMs",
                    "durationMs",
                    "metrics"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "jobname": {
                            "type": "String",
                            "description": "Name of the job to run.",
                            "optional": false
                        },
                        "periodMs": {
                            "type": "long",
                            "description": "How often to get metric updates.",
                            "optional": false
                        },
                        "durationMs": {
                            "type": "long",
                            "description": "How long to run the metrics.",
                            "optional": false
                        },
                        "metrics": {
                            "type": "list<string>",
                            "description": "Name fo the metrics to run, can be a regex to match multiple metrics.",
                            "optional": false
                        }
                    }
                }
            },
            "EndMetricsJobs": {
                "enabled": true,
                "required": [
                    "jobname"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "jobname": {
                            "type": "string",
                            "description": "Name of the job to stop stopping.",
                            "optional": false
                        }
                    }
                }
            },
            "GetMetricsJobInfo": {
                "enabled": true,
                "required": [
                    "jobname"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "jobname": {
                            "type": "string",
                            "description": "Name of the job to fetch details about.",
                            "optional": false
                        }
                    }
                }
            },
            "ListMetrics": {
                "enabled": true,
                "required": [
                    "regex"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "regex": {
                            "type": "string",
                            "description": "Name of the metrics to view.",
                            "optional": false
                        }
                    }
                }
            },
            "GetStoredMetrics": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {}
                }
            }
        },
        "events": {}
    },
    "hubnet": {
        "correlation_id": "5ed940a7-0e70-4fbc-82e2-035ed17bdfa1",
        "attributes": {
            "type": {
                "readonly": true,
                "required": true,
                "type": "enum",
                "description": "Name of the primary network interface.",
                "valid": [
                    "ETH",
                    "3G",
                    "WIFI"
                ]
            },
            "uptime": {
                "readonly": true,
                "required": true,
                "type": "long",
                "description": "Elapsed second since last change of the active interface type."
            },
            "ip": {
                "readonly": true,
                "required": true,
                "type": "string",
                "description": "ip address of the active interface"
            },
            "externalip": {
                "readonly": true,
                "required": true,
                "type": "string",
                "description": "External ip address of the active interface as detected by the hub bridge."
            },
            "netmask": {
                "readonly": true,
                "required": true,
                "type": "string",
                "description": "netmask of the gateway"
            },
            "gateway": {
                "readonly": true,
                "required": true,
                "type": "string",
                "description": "IP Address gateway"
            },
            "dns": {
                "readonly": true,
                "required": true,
                "type": "string",
                "description": "CSV of the DNS server IP Addresses."
            },
            "interfaces": {
                "readonly": true,
                "required": true,
                "type": "list<string>",
                "description": "ip address of the active interface"
            }
        },
        "is_device": false,
        "methods": {
            "GetRoutingTable": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {}
                }
            }
        },
        "events": {}
    },
    "hubpow": {
        "correlation_id": "d6b64a39-0105-4107-a568-d4565f09f41c",
        "attributes": {
            "source": {
                "readonly": true,
                "required": true,
                "type": "enum",
                "description": "Indicates where the power from the hub is coming from.",
                "valid": [
                    "MAINS",
                    "BATTERY"
                ]
            },
            "mainscpable": {
                "readonly": true,
                "required": true,
                "type": "boolean",
                "description": "If the hub can be plugged in or not."
            },
            "Battery": {
                "readonly": true,
                "required": false,
                "type": "int",
                "description": "Current battery remaining, in percent"
            }
        },
        "is_device": false,
        "methods": {},
        "events": {
            "HubPowerSourceChanged": {
                "required": [],
                "valid": {
                    "params": {}
                },
                "description": "Event to indicate the power source changed."
            },
            "HubBatteryLow": {
                "required": [],
                "valid": {
                    "params": {}
                },
                "description": "Event to indicate that the battery level is low."
            }
        }
    },
    "hubrflx": {
        "correlation_id": "85b0a377-99d6-4f05-b85c-cc9d9c38664f",
        "attributes": {
            "numDrivers": {
                "readonly": true,
                "required": true,
                "type": "int",
                "description": "The number of drivers present in the hub's current driver database."
            },
            "dbHash": {
                "readonly": true,
                "required": true,
                "type": "string",
                "description": "A hash value over the contents of the hub's current driver database."
            },
            "numDevices": {
                "readonly": true,
                "required": true,
                "type": "int",
                "description": "The number of devices on the hub that are running reflexes."
            },
            "numPins": {
                "readonly": true,
                "required": true,
                "type": "int",
                "description": "The number of user pins on the hub that are running reflexes."
            },
            "versionSupported": {
                "readonly": true,
                "required": true,
                "type": "int",
                "description": "The version of hub local reflexes currently supported by the hub."
            }
        },
        "is_device": false,
        "methods": {},
        "events": {
            "SyncNeeded": {
                "required": [],
                "valid": {
                    "params": {}
                },
                "description": "Event to indicate that the hub should sync devices with the platform."
            }
        }
    },
    "hubsercomm": {
        "correlation_id": "843cb0d3-5b64-48eb-a735-ca8be93948f7",
        "attributes": {
            "numAvailable": {
                "readonly": true,
                "required": true,
                "type": "int",
                "description": "Number of cameras available for pairing"
            },
            "numPaired": {
                "readonly": true,
                "required": true,
                "type": "int",
                "description": "Number of cameras paired to the hub"
            },
            "numNotOwned": {
                "readonly": true,
                "required": true,
                "type": "int",
                "description": "Number of cameras paired to other hubs"
            },
            "numDisconnected": {
                "readonly": true,
                "required": true,
                "type": "int",
                "description": "Number of cameras that are no longer connected"
            },
            "cameras": {
                "readonly": true,
                "required": true,
                "type": "map<string>",
                "description": "List of cameras (by MAC address) with current mode"
            },
            "username": {
                "readonly": true,
                "required": true,
                "type": "string",
                "description": "Per-hub camera username"
            },
            "certHash": {
                "readonly": true,
                "required": true,
                "type": "string",
                "description": "Per-hub camera certificate hash value"
            }
        },
        "is_device": false,
        "methods": {
            "getCameraPassword": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {}
                }
            },
            "pair": {
                "enabled": true,
                "required": [
                    "mac"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "mac": {
                            "type": "string",
                            "description": "The MAC address of the camera.",
                            "optional": false
                        }
                    }
                }
            },
            "reset": {
                "enabled": true,
                "required": [
                    "mac"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "mac": {
                            "type": "string",
                            "description": "The MAC address of the camera.",
                            "optional": false
                        }
                    }
                }
            },
            "reboot": {
                "enabled": true,
                "required": [
                    "mac"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "mac": {
                            "type": "string",
                            "description": "The MAC address of the camera.",
                            "optional": false
                        }
                    }
                }
            },
            "config": {
                "enabled": true,
                "required": [
                    "mac",
                    "params"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "mac": {
                            "type": "string",
                            "description": "The MAC address of the camera.",
                            "optional": false
                        },
                        "params": {
                            "type": "string",
                            "description": "Parameters to set on camera",
                            "optional": false
                        }
                    }
                }
            },
            "upgrade": {
                "enabled": true,
                "required": [
                    "mac",
                    "url"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "mac": {
                            "type": "string",
                            "description": "The MAC address of the camera.",
                            "optional": false
                        },
                        "url": {
                            "type": "string",
                            "description": "URL of firmware image to install",
                            "optional": false
                        }
                    }
                }
            },
            "getState": {
                "enabled": true,
                "required": [
                    "mac"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "mac": {
                            "type": "string",
                            "description": "The MAC address of the camera.",
                            "optional": false
                        }
                    }
                }
            },
            "getVersion": {
                "enabled": true,
                "required": [
                    "mac"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "mac": {
                            "type": "string",
                            "description": "The MAC address of the camera.",
                            "optional": false
                        }
                    }
                }
            },
            "getDayNight": {
                "enabled": true,
                "required": [
                    "mac"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "mac": {
                            "type": "string",
                            "description": "The MAC address of the camera.",
                            "optional": false
                        }
                    }
                }
            },
            "getIPAddress": {
                "enabled": true,
                "required": [
                    "mac"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "mac": {
                            "type": "string",
                            "description": "The MAC address of the camera.",
                            "optional": false
                        }
                    }
                }
            },
            "getModel": {
                "enabled": true,
                "required": [
                    "mac"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "mac": {
                            "type": "string",
                            "description": "The MAC address of the camera.",
                            "optional": false
                        }
                    }
                }
            },
            "getInfo": {
                "enabled": true,
                "required": [
                    "mac"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "mac": {
                            "type": "string",
                            "description": "The MAC address of the camera.",
                            "optional": false
                        },
                        "group": {
                            "type": "string",
                            "description": "The parameter group for camera configuration.",
                            "optional": true
                        }
                    }
                }
            },
            "getAttrs": {
                "enabled": true,
                "required": [
                    "mac"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "mac": {
                            "type": "string",
                            "description": "The MAC address of the camera.",
                            "optional": false
                        }
                    }
                }
            },
            "motionDetectStart": {
                "enabled": true,
                "required": [
                    "mac",
                    "url"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "mac": {
                            "type": "string",
                            "description": "The MAC address of the camera.",
                            "optional": false
                        },
                        "url": {
                            "type": "string",
                            "description": "The URL to post to when motion occurs.",
                            "optional": false
                        },
                        "username": {
                            "type": "string",
                            "description": "The HTTP username for the post URL.",
                            "optional": true
                        },
                        "password": {
                            "type": "string",
                            "description": "The HTTP password for the post URL.",
                            "optional": true
                        }
                    }
                }
            },
            "motionDetectStop": {
                "enabled": true,
                "required": [
                    "mac"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "mac": {
                            "type": "string",
                            "description": "The MAC address of the camera.",
                            "optional": false
                        }
                    }
                }
            },
            "videoStreamStart": {
                "enabled": true,
                "required": [
                    "mac",
                    "address",
                    "username",
                    "password"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "mac": {
                            "type": "string",
                            "description": "The MAC address of the camera.",
                            "optional": false
                        },
                        "address": {
                            "type": "string",
                            "description": "The address of the video server.",
                            "optional": false
                        },
                        "username": {
                            "type": "string",
                            "description": "The HTTP username for the post URL.",
                            "optional": false
                        },
                        "password": {
                            "type": "string",
                            "description": "The HTTP password for the post URL.",
                            "optional": false
                        },
                        "duration": {
                            "type": "int",
                            "description": "The duration of the video streaming.",
                            "optional": true
                        },
                        "precapture": {
                            "type": "int",
                            "description": "The pre-capture video setting.",
                            "optional": true
                        },
                        "format": {
                            "type": "int",
                            "description": "The video streaming format.",
                            "optional": true
                        },
                        "resolution": {
                            "type": "int",
                            "description": "The video resolution.",
                            "optional": true
                        },
                        "quality_type": {
                            "type": "int",
                            "description": "The video quality type.",
                            "optional": true
                        },
                        "bitrate": {
                            "type": "int",
                            "description": "The video bitrate.",
                            "optional": true
                        },
                        "quality": {
                            "type": "int",
                            "description": "The video quality.",
                            "optional": true
                        },
                        "framerate": {
                            "type": "int",
                            "description": "The video framerate.",
                            "optional": true
                        }
                    }
                }
            },
            "videoStreamStop": {
                "enabled": true,
                "required": [
                    "mac"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "mac": {
                            "type": "string",
                            "description": "The MAC address of the camera.",
                            "optional": false
                        }
                    }
                }
            },
            "wifiScanStart": {
                "enabled": true,
                "required": [
                    "mac"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "mac": {
                            "type": "string",
                            "description": "The MAC address of the camera.",
                            "optional": false
                        }
                    }
                }
            },
            "wifiScanEnd": {
                "enabled": true,
                "required": [
                    "mac"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "mac": {
                            "type": "string",
                            "description": "The MAC address of the camera.",
                            "optional": false
                        }
                    }
                }
            },
            "wifiConnect": {
                "enabled": true,
                "required": [
                    "mac",
                    "ssid",
                    "security"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "mac": {
                            "type": "string",
                            "description": "The MAC address of the camera.",
                            "optional": false
                        },
                        "ssid": {
                            "type": "string",
                            "description": "The ssid of the wireless network.",
                            "optional": false
                        },
                        "security": {
                            "type": "string",
                            "description": "The security type of the wireless network.",
                            "optional": false
                        },
                        "key": {
                            "type": "string",
                            "description": "The authentication key of the wireless network.",
                            "optional": true
                        }
                    }
                }
            },
            "wifiDisconnect": {
                "enabled": true,
                "required": [
                    "mac"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "mac": {
                            "type": "string",
                            "description": "The MAC address of the camera.",
                            "optional": false
                        }
                    }
                }
            },
            "wifiGetAttrs": {
                "enabled": true,
                "required": [
                    "mac"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "mac": {
                            "type": "string",
                            "description": "The MAC address of the camera.",
                            "optional": false
                        }
                    }
                }
            },
            "getCustomAttrs": {
                "enabled": true,
                "required": [
                    "mac"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "mac": {
                            "type": "string",
                            "description": "The MAC address of the camera.",
                            "optional": false
                        }
                    }
                }
            },
            "setCustomAttrs": {
                "enabled": true,
                "required": [
                    "mac",
                    "irLedMode"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "mac": {
                            "type": "string",
                            "description": "The MAC address of the camera.",
                            "optional": false
                        },
                        "irLedMode": {
                            "type": "enum",
                            "description": "The IR LED mode",
                            "optional": false
                        },
                        "irLedLuminance": {
                            "type": "int",
                            "description": "The IR LED luminance, on a scale of 1 to 5.",
                            "optional": true,
                            "min": "1",
                            "max": "5"
                        },
                        "mdMode": {
                            "type": "enum",
                            "description": "The motion detection mode of operation.",
                            "optional": true
                        },
                        "mdThreshold": {
                            "type": "int",
                            "description": "The motion detection threshold, on a scale of 0 to 255.",
                            "optional": true,
                            "min": "0",
                            "max": "255"
                        },
                        "mdSensitivity": {
                            "type": "int",
                            "description": "The motion detection threshold, on a scale of 0 to 10.",
                            "optional": true,
                            "min": "0",
                            "max": "10"
                        },
                        "mdWindowCoordinates": {
                            "type": "string",
                            "description": "The motion detection window in X1,Y1,X2,Y2 format.",
                            "optional": true
                        }
                    },
                    "irLedMode": [
                        "ON",
                        "OFF",
                        "AUTO"
                    ],
                    "mdMode": [
                        "OFF",
                        "PIR",
                        "WINDOW",
                        "BOTH"
                    ]
                }
            },
            "purgeCamera": {
                "enabled": true,
                "required": [
                    "mac"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "mac": {
                            "type": "string",
                            "description": "The MAC address of the camera.",
                            "optional": false
                        }
                    }
                }
            },
            "ptzGetAttrs": {
                "enabled": true,
                "required": [
                    "mac"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "mac": {
                            "type": "string",
                            "description": "The MAC address of the camera.",
                            "optional": false
                        }
                    }
                }
            },
            "ptzGotoHome": {
                "enabled": true,
                "required": [
                    "mac"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "mac": {
                            "type": "string",
                            "description": "The MAC address of the camera.",
                            "optional": false
                        }
                    }
                }
            },
            "ptzGotoAbsolute": {
                "enabled": true,
                "required": [
                    "mac",
                    "pan",
                    "tilt",
                    "zoom"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "mac": {
                            "type": "string",
                            "description": "The MAC address of the camera.",
                            "optional": false
                        },
                        "pan": {
                            "type": "int",
                            "description": "The pan position for the camera.",
                            "optional": false,
                            "min": "0",
                            "max": "359"
                        },
                        "tilt": {
                            "type": "int",
                            "description": "The tilt position for the camera.",
                            "optional": false,
                            "min": "0",
                            "max": "180"
                        },
                        "zoom": {
                            "type": "int",
                            "description": "The zoom position for the camera.",
                            "optional": false,
                            "min": "0",
                            "max": "100"
                        }
                    }
                }
            },
            "ptzGotoRelative": {
                "enabled": true,
                "required": [
                    "mac",
                    "deltaPan",
                    "deltaTilt",
                    "deltaZoom"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "mac": {
                            "type": "string",
                            "description": "The MAC address of the camera.",
                            "optional": false
                        },
                        "deltaPan": {
                            "type": "int",
                            "description": "The pan delta for the camera.",
                            "optional": false,
                            "min": "-32",
                            "max": "32"
                        },
                        "deltaTilt": {
                            "type": "int",
                            "description": "The tilt delta for the camera.",
                            "optional": false,
                            "min": "-32",
                            "max": "32"
                        },
                        "deltaZoom": {
                            "type": "int",
                            "description": "The zoom delta for the camera.",
                            "optional": false,
                            "min": "-32",
                            "max": "32"
                        }
                    }
                }
            }
        },
        "events": {
            "CameraUpgradeStatus": {
                "required": [
                    "mac",
                    "status"
                ],
                "valid": {
                    "params": {
                        "mac": {
                            "type": "string",
                            "description": "MAC address of the camera",
                            "optional": false
                        },
                        "status": [
                            "STARTED",
                            "ERROR",
                            "REBOOTING",
                            "COMPLETE",
                            "DOWNLOADED"
                        ],
                        "message": {
                            "type": "string",
                            "description": "Optional error message",
                            "optional": true
                        }
                    }
                },
                "description": "Sent when the status of a camera firmware upgrade changes."
            },
            "CameraPairingStatus": {
                "required": [
                    "mac",
                    "status"
                ],
                "valid": {
                    "params": {
                        "mac": {
                            "type": "string",
                            "description": "MAC address of the camera",
                            "optional": false
                        },
                        "status": [
                            "STARTED",
                            "ERROR",
                            "COMPLETE"
                        ],
                        "message": {
                            "type": "string",
                            "description": "Optional error message",
                            "optional": true
                        }
                    }
                },
                "description": "Sent when the status of a camera pairing changes."
            },
            "WifiScanResults": {
                "required": [
                    "mac",
                    "message"
                ],
                "valid": {
                    "params": {
                        "mac": {
                            "type": "string",
                            "description": "MAC address of the camera",
                            "optional": false
                        },
                        "message": {
                            "type": "string",
                            "description": "Scan results",
                            "optional": false
                        }
                    }
                },
                "description": "Results of wireless access point scan."
            }
        }
    },
    "hubsounds": {
        "correlation_id": "7d04304e-ed12-4ee2-a6d4-2aa62165ff06",
        "attributes": {
            "playing": {
                "readonly": true,
                "required": true,
                "type": "boolean",
                "description": "Is the hub playing a sounds?"
            },
            "source": {
                "readonly": true,
                "required": true,
                "type": "string",
                "description": "Source of the sounds being played.  File from URL or pre-programmed tone name"
            }
        },
        "is_device": false,
        "methods": {
            "PlayURL": {
                "enabled": true,
                "required": [
                    "url",
                    "repetition"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "url": {
                            "type": "string",
                            "description": "Location of the sound file to play.",
                            "optional": false
                        },
                        "repetition": {
                            "type": "int",
                            "description": "Number of times to play the file.",
                            "optional": false
                        }
                    }
                }
            },
            "PlayTone": {
                "enabled": true,
                "required": [
                    "tone",
                    "durationSec"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "tone": {
                            "type": "enum",
                            "description": "Prebuilt in sound to play from the hub.",
                            "optional": false
                        },
                        "durationSec": {
                            "type": "int",
                            "description": "How long to play the tone.",
                            "optional": false
                        }
                    },
                    "tone": [
                        "ARMED",
                        "ARMING",
                        "INTRUDER",
                        "LOW_BATTERY",
                        "NO_SOUND",
                        "PAIRED",
                        "SAFETY",
                        "UNPAIRED"
                    ]
                }
            },
            "Quiet": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {}
                }
            }
        },
        "events": {}
    },
    "hubvol": {
        "correlation_id": "5e010d06-24b7-4715-80aa-7febebb9c159",
        "attributes": {
            "volume": {
                "readonly": false,
                "required": true,
                "type": "enum",
                "description": "How loud is the speaker on the hub.",
                "valid": [
                    "OFF",
                    "LOW",
                    "MID",
                    "HIGH"
                ]
            }
        },
        "is_device": false,
        "methods": {},
        "events": {}
    },
    "hubzigbee": {
        "correlation_id": "65728c60-ed6c-48db-b43f-37cbfadf3999",
        "attributes": {
            "panid": {
                "readonly": true,
                "required": true,
                "type": "int",
                "description": "The PANID in use by the Zigbee network"
            },
            "extid": {
                "readonly": true,
                "required": true,
                "type": "long",
                "description": "The extended PANID in use by the Zigbee network"
            },
            "channel": {
                "readonly": true,
                "required": true,
                "type": "int",
                "description": "The channel in use by the Zigbee network"
            },
            "power": {
                "readonly": true,
                "required": true,
                "type": "int",
                "description": "The transmit power in use by the Zigbee chip"
            },
            "powermode": {
                "readonly": true,
                "required": true,
                "type": "enum",
                "description": "The power mode used by the Zigbee chip",
                "valid": [
                    "DEFAULT",
                    "BOOST",
                    "ALTERNATE",
                    "BOOST_AND_ALTERNATE"
                ]
            },
            "profile": {
                "readonly": true,
                "required": true,
                "type": "int",
                "description": "The stack profile in use by the Zigbee network"
            },
            "security": {
                "readonly": true,
                "required": true,
                "type": "int",
                "description": "The security level in use by the Zigbee network"
            },
            "supportednwks": {
                "readonly": true,
                "required": true,
                "type": "int",
                "description": "The number of supported Zigbee networks"
            },
            "joining": {
                "readonly": true,
                "required": true,
                "type": "boolean",
                "description": "True if the Zigbee network is allowing joins, false otherwise"
            },
            "updateid": {
                "readonly": true,
                "required": true,
                "type": "int",
                "description": "The NWK update id in use by the Zigbee network"
            },
            "eui64": {
                "readonly": true,
                "required": true,
                "type": "long",
                "description": "The EUI64 of the Zigbee chip"
            },
            "tceui64": {
                "readonly": true,
                "required": true,
                "type": "long",
                "description": "The EUI64 of the Zigbee network's trust center"
            },
            "uptime": {
                "readonly": true,
                "required": true,
                "type": "long",
                "description": "The amount of time since the last Zigbee chip reset"
            },
            "version": {
                "readonly": true,
                "required": true,
                "type": "string",
                "description": "The EZSP version number"
            },
            "manufacturer": {
                "readonly": true,
                "required": true,
                "type": "int",
                "description": "The Zigbee manufacturer code of the Zigbee chip"
            },
            "state": {
                "readonly": true,
                "required": true,
                "type": "enum",
                "description": "The Zigbee network state",
                "valid": [
                    "UP",
                    "DOWN",
                    "JOIN_FAILED",
                    "MOVE_FAILED"
                ]
            }
        },
        "is_device": false,
        "methods": {
            "Reset": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {
                        "type": {
                            "type": "enum",
                            "description": "The type of reset to be performed",
                            "optional": true
                        }
                    },
                    "type": [
                        "SOFT",
                        "HARD"
                    ]
                }
            },
            "Scan": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {}
                }
            },
            "GetConfig": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {}
                }
            },
            "GetStats": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {}
                }
            },
            "GetNodeDesc": {
                "enabled": true,
                "required": [
                    "nwk"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "nwk": {
                            "type": "int",
                            "description": "The network address of the node.",
                            "optional": false
                        }
                    }
                }
            },
            "GetActiveEp": {
                "enabled": true,
                "required": [
                    "nwk"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "nwk": {
                            "type": "int",
                            "description": "The network address of the node.",
                            "optional": false
                        }
                    }
                }
            },
            "GetSimpleDesc": {
                "enabled": true,
                "required": [
                    "nwk",
                    "ep"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "nwk": {
                            "type": "int",
                            "description": "The network address of the node.",
                            "optional": false
                        },
                        "ep": {
                            "type": "int",
                            "description": "The endpoint identifier on the node.",
                            "optional": false
                        }
                    }
                }
            },
            "GetPowerDesc": {
                "enabled": true,
                "required": [
                    "nwk"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "nwk": {
                            "type": "int",
                            "description": "The network address of the node.",
                            "optional": false
                        }
                    }
                }
            },
            "Identify": {
                "enabled": true,
                "required": [
                    "eui64",
                    "duration"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "eui64": {
                            "type": "long",
                            "description": "The network address of the node to be identified.",
                            "optional": false
                        },
                        "duration": {
                            "type": "int",
                            "description": "The network address of the node to be identified.",
                            "optional": false
                        }
                    }
                }
            },
            "Remove": {
                "enabled": true,
                "required": [
                    "eui64"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "eui64": {
                            "type": "long",
                            "description": "The EUI64 of the node to be removed.",
                            "optional": false
                        }
                    }
                }
            },
            "FactoryReset": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {}
                }
            },
            "FormNetwork": {
                "enabled": true,
                "required": [
                    "eui64",
                    "panId",
                    "extPanId",
                    "channel",
                    "nwkkey",
                    "nwkfc",
                    "apsfc",
                    "updateid"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "eui64": {
                            "type": "long",
                            "description": "The eui64 to use for the restored hub",
                            "optional": false
                        },
                        "panId": {
                            "type": "int",
                            "description": "The panid to use for the restored hub",
                            "optional": false
                        },
                        "extPanId": {
                            "type": "long",
                            "description": "The extended panid to use for the restored hub",
                            "optional": false
                        },
                        "channel": {
                            "type": "int",
                            "description": "The channel to use for the restored hub",
                            "optional": false
                        },
                        "nwkkey": {
                            "type": "string",
                            "description": "The base64 encoded network key to use for the restored hub",
                            "optional": false
                        },
                        "nwkfc": {
                            "type": "long",
                            "description": "The network frame counter to use for the restored hub",
                            "optional": false
                        },
                        "apsfc": {
                            "type": "long",
                            "description": "The aps frame counter to use for the restored hub",
                            "optional": false
                        },
                        "updateid": {
                            "type": "int",
                            "description": "The updateid to use for the restored hub",
                            "optional": false
                        }
                    }
                }
            },
            "FixMigration": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {}
                }
            },
            "NetworkInformation": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {}
                }
            }
        },
        "events": {}
    },
    "hubzwave": {
        "correlation_id": "61b8ea60-f3fb-497c-b591-451818a78f84",
        "attributes": {
            "hardware": {
                "readonly": true,
                "required": true,
                "type": "string",
                "description": "hardware version of the chip"
            },
            "firmware": {
                "readonly": true,
                "required": true,
                "type": "string",
                "description": "Current firmware version loaded on the chip."
            },
            "protocol": {
                "readonly": true,
                "required": true,
                "type": "string",
                "description": "Version of the ZDK protocol used."
            },
            "homeId": {
                "readonly": true,
                "required": true,
                "type": "string",
                "description": "Home Id of the Z-wave controller."
            },
            "numDevices": {
                "readonly": true,
                "required": true,
                "type": "int",
                "description": "Number of devices currently paired to the z-wave chip."
            },
            "isSecondary": {
                "readonly": true,
                "required": true,
                "type": "boolean",
                "description": "If this is a secondary controller."
            },
            "isOnOtherNetwork": {
                "readonly": true,
                "required": true,
                "type": "boolean",
                "description": "If this is on another network."
            },
            "isSUC": {
                "readonly": true,
                "required": true,
                "type": "boolean",
                "description": "If this is a SUC."
            },
            "state": {
                "readonly": true,
                "required": true,
                "type": "enum",
                "description": "Current state of the network.",
                "valid": [
                    "INIT",
                    "NORMAL",
                    "PAIRING",
                    "UNPAIRING"
                ]
            },
            "uptime": {
                "readonly": true,
                "required": true,
                "type": "long",
                "description": "The amount of time since the last Z-Wave chip reset"
            },
            "healInProgress": {
                "readonly": true,
                "required": true,
                "type": "boolean",
                "description": "True if the Z-Wave controller is in the process of healing the network."
            },
            "healLastStart": {
                "readonly": true,
                "required": true,
                "type": "timestamp",
                "description": "Timestamp for the last time a Z-Wave network heal was started."
            },
            "healLastFinish": {
                "readonly": true,
                "required": true,
                "type": "timestamp",
                "description": "Timestamp for the last time a Z-Wave network heal was finished."
            },
            "healFinishReason": {
                "readonly": true,
                "required": true,
                "type": "enum",
                "description": "An indication of the reason the last Z-Wave network heal was finished.",
                "valid": [
                    "SUCCESS",
                    "CANCEL",
                    "TERMINATED"
                ]
            },
            "healTotal": {
                "readonly": true,
                "required": true,
                "type": "int",
                "description": "The total number of nodes that an in-progress Z-Wave network heal is optimizing."
            },
            "healCompleted": {
                "readonly": true,
                "required": true,
                "type": "int",
                "description": "The number of nodes that the Z-Wave network heal has completed optimizing."
            },
            "healSuccessful": {
                "readonly": true,
                "required": true,
                "type": "int",
                "description": "The number of nodes that the Z-Wave network heal has successfully optimized."
            },
            "healBlockingControl": {
                "readonly": true,
                "required": true,
                "type": "boolean",
                "description": "True if the Z-Wave network heal process is currently blocking control of Z-Wave devices."
            },
            "healEstimatedFinish": {
                "readonly": true,
                "required": true,
                "type": "timestamp",
                "description": "The estimated time that the heal will finish."
            },
            "healPercent": {
                "readonly": true,
                "required": true,
                "type": "double",
                "description": "The percentage complete of the Z-Wave network heal."
            },
            "healNextScheduled": {
                "readonly": true,
                "required": true,
                "type": "timestamp",
                "description": "The next scheduled execution for a network heal (Java epoch mean no scheduled heal)."
            },
            "healRecommended": {
                "readonly": false,
                "required": true,
                "type": "boolean",
                "description": "True if a heal should be run on the network to restore proper operation."
            }
        },
        "is_device": false,
        "methods": {
            "FactoryReset": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {}
                }
            },
            "Reset": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {
                        "type": {
                            "type": "enum",
                            "description": "The type of reset to be performed",
                            "optional": true
                        }
                    },
                    "type": [
                        "SOFT",
                        "HARD"
                    ]
                }
            },
            "ForcePrimary": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {}
                }
            },
            "ForceSecondary": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {}
                }
            },
            "NetworkInformation": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {}
                }
            },
            "Heal": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {
                        "block": {
                            "type": "boolean",
                            "description": "True if the network optimization process to block control of Z-Wave devices.",
                            "optional": true
                        },
                        "time": {
                            "type": "timestamp",
                            "description": "The time at which the network wide heal should be run (null or java epoch mean immediately)",
                            "optional": true
                        }
                    }
                }
            },
            "CancelHeal": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {}
                }
            },
            "RemoveZombie": {
                "enabled": true,
                "required": [
                    "node"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "node": {
                            "type": "int",
                            "description": "The node id of the node to remove. This node must be zombie.",
                            "optional": false
                        }
                    }
                }
            },
            "Associate": {
                "enabled": true,
                "required": [
                    "node",
                    "groups"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "node": {
                            "type": "int",
                            "description": "The node id of the node to associate with.",
                            "optional": false
                        },
                        "groups": {
                            "type": "set<int>",
                            "description": "The set of groups to associate with.",
                            "optional": false
                        }
                    }
                }
            },
            "AssignReturnRoutes": {
                "enabled": true,
                "required": [
                    "node"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "node": {
                            "type": "int",
                            "description": "The node id of the node to associate with.",
                            "optional": false
                        }
                    }
                }
            }
        },
        "events": {
            "HealComplete": {
                "required": [],
                "valid": {
                    "params": {}
                },
                "description": "Indicates that the requested Z-Wave network heal operation has completed."
            }
        }
    },
    "huebridge": {
        "correlation_id": "b555650f-96f7-484a-9552-2a3aeb14a9eb",
        "attributes": {
            "ipaddress": {
                "readonly": true,
                "required": true,
                "type": "string",
                "description": "Ip address of the hue bridge"
            },
            "mac": {
                "readonly": true,
                "required": true,
                "type": "string",
                "description": "Mac address of the hue bridge ethernet port"
            },
            "apiversion": {
                "readonly": true,
                "required": true,
                "type": "string",
                "description": "Api version of the hue bridge"
            },
            "swversion": {
                "readonly": true,
                "required": true,
                "type": "string",
                "description": "Software version of the hue bridge"
            },
            "zigbeechannel": {
                "readonly": true,
                "required": true,
                "type": "string",
                "description": "Zigbee channel of hte hue bridge"
            },
            "model": {
                "readonly": true,
                "required": true,
                "type": "string",
                "description": "Model id of the hue bridge"
            },
            "bridgeid": {
                "readonly": true,
                "required": true,
                "type": "string",
                "description": "Id of the hue bridge"
            }
        },
        "is_device": true,
        "methods": {},
        "events": {}
    },
    "ident": {
        "correlation_id": "04314316-0810-4275-a43b-9e5777c52d10",
        "attributes": {},
        "is_device": true,
        "methods": {
            "Identify": {
                "enabled": true,
                "required": [
                    "device"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "device": {
                            "type": "string",
                            "decription": "The name of the ident device."
                        }
                    }
                }
            }
        },
        "events": {}
    },
    "ill": {
        "correlation_id": "27501ad6-630c-4143-a0ad-5d6a1c704a12",
        "attributes": {
            "illuminance": {
                "readonly": true,
                "required": true,
                "type": "double",
                "description": "Reflects the current illuminance measured by the device.",
                "min": "0",
                "max": "100000"
            },
            "sensorType": {
                "readonly": true,
                "required": false,
                "type": "enum",
                "description": "Reflects the type of illuminance sensor included in the device.",
                "valid": [
                    "PHOTODIODE",
                    "CMOS"
                ]
            }
        },
        "is_device": true,
        "methods": {},
        "events": {}
    },
    "indicator": {
        "correlation_id": "2bbc7b4f-ecbb-4f29-8f99-dec4fd737640",
        "attributes": {
            "indicator": {
                "readonly": true,
                "required": true,
                "type": "enum",
                "description": "Reflects the state of the indicator on the device.  ON means the indicator is currently active, OFF means the indicators is inactive, and DISABLED means the indicator has been disabled.",
                "valid": [
                    "ON",
                    "OFF",
                    "DISABLED"
                ]
            },
            "enabled": {
                "readonly": false,
                "required": false,
                "type": "boolean",
                "description": "Allows the indicator to be enabled or disabled.  Not all devices will support this attribute."
            },
            "enableSupported": {
                "readonly": true,
                "required": true,
                "type": "boolean",
                "description": "Indicates whether or not the enabled attribute is supported."
            },
            "inverted": {
                "readonly": false,
                "required": false,
                "type": "boolean",
                "description": "Indicates whether operation of the indicator should be inverted, if supported by the device. For example, turn indicator OFF when switch is ON, etc."
            }
        },
        "is_device": true,
        "methods": {},
        "events": {}
    },
    "ipinfo": {
        "correlation_id": "16782689-ddf5-40c5-8752-0e7fae5d39bd",
        "attributes": {
            "ip": {
                "readonly": true,
                "required": true,
                "type": "string",
                "description": "Current local IP address"
            },
            "mac": {
                "readonly": true,
                "required": false,
                "type": "string",
                "description": "MAC Address"
            },
            "netmask": {
                "readonly": true,
                "required": false,
                "type": "string",
                "description": "Current network mask"
            },
            "gateway": {
                "readonly": true,
                "required": false,
                "type": "string",
                "description": "Current gateway IP address"
            }
        },
        "is_device": true,
        "methods": {},
        "events": {}
    },
    "irrcont": {
        "correlation_id": "9dca1048-7838-45ff-8c7e-94e1ffae49f2",
        "attributes": {
            "numZones": {
                "readonly": true,
                "required": true,
                "type": "int",
                "description": "The number of irrigation zones this device controls."
            },
            "controllerState": {
                "readonly": true,
                "required": true,
                "type": "enum",
                "description": "Indicates whether the zone is currently watering or not",
                "valid": [
                    "OFF",
                    "WATERING",
                    "NOT_WATERING",
                    "RAIN_DELAY"
                ]
            },
            "rainDelayStart": {
                "readonly": true,
                "required": true,
                "type": "timestamp",
                "description": "The start time of a rain delay. Used together with rainDelayDuration this can be used to define a time range during which the rain delay is active."
            },
            "rainDelayDuration": {
                "readonly": true,
                "required": true,
                "type": "int",
                "description": "If zero, no rain delay is in affect. If non-zero, this value can be used together with rainDelayStart to define a time range during which the rain delay is active.",
                "min": "0"
            },
            "maxtransitions": {
                "readonly": true,
                "required": true,
                "type": "int",
                "description": "Maximum number of schedule events this device can support. The schedule cannot allow the user to set more total events than this."
            },
            "maxdailytransitions": {
                "readonly": true,
                "type": "int",
                "description": "Maximum number of schedule events per day this device can support.",
                "min": "0"
            },
            "minirrigationtime": {
                "readonly": true,
                "required": true,
                "type": "int",
                "description": "Minimum time one zone can be watering at a time.",
                "min": "0"
            },
            "maxirrigationtime": {
                "readonly": true,
                "required": true,
                "type": "int",
                "description": "Maximum time one zone can be watering at a time.",
                "min": "0"
            },
            "budget": {
                "readonly": false,
                "required": false,
                "type": "int",
                "description": "Default: 100. Setting this number from 10-90 (most devices only support 10% increments) reduces the water usage to that percentage. Setting this number from 110-200) increases water usage for dryer moments. Note: current Orbit devices support 'stacking' meaning if the increased schedule results in a subsequent start time to be delayed, this start time becomes 'stacked' and handled as soon as possible. If the UI supports showing the user what zone is running, supporting budget>100 means the UI will need to compute this stacking. Alternative is to not allow this number to be over 100 (as Iris1 does).",
                "min": "0",
                "max": "200"
            },
            "zonesinfault": {
                "readonly": true,
                "required": true,
                "type": "set<int>",
                "description": "Which zones are currently in fault (solenoid jammed, usually). 0 can represent a single pump, if each zone has a pump than pump and/or solenoid should be represented by zonenum."
            },
            "rainDelay": {
                "readonly": false,
                "required": true,
                "type": "int",
                "description": "This attribute was deprecated in 1.8."
            }
        },
        "is_device": true,
        "methods": {
            "WaterNowV2": {
                "enabled": true,
                "required": [
                    "device",
                    "zone",
                    "duration"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "device": {
                            "type": "string",
                            "decription": "The name of the irrcont device."
                        },
                        "zone": {
                            "type": "string",
                            "description": "The zone number to begin watering.",
                            "optional": false
                        },
                        "duration": {
                            "type": "int",
                            "description": "How long, in minutes, to water the zone.",
                            "optional": false
                        }
                    }
                }
            },
            "CancelV2": {
                "enabled": true,
                "required": [
                    "device",
                    "zone"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "device": {
                            "type": "string",
                            "decription": "The name of the irrcont device."
                        },
                        "zone": {
                            "type": "string",
                            "description": "The zone number to begin watering.",
                            "optional": false
                        }
                    }
                }
            },
            "WaterNow": {
                "enabled": true,
                "required": [
                    "device",
                    "duration"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "device": {
                            "type": "string",
                            "decription": "The name of the irrcont device."
                        },
                        "zonenum": {
                            "type": "int",
                            "description": "This parameter was deprecated in 1.8.",
                            "optional": true
                        },
                        "duration": {
                            "type": "int",
                            "description": "How long, in minutes, to water the zone.",
                            "optional": false
                        }
                    }
                }
            },
            "Cancel": {
                "enabled": true,
                "required": [
                    "device"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "device": {
                            "type": "string",
                            "decription": "The name of the irrcont device."
                        },
                        "zonenum": {
                            "type": "int",
                            "description": "This parameter was deprecated in 1.8.",
                            "optional": true
                        }
                    }
                }
            }
        },
        "events": {}
    },
    "irrsched": {
        "correlation_id": "2d3460ab-b2a0-48d4-94db-00d2a7c966cb",
        "attributes": {
            "refreshSchedule": {
                "readonly": false,
                "required": true,
                "type": "boolean",
                "description": "If true then the device needs to schedule synchronized with the platform."
            }
        },
        "is_device": true,
        "methods": {
            "EnableSchedule": {
                "enabled": true,
                "required": [
                    "device"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "device": {
                            "type": "string",
                            "decription": "The name of the irrsched device."
                        }
                    }
                }
            },
            "DisableSchedule": {
                "enabled": true,
                "required": [
                    "device"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "device": {
                            "type": "string",
                            "decription": "The name of the irrsched device."
                        },
                        "duration": {
                            "type": "int",
                            "description": "The duration in minutes to disable the schedule.  -1 implies indefinitely"
                        }
                    }
                }
            },
            "ClearEvenOddSchedule": {
                "enabled": true,
                "required": [
                    "device"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "device": {
                            "type": "string",
                            "decription": "The name of the irrsched device."
                        },
                        "zone": {
                            "type": "string",
                            "description": "The zone to clear"
                        },
                        "opId": {
                            "type": "string",
                            "description": "The operation ID, this should be returned in success or failure events for alignment"
                        }
                    }
                }
            },
            "SetEvenOddSchedule": {
                "enabled": true,
                "required": [
                    "device"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "device": {
                            "type": "string",
                            "decription": "The name of the irrsched device."
                        },
                        "zone": {
                            "type": "string",
                            "description": "The zone to set the schedule on"
                        },
                        "even": {
                            "type": "boolean",
                            "description": "true for an even day schedule, false for an odd day"
                        },
                        "transitions": {
                            "type": "list<Object>",
                            "description": "Each transition to set containing startTime and duration"
                        },
                        "opId": {
                            "type": "string",
                            "description": "The operation ID, this should be returned in success or failure events for alignment"
                        }
                    }
                }
            },
            "ClearIntervalSchedule": {
                "enabled": true,
                "required": [
                    "device"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "device": {
                            "type": "string",
                            "decription": "The name of the irrsched device."
                        },
                        "zone": {
                            "type": "string",
                            "description": "The zone to clear"
                        },
                        "opId": {
                            "type": "string",
                            "description": "The operation ID, this should be returned in success or failure events for alignment"
                        }
                    }
                }
            },
            "SetIntervalSchedule": {
                "enabled": true,
                "required": [
                    "device"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "device": {
                            "type": "string",
                            "decription": "The name of the irrsched device."
                        },
                        "zone": {
                            "type": "string",
                            "description": "The zone to set the schedule on"
                        },
                        "days": {
                            "type": "int",
                            "description": "The number of days in the interval"
                        },
                        "transitions": {
                            "type": "list<Object>",
                            "description": "Each transition to set containing startTime and duration"
                        },
                        "opId": {
                            "type": "string",
                            "description": "The operation ID, this should be returned in success or failure events for alignment"
                        }
                    }
                }
            },
            "SetIntervalStart": {
                "enabled": true,
                "required": [
                    "device"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "device": {
                            "type": "string",
                            "decription": "The name of the irrsched device."
                        },
                        "zone": {
                            "type": "string",
                            "description": "The zone to set the interval start on"
                        },
                        "startDate": {
                            "type": "timestamp",
                            "description": "The timestamp of the day on which the interval schedule should start"
                        },
                        "opId": {
                            "type": "string",
                            "description": "The operation ID, this should be returned in success or failure events for alignment"
                        }
                    }
                }
            },
            "ClearWeeklySchedule": {
                "enabled": true,
                "required": [
                    "device"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "device": {
                            "type": "string",
                            "decription": "The name of the irrsched device."
                        },
                        "zone": {
                            "type": "string",
                            "description": "The zone to clear"
                        },
                        "opId": {
                            "type": "string",
                            "description": "The operation ID, this should be returned in success or failure events for alignment"
                        }
                    }
                }
            },
            "SetWeeklySchedule": {
                "enabled": true,
                "required": [
                    "device"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "device": {
                            "type": "string",
                            "decription": "The name of the irrsched device."
                        },
                        "zone": {
                            "type": "string",
                            "description": "The zone to set the schedule on"
                        },
                        "days": {
                            "type": "set<string>",
                            "description": "The days to set, each entry will be one of MON,TUE,WED,THU,FRI,SAT or SUN"
                        },
                        "transitions": {
                            "type": "list<Object>",
                            "description": "Each transition to set containing startTime and duration"
                        },
                        "opId": {
                            "type": "string",
                            "description": "The operation ID, this should be returned in success or failure events for alignment"
                        }
                    }
                }
            }
        },
        "events": {
            "ScheduleEnabled": {
                "required": [],
                "valid": {
                    "params": {}
                },
                "description": "Emitted as a result of EnableSchedule"
            },
            "ScheduleApplied": {
                "required": [],
                "valid": {
                    "params": {}
                },
                "description": "Emitted when a schedule is successfully written to the device"
            },
            "ScheduleCleared": {
                "required": [],
                "valid": {
                    "params": {}
                },
                "description": "Emitted when a schedule is successfully cleared from the device"
            },
            "ScheduleFailed": {
                "required": [],
                "valid": {
                    "params": {}
                },
                "description": "Emitted when a schedule could not be applied on the device"
            },
            "ScheduleClearFailed": {
                "required": [],
                "valid": {
                    "params": {}
                },
                "description": "Emitted when a schedule failed to be cleared from the device"
            },
            "SetIntervalStartSucceeded": {
                "required": [],
                "valid": {
                    "params": {}
                },
                "description": "Emitted when setting the interval start date succeeds"
            },
            "SetIntervalStartFailed": {
                "required": [],
                "valid": {
                    "params": {}
                },
                "description": "Emitted when there is a failure to set the interval start date"
            }
        }
    },
    "irr": {
        "correlation_id": "3e2c9551-9222-4c80-85ce-e5ef415d4e1e",
        "attributes": {
            "zoneState": {
                "readonly": true,
                "required": true,
                "type": "enum",
                "description": "Indicates whether the zone is currently watering or not",
                "valid": [
                    "WATERING",
                    "NOT_WATERING"
                ]
            },
            "wateringStart": {
                "readonly": true,
                "required": false,
                "type": "timestamp",
                "description": "If watering, the time at which the watering started. Together with wateringDuration this defines a time range during which watering will be acive."
            },
            "wateringDuration": {
                "readonly": true,
                "required": true,
                "type": "int",
                "description": "If not watering, set to 0. If non-zero, can be used with wateringStart to define a time range during which watering will be active.",
                "min": "0"
            },
            "wateringTrigger": {
                "readonly": true,
                "required": false,
                "type": "enum",
                "description": "If watering, what triggered the watering event",
                "valid": [
                    "MANUAL",
                    "SCHEDULED"
                ]
            },
            "defaultDuration": {
                "readonly": false,
                "required": false,
                "type": "int",
                "description": "The default duration in minutes for scheduling this zone"
            },
            "zonenum": {
                "readonly": true,
                "required": true,
                "type": "int",
                "description": "Index of this zone on the system. Should start at 1 so 0 can represent pump or full system.",
                "min": "0"
            },
            "zonename": {
                "readonly": false,
                "required": true,
                "type": "string",
                "description": "Name of the zone on the platform. ('front yard', 'roses', etc.)"
            },
            "zonecolor": {
                "readonly": false,
                "required": true,
                "type": "enum",
                "description": "Color used to represent the zone on the UI.",
                "valid": [
                    "LIGHTRED",
                    "DARKRED",
                    "ORANGE",
                    "YELLOW",
                    "LIGHTGREEN",
                    "DARKGREEN",
                    "LIGHTBLUE",
                    "DARKBLUE",
                    "VIOLET",
                    "WHITE",
                    "GREY",
                    "BLACK"
                ]
            },
            "wateringRemainingTime": {
                "readonly": true,
                "required": true,
                "type": "int",
                "description": "This attribute was deprecated in the 1.8 release."
            }
        },
        "is_device": true,
        "methods": {},
        "events": {}
    },
    "keypad": {
        "correlation_id": "daa8c2ca-df7e-40cb-bc43-ddbbaf5ad170",
        "attributes": {
            "alarmState": {
                "readonly": false,
                "required": true,
                "type": "enum",
                "description": "          Current alarm state of the keypad.          Generally this should only be controlled via the specific methods (BeginArming, Armed, Disarmed, Soaking, Alerting).          However it may be set manually in case the keypad is no longer in sync with the security system.  In this case the          keypad should avoid making transition noises (such as the armed or disarmed beeps).  However if the state is          ARMING, SOAKING, or ALERTING and the associated sounds are enabled it should beep accordingly.          ",
                "valid": [
                    "DISARMED",
                    "ARMED",
                    "ARMING",
                    "ALERTING",
                    "SOAKING"
                ]
            },
            "alarmMode": {
                "readonly": false,
                "required": true,
                "type": "enum",
                "description": "          The current mode of the alarm.          Generally this should only be controlled via the specific methods (BeginArming, Armed, Disarmed, Soaking, Alerting).          However it may be set manually in case the keypad is no longer in sync with the security system.          ",
                "valid": [
                    "ON",
                    "PARTIAL",
                    "OFF"
                ]
            },
            "alarmSounder": {
                "readonly": false,
                "required": true,
                "type": "enum",
                "description": "          DEPRECATED           When set to ON enabledSounds should be set to [BUTTONS,DISARMED,ARMED,ARMING,SOAKING,ALERTING].          When set to OFF enabledSounds should be set to [].          If enabledSounds is set to a value other than [] this should be changed to ON.          If both alarmSounder and enabledSounds are set in the same request an error should be thrown.          ",
                "valid": [
                    "ON",
                    "OFF"
                ]
            },
            "enabledSounds": {
                "readonly": false,
                "required": true,
                "type": "set<enum>",
                "description": "          This contains the set of times when the keypad should play tones, the common combinations are:          Keypad Sounds On  / Normal Alarm  - [BUTTONS,DISARMED,ARMED,ARMING,SOAKING,ALERTING]          Keypad Sounds Off / Normal Alarm  - [ALERTING]          Keypad Sounds On  / Silent Alarm  - [BUTTONS,DISARMED,ARMED,ARMING]          Keypad Sounds Off / Silent Alarm  - []                    Each sound should be enabled if it is present in the set or disabled if it is not present:          BUTTONS - Button presses should beep          DISARMED - Play a tone when the keypad disarms          ARMING - Play an exit delay tone          ARMED - Play a tone when the keypad is armed          SOAKING - Play an entrance delay tone          ALERTING - Play an alert tone          ",
                "valid": [
                    "BUTTONS",
                    "DISARMED",
                    "ARMED",
                    "ARMING",
                    "SOAKING",
                    "ALERTING"
                ]
            }
        },
        "is_device": true,
        "methods": {
            "BeginArming": {
                "enabled": true,
                "required": [
                    "device",
                    "delayInS",
                    "alarmMode"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "device": {
                            "type": "string",
                            "decription": "The name of the keypad device."
                        },
                        "delayInS": {
                            "type": "int",
                            "description": "The exit delay in seconds",
                            "optional": false
                        },
                        "alarmMode": {
                            "type": "enum",
                            "description": "The mode the alarm should be armed into.",
                            "optional": false
                        }
                    },
                    "alarmMode": [
                        "ON",
                        "PARTIAL"
                    ]
                }
            },
            "Armed": {
                "enabled": true,
                "required": [
                    "device",
                    "alarmMode"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "device": {
                            "type": "string",
                            "decription": "The name of the keypad device."
                        },
                        "alarmMode": {
                            "type": "enum",
                            "description": "The mode the alarm is armed into.",
                            "optional": false
                        }
                    },
                    "alarmMode": [
                        "ON",
                        "PARTIAL"
                    ]
                }
            },
            "Disarmed": {
                "enabled": true,
                "required": [
                    "device"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "device": {
                            "type": "string",
                            "decription": "The name of the keypad device."
                        }
                    }
                }
            },
            "Soaking": {
                "enabled": true,
                "required": [
                    "device",
                    "durationInS",
                    "alarmMode"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "device": {
                            "type": "string",
                            "decription": "The name of the keypad device."
                        },
                        "durationInS": {
                            "type": "int",
                            "description": "The mode the alarm is armed into.",
                            "optional": false
                        },
                        "alarmMode": {
                            "type": "enum",
                            "description": "The mode the alarm is armed into.",
                            "optional": false
                        }
                    },
                    "alarmMode": [
                        "ON",
                        "PARTIAL"
                    ]
                }
            },
            "Alerting": {
                "enabled": true,
                "required": [
                    "device",
                    "alarmMode"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "device": {
                            "type": "string",
                            "decription": "The name of the keypad device."
                        },
                        "alarmMode": {
                            "type": "enum",
                            "description": "The mode the alarm is armed into.",
                            "optional": false
                        }
                    },
                    "alarmMode": [
                        "ON",
                        "PARTIAL",
                        "PANIC"
                    ]
                }
            },
            "Chime": {
                "enabled": true,
                "required": [
                    "device"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "device": {
                            "type": "string",
                            "decription": "The name of the keypad device."
                        }
                    }
                }
            },
            "ArmingUnavailable": {
                "enabled": true,
                "required": [
                    "device"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "device": {
                            "type": "string",
                            "decription": "The name of the keypad device."
                        }
                    }
                }
            }
        },
        "events": {
            "ArmPressed": {
                "required": [
                    "mode",
                    "bypass"
                ],
                "valid": {
                    "params": {
                        "mode": [
                            "ON",
                            "PARTIAL"
                        ],
                        "bypass": {
                            "type": "boolean",
                            "description": "True if currently alarming devices should be bypassed.",
                            "optional": false
                        }
                    }
                },
                "description": "The arm button has been pressed on the keypad."
            },
            "DisarmPressed": {
                "required": [],
                "valid": {
                    "params": {}
                },
                "description": "The disarm button has been pressed on the keypad."
            },
            "PanicPressed": {
                "required": [],
                "valid": {
                    "params": {}
                },
                "description": "The panic button has been pressed on the keypad."
            },
            "InvalidPinEntered": {
                "required": [],
                "valid": {
                    "params": {}
                },
                "description": "User has typed in an invalid pin on the keypad, as verified by the Pin Management API."
            }
        }
    },
    "sublawnngarden": {
        "correlation_id": "04bab3bc-35e0-4d35-b3b3-b32dea9713db",
        "attributes": {
            "controllers": {
                "readonly": true,
                "required": true,
                "type": "set<String>",
                "description": "The addresses of all irrigation controllers at this place"
            },
            "scheduleStatus": {
                "readonly": true,
                "required": true,
                "type": "map<IrrigationScheduleStatus>",
                "description": "The current scheduling status of all controllers"
            },
            "oddSchedules": {
                "readonly": true,
                "required": true,
                "type": "map<IrrigationSchedule>",
                "description": "The odd day schedules for all controllers"
            },
            "evenSchedules": {
                "readonly": true,
                "required": true,
                "type": "map<IrrigationSchedule>",
                "description": "The even day schedules for all controllers"
            },
            "weeklySchedules": {
                "readonly": true,
                "required": true,
                "type": "map<IrrigationSchedule>",
                "description": "The weekly schedules for all controllers"
            },
            "intervalSchedules": {
                "readonly": true,
                "required": true,
                "type": "map<IntervalIrrigationSchedule>",
                "description": "The interval schedules for all controllers"
            },
            "nextEvent": {
                "readonly": true,
                "required": true,
                "type": "IrrigationTransitionEvent",
                "description": "The immediate next event across all active schedules"
            },
            "zonesWatering": {
                "readonly": true,
                "required": true,
                "type": "map<ZoneWatering>",
                "description": "Metadata about the current watering zone for each controller."
            }
        },
        "is_device": false,
        "methods": {
            "StopWatering": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {
                        "controller": {
                            "type": "String",
                            "description": "The address of the controller to stop"
                        },
                        "currentOnly": {
                            "type": "boolean",
                            "description": "Ignored if watering was triggered manually.  If watering was triggered on a schedule this controls whether just this zone is stopped or all zones in the scheduled event.  If not provided, it will be assumed to be true",
                            "optional": true
                        }
                    }
                }
            },
            "SwitchScheduleMode": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {
                        "controller": {
                            "type": "string",
                            "description": "The address of the controller"
                        },
                        "mode": {
                            "type": "enum",
                            "description": "The new mode to enable on the device"
                        }
                    },
                    "mode": [
                        "WEEKLY",
                        "ODD",
                        "EVEN",
                        "INTERVAL"
                    ]
                }
            },
            "EnableScheduling": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {
                        "controller": {
                            "type": "string",
                            "description": "The address of the controller"
                        }
                    }
                }
            },
            "DisableScheduling": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {
                        "controller": {
                            "type": "string",
                            "description": "The address of the controller"
                        }
                    }
                }
            },
            "Skip": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {
                        "controller": {
                            "type": "string",
                            "description": "The address of the controller"
                        },
                        "hours": {
                            "type": "int",
                            "description": "The number of hours to skip"
                        }
                    }
                }
            },
            "CancelSkip": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {
                        "controller": {
                            "type": "string",
                            "description": "The address of the controller"
                        }
                    }
                }
            },
            "ConfigureIntervalSchedule": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {
                        "controller": {
                            "type": "string",
                            "description": "The address of the controller"
                        },
                        "startTime": {
                            "type": "timestamp",
                            "description": "The time on which the interval starts.  Technically it will start on midnight of the date given"
                        },
                        "days": {
                            "type": "int",
                            "description": "The number of interval days"
                        }
                    }
                }
            },
            "CreateWeeklyEvent": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {
                        "controller": {
                            "type": "string",
                            "description": "The address of the controller"
                        },
                        "days": {
                            "type": "set<string>",
                            "description": "The days the event will fire.  Must be MON, TUE, WED, THU, FRI, SAT, SUN"
                        },
                        "timeOfDay": {
                            "type": "string",
                            "description": "The time of day the event starts.  Must be of the form HH:mm in the 24 our clock"
                        },
                        "zoneDurations": {
                            "type": "list<ZoneDuration>",
                            "description": "The length of time to water for each zone"
                        }
                    }
                }
            },
            "UpdateWeeklyEvent": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {
                        "controller": {
                            "type": "string",
                            "description": "The address of the controller"
                        },
                        "eventId": {
                            "type": "string",
                            "description": "The identifier for the event to remove"
                        },
                        "days": {
                            "type": "set<string>",
                            "description": "The days the event will fire.  Must be MON, TUE, WED, THU, FRI, SAT, SUN"
                        },
                        "timeOfDay": {
                            "type": "string",
                            "description": "The time of day the event starts.  Must be of the form HH:mm in the 24 our clock"
                        },
                        "zoneDurations": {
                            "type": "list<ZoneDuration>",
                            "description": "The length of time to water for each zone"
                        },
                        "day": {
                            "type": "enum",
                            "description": "The day to update.  If not provided all days will be updated",
                            "optional": true
                        }
                    },
                    "day": [
                        "MON",
                        "TUE",
                        "WED",
                        "THU",
                        "FRI",
                        "SAT",
                        "SUN"
                    ]
                }
            },
            "RemoveWeeklyEvent": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {
                        "controller": {
                            "type": "string",
                            "description": "The address of the controller"
                        },
                        "eventId": {
                            "type": "string",
                            "description": "The identifier for the event to remove"
                        },
                        "day": {
                            "type": "enum",
                            "description": "The specific day to remove.  If not provided all days (i.e. the entire event) will be removed",
                            "optional": true
                        }
                    },
                    "day": [
                        "MON",
                        "TUE",
                        "WED",
                        "THU",
                        "FRI",
                        "SAT",
                        "SUN"
                    ]
                }
            },
            "CreateScheduleEvent": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {
                        "controller": {
                            "type": "string",
                            "description": "The address of the controller"
                        },
                        "mode": {
                            "type": "enum",
                            "description": "The mode of the schedule to add the event to"
                        },
                        "timeOfDay": {
                            "type": "string",
                            "description": "The time of day the event starts.  Must be of the form HH:mm in the 24 our clock"
                        },
                        "zoneDurations": {
                            "type": "list<ZoneDuration>",
                            "description": "The length of time to water for each zone"
                        }
                    },
                    "mode": [
                        "ODD",
                        "EVEN",
                        "INTERVAL"
                    ]
                }
            },
            "UpdateScheduleEvent": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {
                        "controller": {
                            "type": "string",
                            "description": "The address of the controller"
                        },
                        "mode": {
                            "type": "enum",
                            "description": "The mode of the schedule"
                        },
                        "eventId": {
                            "type": "string",
                            "description": "The identifier for the event to remove"
                        },
                        "timeOfDay": {
                            "type": "string",
                            "description": "The time of day the event starts.  Must be of the form HH:mm in the 24 our clock"
                        },
                        "zoneDurations": {
                            "type": "list<ZoneDuration>",
                            "description": "The length of time to water for each zone"
                        }
                    },
                    "mode": [
                        "ODD",
                        "EVEN",
                        "INTERVAL"
                    ]
                }
            },
            "RemoveScheduleEvent": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {
                        "controller": {
                            "type": "string",
                            "description": "The address of the controller"
                        },
                        "mode": {
                            "type": "enum",
                            "description": "The mode of the schedule"
                        },
                        "eventId": {
                            "type": "string",
                            "description": "The identifier for the event to remove"
                        }
                    },
                    "mode": [
                        "ODD",
                        "EVEN",
                        "INTERVAL"
                    ]
                }
            },
            "SyncSchedule": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {
                        "controller": {
                            "type": "string",
                            "description": "The address of the controller"
                        },
                        "mode": {
                            "type": "enum",
                            "description": "The mode of the schedule"
                        }
                    },
                    "mode": [
                        "ODD",
                        "EVEN",
                        "INTERVAL",
                        "WEEKLY"
                    ]
                }
            },
            "SyncScheduleEvent": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {
                        "controller": {
                            "type": "string",
                            "description": "The address of the controller"
                        },
                        "mode": {
                            "type": "enum",
                            "description": "The mode of the schedule"
                        },
                        "eventId": {
                            "type": "string",
                            "description": "The identifier for the event to remove"
                        }
                    },
                    "mode": [
                        "ODD",
                        "EVEN",
                        "INTERVAL",
                        "WEEKLY"
                    ]
                }
            }
        },
        "events": {
            "StartWatering": {
                "required": [
                    "zone",
                    "controller",
                    "trigger"
                ],
                "valid": {
                    "params": {
                        "zone": {
                            "type": "string",
                            "description": "The identifier for the zone.",
                            "optional": false
                        },
                        "controller": {
                            "type": "string",
                            "description": "The address of the controller that manages the zone.",
                            "optional": false
                        },
                        "trigger": [
                            "MANUAL",
                            "SCHEDULED"
                        ]
                    }
                },
                "description": "Fired when a zone starts watering."
            },
            "StopWatering": {
                "required": [
                    "zone",
                    "controller",
                    "trigger"
                ],
                "valid": {
                    "params": {
                        "zone": {
                            "type": "string",
                            "description": "The identifier for the zone.",
                            "optional": false
                        },
                        "controller": {
                            "type": "string",
                            "description": "The address of the controller that manages the zone.",
                            "optional": false
                        },
                        "trigger": [
                            "MANUAL",
                            "SCHEDULED"
                        ]
                    }
                },
                "description": "Fired when a zone stops watering."
            },
            "SkipWatering": {
                "required": [
                    "controller",
                    "hours"
                ],
                "valid": {
                    "params": {
                        "controller": {
                            "type": "string",
                            "description": "The address of the controller that manages the zone.",
                            "optional": false
                        },
                        "hours": {
                            "type": "int",
                            "description": "How long watering should be skipped.",
                            "optional": false
                        }
                    }
                },
                "description": "Fired a controller is set to skip watering."
            },
            "UpdateSchedule": {
                "required": [
                    "mode"
                ],
                "valid": {
                    "params": {
                        "mode": [
                            "WEEKLY",
                            "INTERVAL",
                            "ODD",
                            "EVEN"
                        ]
                    }
                },
                "description": "Fired when the subsystem schedule is updated."
            },
            "ApplyScheduleToDevice": {
                "required": [
                    "mode",
                    "controller"
                ],
                "valid": {
                    "params": {
                        "mode": [
                            "WEEKLY",
                            "INTERVAL",
                            "ODD",
                            "EVEN"
                        ],
                        "controller": {
                            "type": "string",
                            "description": "The address of the controller that manages the zone.",
                            "optional": false
                        }
                    }
                },
                "description": "Fired when a schedule is applied to a controller."
            },
            "ApplyScheduleToDeviceFailed": {
                "required": [
                    "mode",
                    "controller"
                ],
                "valid": {
                    "params": {
                        "mode": [
                            "WEEKLY",
                            "INTERVAL",
                            "ODD",
                            "EVEN"
                        ],
                        "controller": {
                            "type": "string",
                            "description": "The address of the controller that manages the zone.",
                            "optional": false
                        }
                    }
                },
                "description": "Fired when a schedule fails to be applied to a controller."
            }
        }
    },
    "gas": {
        "correlation_id": "f6e4379a-0c98-491b-a993-d781fc663ec3",
        "attributes": {
            "state": {
                "readonly": true,
                "required": true,
                "type": "enum",
                "description": "Reflects whether or not a natural gas leak has been detected by the sensor.",
                "valid": [
                    "SAFE",
                    "LEAK"
                ]
            },
            "statechanged": {
                "readonly": true,
                "required": true,
                "type": "timestamp",
                "description": "UTC date time of last state change"
            }
        },
        "is_device": true,
        "methods": {},
        "events": {}
    },
    "leakh2o": {
        "correlation_id": "ffb4a896-280b-4c99-97db-486934663332",
        "attributes": {
            "state": {
                "readonly": false,
                "required": true,
                "type": "enum",
                "description": "Reflects the state of the leak detector.",
                "valid": [
                    "SAFE",
                    "LEAK"
                ]
            },
            "statechanged": {
                "readonly": true,
                "required": true,
                "type": "timestamp",
                "description": "UTC date time of last state change"
            }
        },
        "is_device": true,
        "methods": {
            "leakh2o": {
                "enabled": true,
                "required": [
                    "device"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "device": {
                            "type": "string",
                            "decription": "The name of the leakh2o device."
                        },
                        "state": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "events": {}
    },
    "light": {
        "correlation_id": "1b1809c5-fca0-4d65-8dc3-003791098141",
        "attributes": {
            "colormode": {
                "readonly": false,
                "required": true,
                "type": "enum",
                "description": "Reflects the current color mode of the light (or Normal for non-color devices).",
                "valid": [
                    "NORMAL",
                    "COLOR",
                    "COLORTEMP"
                ]
            }
        },
        "is_device": true,
        "methods": {},
        "events": {}
    },
    "sublightsnswitches": {
        "correlation_id": "69432a5c-9cf6-4cca-b19a-2483ffb155d0",
        "attributes": {
            "switchDevices": {
                "readonly": true,
                "required": true,
                "type": "set<String>",
                "description": "The set of switch devices in the place"
            },
            "deviceGroups": {
                "readonly": true,
                "required": true,
                "type": "set<String>",
                "description": "The addresses of LIGHTS device groups defined at this place"
            },
            "onDeviceCounts": {
                "readonly": true,
                "required": true,
                "type": "map<int>",
                "description": "A map of deviceTypeHint to count of devices that are currently on."
            }
        },
        "is_device": false,
        "methods": {},
        "events": {}
    },
    "lutronbridge": {
        "correlation_id": "73550f6d-69f1-4f77-9d6a-c3898ea403b9",
        "attributes": {
            "href": {
                "readonly": true,
                "required": true,
                "type": "string",
                "description": "Unique identifier of a Lutron device"
            },
            "operatingmode": {
                "readonly": true,
                "required": true,
                "type": "enum",
                "description": "Current operating mode fo the system.",
                "valid": [
                    "STARTUP",
                    "NORMAL",
                    "ASSOCIATION",
                    "ERROR"
                ]
            },
            "serialnumber": {
                "readonly": true,
                "required": true,
                "type": "string",
                "description": "Serial number of the device."
            }
        },
        "is_device": true,
        "methods": {},
        "events": {}
    },
    "mobiledevice": {
        "correlation_id": "d3295e96-1576-4b84-9f4e-15ba35d70b42",
        "attributes": {
            "personId": {
                "readonly": true,
                "required": true,
                "type": "string",
                "description": "Platform-owned identifier of the person that owns this device."
            },
            "deviceIndex": {
                "readonly": true,
                "required": true,
                "type": "int",
                "description": "Platform-owned index for the device that uniquely identifies it within the context of the person"
            },
            "associated": {
                "readonly": true,
                "required": true,
                "type": "timestamp",
                "description": "Platform-owned timestamp of when it associated this mobile device with the person."
            },
            "osType": {
                "readonly": true,
                "required": true,
                "type": "string",
                "description": "The type of operating system the mobile device is running (iOS, Android for example)."
            },
            "osVersion": {
                "readonly": false,
                "required": false,
                "type": "string",
                "description": "The version of the operating system running on the mobile device."
            },
            "formFactor": {
                "readonly": false,
                "required": false,
                "type": "string",
                "description": "The form factor of the device (phone, tablet for example)."
            },
            "phoneNumber": {
                "readonly": false,
                "required": false,
                "type": "string",
                "description": "The phone number of the device if present."
            },
            "deviceIdentifier": {
                "readonly": false,
                "required": false,
                "type": "string",
                "description": "The mobile device provided unique identifier"
            },
            "deviceModel": {
                "readonly": false,
                "required": false,
                "type": "string",
                "description": "The model of the device if known."
            },
            "deviceVendor": {
                "readonly": false,
                "required": false,
                "type": "string",
                "description": "The vendor of the device if known."
            },
            "resolution": {
                "readonly": false,
                "required": false,
                "type": "string",
                "description": "The screen resolution of the device (ex. xhdpi)"
            },
            "notificationToken": {
                "readonly": false,
                "required": false,
                "type": "string",
                "description": "The token for sending push notifications to this device if it is registered to do so."
            },
            "lastLatitude": {
                "readonly": false,
                "required": false,
                "type": "double",
                "description": "The last measured latitude if collected."
            },
            "lastLongitude": {
                "readonly": false,
                "required": false,
                "type": "double",
                "description": "The last measured longitude if collected."
            },
            "lastLocationTime": {
                "readonly": true,
                "required": false,
                "type": "timestamp",
                "description": "The timestamp that the latitude and longitude were last collected."
            },
            "name": {
                "readonly": false,
                "required": false,
                "type": "string",
                "description": "A friendly name for the device."
            },
            "appVersion": {
                "readonly": false,
                "required": false,
                "type": "string",
                "description": "The version of the Iris app installed on this device."
            }
        },
        "is_device": false,
        "methods": {},
        "events": {}
    },
    "incidentmock": {
        "correlation_id": "568f97e7-8f0e-46a3-932a-e0c7b2149533",
        "attributes": {},
        "is_device": false,
        "methods": {
            "Contacted": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {
                        "person": {
                            "type": "String",
                            "description": "The address of the person to contact"
                        }
                    }
                }
            },
            "DispatchCancelled": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {
                        "person": {
                            "type": "String",
                            "description": "The address of the person to contact"
                        }
                    }
                }
            },
            "DispatchAccepted": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {
                        "authority": {
                            "type": "enum",
                            "description": "The authority for the incident incident."
                        }
                    },
                    "authority": [
                        "FIRE",
                        "POLICE"
                    ]
                }
            },
            "DispatchRefused": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {
                        "authority": {
                            "type": "enum",
                            "description": "The authority for the incident incident."
                        }
                    },
                    "authority": [
                        "FIRE",
                        "POLICE"
                    ]
                }
            }
        },
        "events": {}
    },
    "mot": {
        "correlation_id": "65de011b-65aa-4ed9-b0c9-05e99de66382",
        "attributes": {
            "motion": {
                "readonly": true,
                "required": true,
                "type": "enum",
                "description": "Reflects the state of the motion sensor. When detected the motion sensor has detected motion, when none no motion has been detected.",
                "valid": [
                    "NONE",
                    "DETECTED"
                ]
            },
            "motionchanged": {
                "readonly": true,
                "required": true,
                "type": "timestamp",
                "description": "UTC date time of last motion change"
            }
        },
        "is_device": true,
        "methods": {},
        "events": {}
    },
    "motdoor": {
        "correlation_id": "a84ba0a1-1e42-4d4f-bc7d-1b50935e0e67",
        "attributes": {
            "doorstate": {
                "readonly": false,
                "required": true,
                "type": "enum",
                "description": "Current door state, and if written, desired door state.",
                "valid": [
                    "CLOSED",
                    "CLOSING",
                    "OBSTRUCTION",
                    "OPENING",
                    "OPEN"
                ]
            },
            "doorlevel": {
                "readonly": false,
                "required": false,
                "type": "int",
                "description": "% open. 0 is closed, 100 is open.  Some doors do support reporting what level they are currently at, and some support a requested door level to leave a garage door at partial open.",
                "min": "0",
                "max": "100"
            },
            "doorstatechanged": {
                "readonly": true,
                "required": true,
                "type": "timestamp",
                "description": "UTC date time of last doorstate change"
            }
        },
        "is_device": true,
        "methods": {},
        "events": {}
    },
    "nesttherm": {
        "correlation_id": "49972c51-582f-4bb5-b0c0-c0bedf39fe9b",
        "attributes": {
            "hasleaf": {
                "readonly": true,
                "required": true,
                "type": "boolean",
                "description": "Updated to reflect whether nest thermostat is showing a leaf (read from Nest platform)"
            },
            "roomname": {
                "readonly": true,
                "required": true,
                "type": "string",
                "description": "Name of the room this nest thermostat is located in"
            },
            "locked": {
                "readonly": true,
                "required": true,
                "type": "boolean",
                "description": "Updated to reflect whether nest thermostat is is locked to allow sets only within a particular temperature range"
            },
            "lockedtempmin": {
                "readonly": true,
                "required": true,
                "type": "double",
                "description": "The minimum temperature that the nest thermostat can be set to when locked is true."
            },
            "lockedtempmax": {
                "readonly": true,
                "required": true,
                "type": "double",
                "description": "The maximum temperature that the nest thermostat can be set to when locked is true."
            }
        },
        "is_device": true,
        "methods": {},
        "events": {}
    },
    "person": {
        "correlation_id": "63870b43-46e7-4a29-a683-c05daf466adf",
        "attributes": {
            "firstName": {
                "readonly": false,
                "required": true,
                "type": "string",
                "description": "First name of the person"
            },
            "lastName": {
                "readonly": false,
                "required": true,
                "type": "string",
                "description": "Last name of the person"
            },
            "email": {
                "readonly": false,
                "required": false,
                "type": "string",
                "description": "The email address for the person"
            },
            "mobileNumber": {
                "readonly": false,
                "required": false,
                "type": "string",
                "description": "The mobile phone number for the person"
            },
            "mobileNotificationEndpoints": {
                "readonly": false,
                "required": false,
                "type": "list<string>",
                "description": "The list of mobile endpoints where notifications may be sent"
            },
            "currPlace": {
                "readonly": false,
                "required": false,
                "type": "uuid",
                "description": "The ID of the current place where the person is present"
            },
            "currPlaceMethod": {
                "readonly": false,
                "required": false,
                "type": "string",
                "description": "The methodology used for determining the current place"
            },
            "currLocation": {
                "readonly": false,
                "required": false,
                "type": "string",
                "description": "The current location of the person"
            },
            "currLocationTime": {
                "readonly": false,
                "required": false,
                "type": "timestamp",
                "description": "The time that the current location was determined"
            },
            "currLocationMethod": {
                "readonly": false,
                "required": false,
                "type": "string",
                "description": "The methodology used for determining the current location"
            },
            "consentOffersPromotions": {
                "readonly": false,
                "required": true,
                "type": "timestamp",
                "description": "The date and time when this person provided consent to receive communications of offers and promotions"
            },
            "consentStatement": {
                "readonly": false,
                "required": true,
                "type": "timestamp",
                "description": "The date and time where person provided consent to receive monthly statement communications"
            },
            "hasPin": {
                "readonly": true,
                "required": true,
                "type": "boolean",
                "description": "Returns true if the person has a pin, false otherwise.  This is deprecated and only returns true if the person at a pin at currPlace, placesWithPin is preferred"
            },
            "placesWithPin": {
                "readonly": true,
                "required": true,
                "type": "set<string>",
                "description": "Returns the set of places the person has a pin assigned"
            },
            "hasLogin": {
                "readonly": true,
                "required": true,
                "type": "boolean",
                "description": "Returns true if the person has a login, false otherwise"
            }
        },
        "is_device": false,
        "methods": {
            "SetSecurityAnswers": {
                "enabled": true,
                "required": [
                    "securityQuestion1",
                    "securityAnswer1"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "securityQuestion1": {
                            "type": "string",
                            "description": "The identifier for the first question answered",
                            "optional": false
                        },
                        "securityAnswer1": {
                            "type": "string",
                            "description": "The user's answer for the question identified in securityQuestion1",
                            "optional": false
                        },
                        "securityQuestion2": {
                            "type": "string",
                            "description": "The identifier for the second question answered",
                            "optional": true
                        },
                        "securityAnswer2": {
                            "type": "string",
                            "description": "The user's answer for the question identified in securityQuestion2",
                            "optional": true
                        },
                        "securityQuestion3": {
                            "type": "string",
                            "description": "The identifier for the third question answered",
                            "optional": true
                        },
                        "securityAnswer3": {
                            "type": "string",
                            "description": "The user's answer for the question identified in securityQuestion3",
                            "optional": true
                        }
                    }
                }
            },
            "GetSecurityAnswers": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {}
                }
            },
            "AddMobileDevice": {
                "enabled": true,
                "required": [
                    "osType"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "name": {
                            "type": "string",
                            "description": "A user-assigned name for this mobile device; useful when specifying which devices will receive notifications.",
                            "optional": true
                        },
                        "appVersion": {
                            "type": "string",
                            "description": "The version of the Iris app running on the device.",
                            "optional": true
                        },
                        "osType": {
                            "type": "string",
                            "description": "The type of operating system the mobile device is running (iOS, Android for example).",
                            "optional": false
                        },
                        "osVersion": {
                            "type": "string",
                            "description": "The version of the operating system running on the mobile device.",
                            "optional": true
                        },
                        "formFactor": {
                            "type": "string",
                            "description": "The form factor of the device (phone, tablet for example).",
                            "optional": true
                        },
                        "phoneNumber": {
                            "type": "string",
                            "description": "The phone number of the device if present.",
                            "optional": true
                        },
                        "deviceIdentifier": {
                            "type": "string",
                            "description": "Device specific unique identifier for the mobile device if possible.",
                            "optional": true
                        },
                        "deviceModel": {
                            "type": "string",
                            "description": "The model of the device if known.",
                            "optional": true
                        },
                        "deviceVendor": {
                            "type": "string",
                            "description": "The vendor of the device if known.",
                            "optional": true
                        },
                        "resolution": {
                            "type": "string",
                            "description": "The screen resolution of the device (ex. xhdpi)",
                            "optional": true
                        },
                        "notificationToken": {
                            "type": "string",
                            "description": "The token for sending push notifications to this device if it is registered to do so.",
                            "optional": true
                        },
                        "lastLatitude": {
                            "type": "double",
                            "description": "The last measured latitude if collected.",
                            "optional": true
                        },
                        "lastLongitude": {
                            "type": "double",
                            "description": "The last measured longitude if collected.",
                            "optional": true
                        }
                    }
                }
            },
            "RemoveMobileDevice": {
                "enabled": true,
                "required": [
                    "deviceIndex"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "deviceIndex": {
                            "type": "int",
                            "description": "Platform-owned index for the device that uniquely identifies it within the context of this person",
                            "optional": false
                        }
                    }
                }
            },
            "ListMobileDevices": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {}
                }
            },
            "ListHistoryEntries": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {
                        "limit": {
                            "type": "int",
                            "description": "The maximum number of events to return (defaults to 10)",
                            "optional": true
                        },
                        "token": {
                            "type": "string",
                            "description": "The token from a previous query to use for retrieving the next set of results",
                            "optional": true
                        }
                    }
                }
            },
            "Delete": {
                "enabled": false,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {}
                }
            },
            "RemoveFromPlace": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {
                        "placeId": {
                            "type": "string",
                            "description": "The place to remove the person from.  If not provided the place header (active place) from the message will be used.",
                            "optional": true
                        }
                    }
                }
            },
            "ChangePin": {
                "enabled": true,
                "required": [
                    "newPin"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "currentPin": {
                            "type": "string",
                            "description": "The current pin of the person if they have one.  If they have a pin this must match their existing pin",
                            "optional": true
                        },
                        "newPin": {
                            "type": "string",
                            "description": "The new pin for the person",
                            "optional": false
                        }
                    }
                }
            },
            "ChangePinV2": {
                "enabled": true,
                "required": [
                    "place",
                    "pin"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "place": {
                            "type": "string",
                            "description": "The identifier for the place where the person will use the pin",
                            "optional": false
                        },
                        "pin": {
                            "type": "string",
                            "description": "The pin to set for the person",
                            "optional": false
                        }
                    }
                }
            },
            "VerifyPin": {
                "enabled": true,
                "required": [
                    "place",
                    "pin"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "place": {
                            "type": "string",
                            "description": "The identifier of the place with the pin for the person to compare against",
                            "optional": false
                        },
                        "pin": {
                            "type": "string",
                            "description": "The pin to compare against",
                            "optional": false
                        }
                    }
                }
            },
            "AcceptInvitation": {
                "enabled": true,
                "required": [
                    "code",
                    "inviteeEmail"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "code": {
                            "type": "string",
                            "description": "The invitation code the person is accepting",
                            "optional": false
                        },
                        "inviteeEmail": {
                            "type": "string",
                            "description": "The email the invitation was sent to",
                            "optional": false
                        }
                    }
                }
            },
            "RejectInvitation": {
                "enabled": true,
                "required": [
                    "code",
                    "inviteeEmail"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "code": {
                            "type": "string",
                            "description": "The invitation code the person is rejecting",
                            "optional": false
                        },
                        "inviteeEmail": {
                            "type": "string",
                            "description": "The email the invitation was sent to",
                            "optional": false
                        },
                        "reason": {
                            "type": "string",
                            "description": "The reason the person is rejecting the code",
                            "optional": true
                        }
                    }
                }
            },
            "PendingInvitations": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {}
                }
            },
            "PromoteToAccount": {
                "enabled": true,
                "required": [
                    "place"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "place": {
                            "type": "Place",
                            "description": "The place information or the new account",
                            "optional": false
                        }
                    }
                }
            },
            "DeleteLogin": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {}
                }
            },
            "ListAvailablePlaces": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {}
                }
            },
            "AcceptPolicy": {
                "enabled": true,
                "required": [
                    "type"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "type": {
                            "type": "enum",
                            "description": "PRIVACY for privacy policy, TERMS for terms & condition.  In order to accept both, need to call the method twice.",
                            "optional": false
                        }
                    },
                    "type": [
                        "PRIVACY",
                        "TERMS"
                    ]
                }
            },
            "RejectPolicy": {
                "enabled": true,
                "required": [
                    "type"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "type": {
                            "type": "enum",
                            "description": "PRIVACY for privacy policy, TERMS for terms & condition.  In order to reject both, need to call the method twice.",
                            "optional": false
                        }
                    },
                    "type": [
                        "PRIVACY",
                        "TERMS"
                    ]
                }
            }
        },
        "events": {
            "PinChangedEvent": {
                "required": [],
                "valid": {
                    "params": {}
                },
                "description": "Emitted when the the user changes their pin"
            },
            "InvitationPending": {
                "required": [],
                "valid": {
                    "params": {}
                },
                "description": "Emitted when an invitation has been sent to this user"
            },
            "AuthorizationRemoved": {
                "required": [],
                "valid": {
                    "params": {}
                },
                "description": "Emitted when authorization to a place is removed for this user.  This is an internal platform event that the client-bridge listens."
            }
        }
    },
    "petdoor": {
        "correlation_id": "23b9ea2d-c7c5-47af-a4c1-299499139c3b",
        "attributes": {
            "lockstate": {
                "readonly": false,
                "required": true,
                "type": "enum",
                "description": "Lock state of the door, to override the doorlock lockstate.",
                "valid": [
                    "LOCKED",
                    "UNLOCKED",
                    "AUTO"
                ]
            },
            "lastlockstatechangedtime": {
                "readonly": true,
                "required": true,
                "type": "timestamp",
                "description": "UTC date time of last lockstate change"
            },
            "lastaccesstime": {
                "readonly": true,
                "required": true,
                "type": "timestamp",
                "description": "Holds the timestamp of the last time access through the smart pet door."
            },
            "direction": {
                "readonly": true,
                "required": true,
                "type": "enum",
                "description": "Direction a pet last passed through the smart pet door.",
                "valid": [
                    "IN",
                    "OUT"
                ]
            },
            "numPetTokensSupported": {
                "readonly": true,
                "required": true,
                "type": "int",
                "description": "The number (5) of RFID tags this device supports."
            }
        },
        "is_device": true,
        "methods": {
            "RemoveToken": {
                "enabled": true,
                "required": [
                    "device",
                    "tokenId"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "device": {
                            "type": "string",
                            "decription": "The name of the petdoor device."
                        },
                        "tokenId": {
                            "type": "int",
                            "description": "The ID of the token to remove from the pet door",
                            "optional": false
                        }
                    }
                }
            }
        },
        "events": {
            "TokenAdded": {
                "required": [
                    "tokenId"
                ],
                "valid": {
                    "params": {
                        "tokenId": {
                            "type": "int",
                            "description": "The ID of the token added to the pet door.",
                            "optional": false
                        }
                    }
                },
                "description": "Fired when a pet token is added to the pet door."
            },
            "TokenRemoved": {
                "required": [
                    "tokenId"
                ],
                "valid": {
                    "params": {
                        "tokenId": {
                            "type": "int",
                            "description": "The ID of the token removed from the pet door.",
                            "optional": false
                        }
                    }
                },
                "description": "Fired when a pet token is removed from the pet door."
            },
            "TokenUsed": {
                "required": [
                    "tokenId",
                    "petName",
                    "direction"
                ],
                "valid": {
                    "params": {
                        "tokenId": {
                            "type": "int",
                            "description": "The ID of the token used to open the pet door.",
                            "optional": false
                        },
                        "petName": {
                            "type": "string",
                            "description": "The name of the pet whose token was used to open the pet door.",
                            "optional": false
                        },
                        "direction": [
                            "IN",
                            "OUT"
                        ]
                    }
                },
                "description": "Fired when a token is used to unlock the pet door."
            }
        }
    },
    "pettoken": {
        "correlation_id": "16dc1ccf-bc9e-47da-b1d3-f4d0d379e979",
        "attributes": {
            "tokenNum": {
                "readonly": true,
                "required": true,
                "type": "int",
                "description": "Holds the index of the pet token up to 5."
            },
            "tokenId": {
                "readonly": true,
                "required": true,
                "type": "int",
                "description": "Holds the ID of the access token assoctiated with the smart pet door."
            },
            "paired": {
                "readonly": true,
                "required": true,
                "type": "boolean",
                "description": "Is a token currently paired in this slot or not"
            },
            "petName": {
                "readonly": false,
                "required": true,
                "type": "string",
                "description": "The name of the pet identified by this token."
            },
            "lastAccessTime": {
                "readonly": true,
                "required": true,
                "type": "timestamp",
                "description": "Holds the timestamp of the last time this token was used to access the smart pet door."
            },
            "lastAccessDirection": {
                "readonly": true,
                "required": true,
                "type": "enum",
                "description": "Identifies the direction of traffic, in or out, the last time the smart pet door was used by this pet.",
                "valid": [
                    "IN",
                    "OUT"
                ]
            }
        },
        "is_device": true,
        "methods": {},
        "events": {}
    },
    "place": {
        "correlation_id": "5307c608-ac23-4641-900e-8fdf159c1525",
        "attributes": {
            "account": {
                "readonly": true,
                "required": true,
                "type": "uuid",
                "description": "Platform-owned globally unique identifier for the account owning the place"
            },
            "population": {
                "readonly": true,
                "required": false,
                "type": "uuid",
                "description": "Indicates the population this place belongs to. If not specified, the general population will be assumed"
            },
            "name": {
                "readonly": false,
                "required": true,
                "type": "string",
                "description": "The name of the place"
            },
            "state": {
                "readonly": false,
                "required": true,
                "type": "string",
                "description": "The state of the place"
            },
            "streetAddress1": {
                "readonly": false,
                "required": false,
                "type": "string",
                "description": "First part of the street address"
            },
            "streetAddress2": {
                "readonly": false,
                "required": false,
                "type": "string",
                "description": "Second part of the street address"
            },
            "city": {
                "readonly": false,
                "required": false,
                "type": "string",
                "description": "The city"
            },
            "stateProv": {
                "readonly": false,
                "required": false,
                "type": "string",
                "description": "The state or province"
            },
            "zipCode": {
                "readonly": false,
                "required": false,
                "type": "string",
                "description": "The zip code"
            },
            "zipPlus4": {
                "readonly": false,
                "required": false,
                "type": "string",
                "description": "Extended zip +4 digits"
            },
            "tzId": {
                "readonly": false,
                "required": false,
                "type": "string",
                "description": "System assigned timezone identifier"
            },
            "tzName": {
                "readonly": false,
                "required": false,
                "type": "string",
                "description": "Timezone as Alaska, Atlantic, Central, Eastern, Hawaii, Mountain, None, Pacific, Samoa, UTC+10, UTC+11, UTC+12, UTC+9, valid only for US addresses"
            },
            "tzOffset": {
                "readonly": false,
                "required": false,
                "type": "double",
                "description": "Timezone hour offset from UTC [-9, -4, -6, -5, -10, -7, 0, -8, -11, 10, 11, 12, 9], valid only for US addresses"
            },
            "tzUsesDST": {
                "readonly": false,
                "required": false,
                "type": "boolean",
                "description": "True if timezone uses daylight savings time, false otherwise"
            },
            "country": {
                "readonly": false,
                "required": false,
                "type": "string",
                "description": "The country"
            },
            "addrValidated": {
                "readonly": false,
                "required": true,
                "type": "boolean",
                "description": "True if address is US address and passed USPS address validation"
            },
            "addrType": {
                "readonly": false,
                "required": false,
                "type": "string",
                "description": "Address type according to address validation service [F=firm (best), G=general (held at local post office), H=high-rise (contains apartment no.), P=PO box, R=rural route, S=street (addr only matched to valid range of house numbers on street), blank (invalid)]"
            },
            "addrZipType": {
                "readonly": false,
                "required": false,
                "type": "string",
                "description": "Zip code type [Unique, Military, POBox, Standard]"
            },
            "addrLatitude": {
                "readonly": false,
                "required": false,
                "type": "double",
                "description": "Approximate latitude of address (averaged over zipcode)"
            },
            "addrLongitude": {
                "readonly": false,
                "required": false,
                "type": "double",
                "description": "Approximate longitude of address (averaged over zipcode)"
            },
            "addrGeoPrecision": {
                "readonly": false,
                "required": false,
                "type": "string",
                "description": "Precision of address lat,long [Unknown, None, Zip5, Zip6, Zip7, Zip8, Zip9]"
            },
            "addrRDI": {
                "readonly": false,
                "required": false,
                "type": "string",
                "description": "USPS Residential Delivery Indicatory for address [Residential, Commercial, Unknown]"
            },
            "addrCounty": {
                "readonly": false,
                "required": false,
                "type": "string",
                "description": "County name"
            },
            "addrCountyFIPS": {
                "readonly": false,
                "required": false,
                "type": "string",
                "description": "5 digit FIPS code as 2 digit FIPS and 3 digit county code"
            },
            "lastServiceLevelChange": {
                "readonly": true,
                "required": true,
                "type": "timestamp",
                "description": "Date of last change to the service level at this place"
            },
            "serviceLevel": {
                "readonly": true,
                "required": true,
                "type": "enum",
                "description": "Platform-owned service level at this place",
                "valid": [
                    "BASIC",
                    "PREMIUM",
                    "PREMIUM_FREE",
                    "PREMIUM_PROMON",
                    "PREMIUM_PROMON_FREE"
                ]
            },
            "serviceAddons": {
                "readonly": true,
                "required": false,
                "type": "set<string>",
                "description": "Platform-owned set of service addons subscribed to at this place"
            }
        },
        "is_device": false,
        "methods": {
            "ListDevices": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {}
                }
            },
            "GetHub": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {}
                }
            },
            "StartAddingDevices": {
                "enabled": true,
                "required": [
                    "time"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "time": {
                            "type": "long",
                            "description": "The amount of time in milliseconds for which the place will be able to add devices",
                            "optional": false
                        }
                    }
                }
            },
            "StopAddingDevices": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {}
                }
            },
            "RegisterHub": {
                "enabled": true,
                "required": [
                    "hubId"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "hubId": {
                            "type": "string",
                            "description": "The hub ID in the format AAA-NNNN",
                            "optional": false
                        }
                    }
                }
            },
            "AddPerson": {
                "enabled": true,
                "required": [
                    "person"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "person": {
                            "type": "Person",
                            "description": "The person you would like to create with person to this place.",
                            "optional": false
                        },
                        "password": {
                            "type": "string",
                            "description": "The login password for this person.",
                            "optional": true
                        }
                    }
                }
            },
            "ListPersons": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {}
                }
            },
            "ListPersonsWithAccess": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {}
                }
            },
            "ListDashboardEntries": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {
                        "limit": {
                            "type": "int",
                            "description": "The maximum number of events to return (defaults to 10)",
                            "optional": true
                        },
                        "token": {
                            "type": "string",
                            "description": "The token from a previous query to use for retrieving the next set of results",
                            "optional": true
                        }
                    }
                }
            },
            "ListHistoryEntries": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {
                        "limit": {
                            "type": "int",
                            "description": "The maximum number of events to return (defaults to 10)",
                            "optional": true
                        },
                        "token": {
                            "type": "string",
                            "description": "The token from a previous query to use for retrieving the next set of results",
                            "optional": true
                        }
                    }
                }
            },
            "Delete": {
                "enabled": false,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {}
                }
            },
            "CreateInvitation": {
                "enabled": true,
                "required": [
                    "firstName",
                    "lastName",
                    "email"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "firstName": {
                            "type": "string",
                            "description": "The first name of the invitee",
                            "optional": false
                        },
                        "lastName": {
                            "type": "string",
                            "description": "The last name of the invitee",
                            "optional": false
                        },
                        "email": {
                            "type": "string",
                            "description": "The email address where the invitee can be reached",
                            "optional": false
                        },
                        "relationship": {
                            "type": "string",
                            "description": "The relationship of the invitee to the invitor.  If not provided, defaults to other",
                            "optional": true
                        }
                    }
                }
            },
            "SendInvitation": {
                "enabled": true,
                "required": [
                    "invitation"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "invitation": {
                            "type": "Invitation",
                            "description": "The invitation",
                            "optional": false
                        }
                    }
                }
            },
            "PendingInvitations": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {}
                }
            },
            "CancelInvitation": {
                "enabled": true,
                "required": [
                    "code"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "code": {
                            "type": "string",
                            "description": "The code to cancel",
                            "optional": false
                        }
                    }
                }
            },
            "UpdateAddress": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {
                        "streetAddress": {
                            "type": "StreetAddress",
                            "description": "If specified the place address will be updated to use this given address.",
                            "optional": true
                        }
                    }
                }
            },
            "RegisterHubV2": {
                "enabled": true,
                "required": [
                    "hubId"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "hubId": {
                            "type": "string",
                            "description": "The ID of the hub to pair",
                            "optional": false
                        }
                    }
                }
            }
        },
        "events": {}
    },
    "subplacemonitor": {
        "correlation_id": "81f896da-e291-41bd-9c4d-6d9a9b41d062",
        "attributes": {
            "updatedDevices": {
                "readonly": true,
                "required": true,
                "type": "set<String>",
                "description": "The addresses and version of all the devices that have OTA firmware upgrades requests issued."
            },
            "defaultRulesDevices": {
                "readonly": true,
                "required": true,
                "type": "set<String>",
                "description": "The addresses of all the devices that have default rules and schedules ."
            },
            "offlineNotificationSent": {
                "readonly": true,
                "required": true,
                "type": "map<timestamp>",
                "description": "The addresses of all the devices that have offline notifications sent ."
            },
            "lowBatteryNotificationSent": {
                "readonly": true,
                "required": true,
                "type": "map<timestamp>",
                "description": "The addresses of all the devices that have a low battery notification sent."
            },
            "pairingState": {
                "readonly": true,
                "required": true,
                "type": "enum",
                "description": "Pairing state of the place.",
                "valid": [
                    "PAIRING",
                    "UNPAIRING",
                    "IDLE",
                    "PARTIAL"
                ]
            }
        },
        "is_device": false,
        "methods": {},
        "events": {
            "HubOffline": {
                "required": [],
                "valid": {
                    "params": {
                        "hubAddress": {
                            "type": "string",
                            "description": "The address of the hub that went offline."
                        },
                        "lastOnlineTime": {
                            "type": "timestamp",
                            "description": "The last time this hub was online."
                        }
                    }
                },
                "description": "Sent when a hub is offline for a specified measure of time."
            },
            "HubOnline": {
                "required": [],
                "valid": {
                    "params": {
                        "hubAddress": {
                            "type": "string",
                            "description": "The address of the hub that came back online."
                        },
                        "onlineTime": {
                            "type": "timestamp",
                            "description": "The time this hub came back online."
                        },
                        "disarmedBy": {
                            "type": "string",
                            "description": "The address of the person who disarmed the hub while it was offline.",
                            "optional": true
                        },
                        "offlineIncident": {
                            "type": "string",
                            "description": "The address of the incident that alarmed while the hub was offline.",
                            "optional": true
                        }
                    }
                },
                "description": "Sent when a hub comes back online after being offline for a specified measure of time."
            },
            "DeviceOffline": {
                "required": [],
                "valid": {
                    "params": {
                        "deviceAddress": {
                            "type": "string",
                            "description": "The device id of the device that went offline."
                        },
                        "lastOnlineTime": {
                            "type": "timestamp",
                            "description": "The last time this device was online."
                        }
                    }
                },
                "description": "Sent when a device is offline for a specified measure of time."
            },
            "DeviceOnline": {
                "required": [],
                "valid": {
                    "params": {
                        "deviceAddress": {
                            "type": "string",
                            "description": "The device id of the device that went offline."
                        },
                        "onlineTime": {
                            "type": "timestamp",
                            "description": "The time this device came back online."
                        }
                    }
                },
                "description": "Sent when a device comes back online after being offline for a specified measure of time."
            }
        }
    },
    "population": {
        "correlation_id": "f4f7d608-e1f9-43c0-a733-3a5609f0b2b1",
        "attributes": {
            "name": {
                "readonly": true,
                "required": true,
                "type": "string",
                "description": "Population Name"
            },
            "description": {
                "readonly": true,
                "required": true,
                "type": "string",
                "description": "Population Description"
            },
            "isDefault": {
                "readonly": true,
                "required": true,
                "type": "boolean",
                "description": "Indicates that this population is the default population"
            }
        },
        "is_device": false,
        "methods": {
            "GetPopulations": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {}
                }
            }
        },
        "events": {}
    },
    "pow": {
        "correlation_id": "01885e04-0b6b-430f-8d02-a547b2b84641",
        "attributes": {
            "instantaneous": {
                "readonly": true,
                "required": true,
                "type": "double",
                "description": "Reflects an instantaneous power reading from the device."
            },
            "cumulative": {
                "readonly": true,
                "required": false,
                "type": "double",
                "description": "Reflects the cumulative power reading from the device if possible."
            },
            "wholehome": {
                "readonly": true,
                "required": true,
                "type": "boolean",
                "description": "If true, this represents a whole-home meter."
            }
        },
        "is_device": true,
        "methods": {},
        "events": {}
    },
    "pres": {
        "correlation_id": "3cb70681-495b-4822-b7b7-47c8dc691fce",
        "attributes": {
            "presence": {
                "readonly": true,
                "required": true,
                "type": "enum",
                "description": "Reflects the state of a presence device.",
                "valid": [
                    "PRESENT",
                    "ABSENT"
                ]
            },
            "presencechanged": {
                "readonly": true,
                "required": true,
                "type": "timestamp",
                "description": "UTC date time of last presence change"
            },
            "person": {
                "readonly": false,
                "required": false,
                "type": "string",
                "description": "The address of the person currently associated with this presence detector"
            },
            "usehint": {
                "readonly": false,
                "required": true,
                "type": "enum",
                "description": "What this presence detector is used for.  PERSON detects presence/absence of a person, OTHER something else (pet for example), UNKNOWN is unassigned.",
                "valid": [
                    "UNKNOWN",
                    "PERSON",
                    "OTHER"
                ]
            }
        },
        "is_device": true,
        "methods": {},
        "events": {}
    },
    "subspres": {
        "correlation_id": "16f72246-0c53-4e0a-9462-48339077900e",
        "attributes": {
            "occupied": {
                "readonly": true,
                "required": true,
                "type": "boolean",
                "description": "Estimate as to whether the home is occupied"
            },
            "occupiedConf": {
                "readonly": true,
                "required": true,
                "type": "integer",
                "description": "Confidence in occupied estimate"
            },
            "peopleAtHome": {
                "readonly": true,
                "required": true,
                "type": "set<string>",
                "description": "Set of the addresses of people who are in this place"
            },
            "peopleAway": {
                "readonly": true,
                "required": true,
                "type": "set<string>",
                "description": "Set of address of people that are away from this place"
            },
            "devicesAtHome": {
                "readonly": true,
                "required": true,
                "type": "set<string>",
                "description": "Set of addresses of presence capable devices not associated with people in this place"
            },
            "devicesAway": {
                "readonly": true,
                "required": true,
                "type": "set<string>",
                "description": "Set of addresses of presence capable devices not associated with people that are away from this place"
            },
            "allDevices": {
                "readonly": true,
                "required": true,
                "type": "set<string>",
                "description": "Set of addresses of all presence capable devices"
            }
        },
        "is_device": false,
        "methods": {
            "GetPresenceAnalysis": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {}
                }
            }
        },
        "events": {
            "Arrived": {
                "required": [
                    "type",
                    "target",
                    "device"
                ],
                "valid": {
                    "params": {
                        "type": [
                            "dev",
                            "person"
                        ],
                        "target": {
                            "type": "string",
                            "description": "The address of the person or device presence event.",
                            "optional": false
                        },
                        "device": {
                            "type": "string",
                            "description": "The address of the device currently associated with this presence event.",
                            "optional": false
                        }
                    }
                },
                "description": "Sent when a person or device becomes present."
            },
            "Departed": {
                "required": [
                    "type",
                    "target",
                    "device"
                ],
                "valid": {
                    "params": {
                        "type": [
                            "dev",
                            "person"
                        ],
                        "target": {
                            "type": "string",
                            "description": "The address of the person or device presence event.",
                            "optional": false
                        },
                        "device": {
                            "type": "string",
                            "description": "The address of the device currently associated with this presence event.",
                            "optional": false
                        }
                    }
                },
                "description": "Sent when a person or device devices."
            },
            "PersonArrived": {
                "required": [
                    "person",
                    "device"
                ],
                "valid": {
                    "params": {
                        "person": {
                            "type": "string",
                            "description": "The address of the person currently associated with this presence event.",
                            "optional": false
                        },
                        "device": {
                            "type": "string",
                            "description": "The address of the device currently associated with this presence event.",
                            "optional": false
                        }
                    }
                },
                "description": "Sent when a presence device associated with a person becomes present."
            },
            "PersonDeparted": {
                "required": [
                    "person",
                    "device"
                ],
                "valid": {
                    "params": {
                        "person": {
                            "type": "string",
                            "description": "The address of the person currently associated with this presence event.",
                            "optional": false
                        },
                        "device": {
                            "type": "string",
                            "description": "The address of the device currently associated with this presence event.",
                            "optional": false
                        }
                    }
                },
                "description": "Sent when a presence device associated with a person becomes absent"
            },
            "DeviceArrived": {
                "required": [
                    "device"
                ],
                "valid": {
                    "params": {
                        "device": {
                            "type": "string",
                            "description": "The address of the device currently associated with this presence event.",
                            "optional": false
                        }
                    }
                },
                "description": "Sent when a presence device associated with a place becomes present."
            },
            "DeviceDeparted": {
                "required": [
                    "device"
                ],
                "valid": {
                    "params": {
                        "device": {
                            "type": "string",
                            "description": "The address of the device currently associated with this presence event.",
                            "optional": false
                        }
                    }
                },
                "description": "Sent when a presence device associated with a place becomes absent"
            },
            "DeviceAssignedToPerson": {
                "required": [
                    "person",
                    "device"
                ],
                "valid": {
                    "params": {
                        "person": {
                            "type": "string",
                            "description": "The address of the person currently associated with this presence event.",
                            "optional": false
                        },
                        "device": {
                            "type": "string",
                            "description": "The address of the device currently associated with this presence event.",
                            "optional": false
                        }
                    }
                },
                "description": "Sent when a presence device is associated with a person"
            },
            "DeviceUnassignedFromPerson": {
                "required": [
                    "person",
                    "device"
                ],
                "valid": {
                    "params": {
                        "person": {
                            "type": "string",
                            "description": "The address of the person currently associated with this presence event.",
                            "optional": false
                        },
                        "device": {
                            "type": "string",
                            "description": "The address of the device currently associated with this presence event.",
                            "optional": false
                        }
                    }
                },
                "description": "Sent when a presence device is unassociated with a person"
            },
            "PlaceOccupied": {
                "required": [],
                "valid": {
                    "params": {}
                },
                "description": "Sent when at least one presence device assigned to people is present"
            },
            "PlaceUnoccupied": {
                "required": [],
                "valid": {
                    "params": {}
                },
                "description": "Sent when all presence device assigned to people are absent"
            }
        }
    },
    "product": {
        "correlation_id": "c7b6f5dc-d513-4f51-850b-56f6166bce69",
        "attributes": {
            "id": {
                "readonly": true,
                "required": true,
                "type": "string",
                "description": "Product Id"
            },
            "name": {
                "readonly": true,
                "required": true,
                "type": "string",
                "description": "Product Name"
            },
            "shortName": {
                "readonly": true,
                "required": false,
                "type": "string",
                "description": "Product short name"
            },
            "description": {
                "readonly": true,
                "required": true,
                "type": "string",
                "description": "Product Description"
            },
            "manufacturer": {
                "readonly": true,
                "required": true,
                "type": "string",
                "description": "Product Manufacturer"
            },
            "vendor": {
                "readonly": true,
                "required": true,
                "type": "string",
                "description": "Product Vendor"
            },
            "addDevImg": {
                "readonly": true,
                "required": true,
                "type": "string",
                "description": "Product Device Image"
            },
            "cert": {
                "readonly": true,
                "required": true,
                "type": "enum",
                "description": "Product Iris Certification",
                "valid": [
                    "COMPATIBLE",
                    "NONE",
                    "WORKS"
                ]
            },
            "canBrowse": {
                "readonly": true,
                "required": true,
                "type": "boolean",
                "description": "Product appears in browse"
            },
            "canSearch": {
                "readonly": true,
                "required": true,
                "type": "boolean",
                "description": "Product appears in search"
            },
            "lowesProductId": {
                "readonly": true,
                "required": true,
                "type": "string",
                "description": "Lowe's Product Id"
            },
            "lowesVendorId": {
                "readonly": true,
                "required": true,
                "type": "string",
                "description": ""
            },
            "lowesModelId": {
                "readonly": true,
                "required": true,
                "type": "string",
                "description": "Lowe's Model Id"
            },
            "lowesComUrl": {
                "readonly": true,
                "required": true,
                "type": "string",
                "description": "Lowes.com url"
            },
            "helpUrl": {
                "readonly": true,
                "required": true,
                "type": "string",
                "description": "Help url"
            },
            "pairVideoUrl": {
                "readonly": true,
                "required": true,
                "type": "string",
                "description": "Video url"
            },
            "batteryPrimSize": {
                "readonly": true,
                "required": false,
                "type": "enum",
                "description": "Primary battery size",
                "valid": [
                    "_9V",
                    "AAAA",
                    "AAA",
                    "AA",
                    "C",
                    "D",
                    "CR123",
                    "CR2",
                    "CR2032",
                    "CR2430",
                    "CR2450",
                    "CR14250"
                ]
            },
            "batteryPrimNum": {
                "readonly": true,
                "required": false,
                "type": "int",
                "description": "Primary battery number"
            },
            "batteryBackSize": {
                "readonly": true,
                "required": false,
                "type": "enum",
                "description": "Backup battery size",
                "valid": [
                    "_9V",
                    "AAAA",
                    "AAA",
                    "AA",
                    "C",
                    "D",
                    "CR123",
                    "CR2",
                    "CR2032",
                    "CR2430",
                    "CR2450",
                    "CR14250"
                ]
            },
            "batteryBackNum": {
                "readonly": true,
                "required": false,
                "type": "int",
                "description": "Backup battery number"
            },
            "keywords": {
                "readonly": true,
                "required": true,
                "type": "string",
                "description": "Product Keywords"
            },
            "OTA": {
                "readonly": true,
                "required": true,
                "type": "boolean",
                "description": ""
            },
            "protoFamily": {
                "readonly": true,
                "required": true,
                "type": "string",
                "description": "Protocol Family"
            },
            "protoSpec": {
                "readonly": true,
                "required": true,
                "type": "string",
                "description": "Protocol Specification"
            },
            "driver": {
                "readonly": true,
                "required": true,
                "type": "string",
                "description": "Driver Name"
            },
            "added": {
                "readonly": true,
                "required": true,
                "type": "timestamp",
                "description": "Product added timestamp"
            },
            "lastChanged": {
                "readonly": true,
                "required": true,
                "type": "timestamp",
                "description": "Product last changed timestamp"
            },
            "categories": {
                "readonly": true,
                "required": true,
                "type": "list<string>",
                "description": "Product categories"
            },
            "pair": {
                "readonly": true,
                "required": false,
                "type": "list<Step>",
                "description": "Pairing Steps"
            },
            "removal": {
                "readonly": true,
                "required": false,
                "type": "list<Step>",
                "description": "Remove Steps"
            },
            "reset": {
                "readonly": true,
                "required": false,
                "type": "list<Step>",
                "description": "Reset Steps"
            },
            "populations": {
                "readonly": true,
                "required": true,
                "type": "list<string>",
                "description": "Populations specified for this product"
            },
            "screen": {
                "readonly": true,
                "required": true,
                "type": "string",
                "description": "Detailed screen name for this product"
            },
            "blacklisted": {
                "readonly": true,
                "required": true,
                "type": "boolean",
                "description": "Product is blacklisted"
            },
            "hubRequired": {
                "readonly": true,
                "required": false,
                "type": "boolean",
                "description": "Product requires a hub.  If not specified, defaults to true"
            },
            "minAppVersion": {
                "readonly": true,
                "required": false,
                "type": "string",
                "description": "Tag to indicate minimum app version supported by a given product"
            },
            "minHubFirmware": {
                "readonly": true,
                "required": false,
                "type": "string",
                "description": "The minimum hub firmware version required to use this product"
            },
            "devRequired": {
                "readonly": true,
                "required": false,
                "type": "string",
                "description": "Product catalog id of a parent device that must be paired before this can be paired"
            },
            "canDiscover": {
                "readonly": true,
                "required": false,
                "type": "boolean",
                "description": "If product can be discovered in non-Iris user experiences that are fed by the Iris API, such as Alexa or Google Home.  Default is true."
            }
        },
        "is_device": false,
        "methods": {},
        "events": {}
    },
    "prodcat": {
        "correlation_id": "96b30bfc-1861-4bc7-b1b4-ce9fe43a1cae",
        "attributes": {
            "publisher": {
                "readonly": true,
                "required": true,
                "type": "string",
                "description": "Product catalog publisher"
            },
            "version": {
                "readonly": true,
                "required": true,
                "type": "timestamp",
                "description": "Product catalog publication date"
            },
            "brandCount": {
                "readonly": true,
                "required": true,
                "type": "int",
                "description": "Number of brand names in catalog"
            },
            "categoryCount": {
                "readonly": true,
                "required": true,
                "type": "int",
                "description": "Number of categories in catalog"
            },
            "productCount": {
                "readonly": true,
                "required": true,
                "type": "int",
                "description": "Number of products in this catalog"
            }
        },
        "is_device": false,
        "methods": {
            "GetProductCatalog": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {}
                }
            },
            "GetCategories": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {}
                }
            },
            "GetBrands": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {}
                }
            },
            "GetProductsByBrand": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {
                        "brand": {
                            "type": "string",
                            "description": ""
                        }
                    }
                }
            },
            "GetProductsByCategory": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {
                        "category": {
                            "type": "string",
                            "description": ""
                        }
                    }
                }
            },
            "GetProducts": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {}
                }
            },
            "GetAllProducts": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {}
                }
            },
            "FindProducts": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {
                        "search": {
                            "type": "string",
                            "description": ""
                        }
                    }
                }
            },
            "GetProduct": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {
                        "id": {
                            "type": "string",
                            "description": ""
                        }
                    }
                }
            }
        },
        "events": {
            "Reloaded": {
                "required": [],
                "valid": {
                    "params": {
                        "version": {
                            "type": "string",
                            "description": "The version that is now loaded"
                        }
                    }
                },
                "description": "Fired when the product catalog has been reloaded and should be refreshed by clients.  NOTE this is a place-less event so clients will not generally see this event."
            }
        }
    },
    "promon": {
        "correlation_id": "9e15b62f-f9c4-4231-983e-c98026edcb23",
        "attributes": {
            "notifyWhenAvailable": {
                "readonly": false,
                "required": true,
                "type": "boolean",
                "description": "The user should be notified when the service becomes available in their area."
            },
            "trial": {
                "readonly": true,
                "required": true,
                "type": "boolean",
                "description": "Indicates whether this is a member of the trial population or not.  To enable trial access send the invitation code to JoinTrial."
            },
            "activatedOn": {
                "readonly": true,
                "required": false,
                "type": "timestamp",
                "description": "The date that professional monitoring was activated at this place, or not specified if it is not active."
            },
            "supportedAlerts": {
                "readonly": true,
                "required": true,
                "type": "set<enum>",
                "description": "The set of alerts that have enough devices to be monitored at this place.",
                "valid": [
                    "SECURITY",
                    "PANIC",
                    "SMOKE",
                    "CO"
                ]
            },
            "monitoredAlerts": {
                "readonly": true,
                "required": true,
                "type": "set<string>",
                "description": "The set of alerts which will be forwarded to the monitoring service.",
                "valid": [
                    "SECURITY",
                    "PANIC",
                    "SMOKE",
                    "CO"
                ]
            },
            "addressVerification": {
                "readonly": true,
                "required": true,
                "type": "enum",
                "description": "Will be UNVERIFIED until UpdateAddress is invoked, which upon success will be changed to RESIDENTIAL.",
                "valid": [
                    "UNVERIFIED",
                    "RESIDENTIAL"
                ]
            },
            "permitRequired": {
                "readonly": true,
                "required": true,
                "type": "boolean",
                "description": "Whether or not a permit is required at this location.  This will be populate appropriately after address is updated."
            },
            "permitNumber": {
                "readonly": false,
                "required": true,
                "type": "string",
                "description": "The permit number."
            },
            "adults": {
                "readonly": false,
                "required": true,
                "type": "int",
                "description": "The number of adults that live in the residence."
            },
            "children": {
                "readonly": false,
                "required": true,
                "type": "int",
                "description": "The number of children that live in the residence."
            },
            "pets": {
                "readonly": false,
                "type": "int",
                "description": "The number of pets that live in the residence."
            },
            "directions": {
                "readonly": false,
                "required": false,
                "type": "string",
                "description": "Additional directions on how to get to the house."
            },
            "gateCode": {
                "readonly": false,
                "required": false,
                "type": "string",
                "description": "The code to get onto the property, if applicable."
            },
            "instructions": {
                "readonly": false,
                "required": false,
                "type": "string",
                "description": "Additional instructions for emergency dispatchers."
            },
            "testCallStatus": {
                "readonly": true,
                "required": true,
                "type": "enum",
                "description": "The current state of a test call.",
                "valid": [
                    "IDLE",
                    "WAITING",
                    "SUCCEEDED",
                    "FAILED"
                ]
            },
            "testCallTime": {
                "readonly": true,
                "required": false,
                "type": "timestamp",
                "description": "The last time a test call was started, will not be set until a test call is invoked for the first time."
            },
            "testCallMessage": {
                "readonly": true,
                "required": false,
                "type": "string",
                "description": "Additional text describing the current test call state."
            },
            "externalId": {
                "readonly": true,
                "required": false,
                "type": "string",
                "description": "external id/stages id used to reference the site created in stages."
            },
            "certUrl": {
                "readonly": true,
                "required": false,
                "type": "string",
                "description": "The fully-qualified url for the certificate."
            }
        },
        "is_device": false,
        "methods": {
            "CheckAvailability": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {}
                }
            },
            "JoinTrial": {
                "enabled": true,
                "required": [
                    "code"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "code": {
                            "type": "string",
                            "optional": false
                        }
                    }
                }
            },
            "ValidateAddress": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {
                        "streetAddress": {
                            "type": "StreetAddress",
                            "description": "If specified this address will be validated instead of the default place address.",
                            "optional": true
                        }
                    }
                }
            },
            "UpdateAddress": {
                "enabled": true,
                "required": [
                    "residential"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "streetAddress": {
                            "type": "StreetAddress",
                            "description": "If specified the place address will be updated to use this given address.",
                            "optional": true
                        },
                        "residential": {
                            "type": "boolean",
                            "description": "Whether or not this is a residential address.  Currently will always return an error if set to false.",
                            "optional": false
                        }
                    }
                }
            },
            "ListDepartments": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {}
                }
            },
            "CheckSensors": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {}
                }
            },
            "Activate": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {
                        "testCall": {
                            "type": "boolean",
                            "description": "(Default: false) Set to true to invoke a test call and activate upon success.  Set to false / unspecified to activate without sending a test call.",
                            "optional": true
                        }
                    }
                }
            },
            "TestCall": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {}
                }
            },
            "Reset": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {}
                }
            }
        },
        "events": {}
    },
    "video": {
        "correlation_id": "b2c7eb12-c967-4ce3-aa0f-808daab81bd8",
        "attributes": {
            "name": {
                "readonly": false,
                "required": true,
                "type": "string",
                "description": "Human readable name for the device"
            },
            "accountid": {
                "readonly": true,
                "required": true,
                "type": "uuid",
                "description": "The place that the recording is associated with."
            },
            "placeid": {
                "readonly": true,
                "required": true,
                "type": "uuid",
                "description": "The place that the recording is associated with."
            },
            "cameraid": {
                "readonly": true,
                "required": true,
                "type": "uuid",
                "description": "The camera that the recording is associated with."
            },
            "personid": {
                "readonly": true,
                "required": false,
                "type": "uuid",
                "description": "The person that the recording is associated with."
            },
            "timestamp": {
                "readonly": true,
                "required": true,
                "type": "timestamp",
                "description": "A timestamp identifying when the recording was made."
            },
            "width": {
                "readonly": true,
                "required": true,
                "type": "int",
                "description": "The width of the recording in pixels."
            },
            "height": {
                "readonly": true,
                "required": true,
                "type": "int",
                "description": "The height of the recording in pixels."
            },
            "bandwidth": {
                "readonly": true,
                "required": true,
                "type": "int",
                "description": "The target bandwidth of the video in bps."
            },
            "framerate": {
                "readonly": true,
                "required": true,
                "type": "double",
                "description": "The frame rate of the video in fps."
            },
            "precapture": {
                "readonly": true,
                "required": true,
                "type": "double",
                "description": "The precapture time in seconds, or 0 if no precaptured video is present."
            },
            "type": {
                "readonly": true,
                "required": true,
                "type": "enum",
                "description": "The recording type. STREAM indicates a live streaming session.",
                "valid": [
                    "STREAM",
                    "RECORDING"
                ]
            },
            "duration": {
                "readonly": true,
                "required": true,
                "type": "double",
                "description": "The duration of the recording in seconds"
            },
            "size": {
                "readonly": true,
                "required": true,
                "type": "long",
                "description": "The side of the recording in bytes."
            },
            "deleted": {
                "readonly": true,
                "required": true,
                "type": "boolean",
                "description": "If true then the recording has been scheduled for deletion."
            },
            "deleteTime": {
                "readonly": true,
                "required": true,
                "type": "timestamp",
                "description": "If the recording has been scheduled for deletion then this represents the time at which the recording will be permanently removed."
            },
            "completed": {
                "readonly": true,
                "required": true,
                "type": "boolean",
                "description": "If the recording has been completed."
            }
        },
        "is_device": false,
        "methods": {
            "View": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {}
                }
            },
            "Download": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {}
                }
            },
            "Delete": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {}
                }
            },
            "Resurrect": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {}
                }
            }
        },
        "events": {}
    },
    "humid": {
        "correlation_id": "f4a3ee3c-696c-4843-9039-1a05eb602df8",
        "attributes": {
            "humidity": {
                "readonly": true,
                "required": true,
                "type": "double",
                "description": "Reflects the relative humidity",
                "min": "0",
                "max": "100"
            }
        },
        "is_device": true,
        "methods": {},
        "events": {}
    },
    "rule": {
        "correlation_id": "2fd6ef97-1ffc-4d55-a465-f3aa22ab3c79",
        "attributes": {
            "name": {
                "readonly": false,
                "required": true,
                "type": "string",
                "description": "The name of the rule"
            },
            "description": {
                "readonly": false,
                "required": false,
                "type": "string",
                "description": "User provided description of the rule"
            },
            "created": {
                "readonly": true,
                "required": true,
                "type": "timestamp",
                "description": "Timestamp that the rule was created"
            },
            "modified": {
                "readonly": true,
                "required": true,
                "type": "timestamp",
                "description": "Timestamp that the rule was last modified"
            },
            "state": {
                "readonly": true,
                "required": true,
                "type": "enum",
                "description": "The current state of the rule",
                "valid": [
                    "ENABLED",
                    "DISABLED"
                ]
            },
            "template": {
                "readonly": true,
                "required": false,
                "type": "string",
                "description": "The platform-owned identifier for the template this rule was created from (if a template based rule)"
            },
            "context": {
                "readonly": true,
                "required": false,
                "type": "Object",
                "description": "The context for rule evaluation, if no user defined context is required this is may be null or empty"
            }
        },
        "is_device": false,
        "methods": {
            "Enable": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {}
                }
            },
            "Disable": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {}
                }
            },
            "UpdateContext": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {
                        "context": {
                            "type": "Object",
                            "description": "New context values to update",
                            "optional": true
                        }
                    }
                }
            },
            "Delete": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {}
                }
            },
            "ListHistoryEntries": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {
                        "limit": {
                            "type": "int",
                            "description": "The maximum number of events to return (defaults to 10)",
                            "optional": true
                        },
                        "token": {
                            "type": "string",
                            "description": "The token from a previous query to use for retrieving the next set of results",
                            "optional": true
                        }
                    }
                }
            },
            "ListRules": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {}
                }
            }
        },
        "events": {}
    },
    "ruletmpl": {
        "correlation_id": "6169e20c-0bb3-473f-b1c9-a202bd569818",
        "attributes": {
            "keywords": {
                "readonly": true,
                "required": true,
                "type": "set<string>",
                "description": "Set of keywords for the template"
            },
            "added": {
                "readonly": true,
                "required": true,
                "type": "timestamp",
                "description": "Timestamp that the rule template was added to the catalog"
            },
            "lastModified": {
                "readonly": true,
                "required": true,
                "type": "timestamp",
                "description": "Timestamp that the rule template was last modified"
            },
            "template": {
                "readonly": true,
                "required": true,
                "type": "string",
                "description": "The textual template"
            },
            "satisfiable": {
                "readonly": true,
                "required": true,
                "type": "boolean",
                "description": "True if the rule template is satisfiable for the specific place for which they have been loaded."
            },
            "name": {
                "readonly": true,
                "required": true,
                "type": "string",
                "description": "The name of the rule template"
            },
            "description": {
                "readonly": true,
                "required": false,
                "type": "string",
                "description": "A description of the rule template"
            },
            "categories": {
                "readonly": true,
                "required": true,
                "type": "set<string>",
                "description": "The set of categories that this rule template is part of"
            },
            "premium": {
                "readonly": true,
                "required": true,
                "type": "boolean",
                "description": "Indicates if the rule is available only for premium plans."
            },
            "extra": {
                "readonly": true,
                "required": false,
                "type": "string",
                "description": "Extra text associated with the rule."
            }
        },
        "is_device": false,
        "methods": {
            "CreateRule": {
                "enabled": true,
                "required": [
                    "placeId",
                    "name"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "placeId": {
                            "type": "string",
                            "description": "The platform-owned identifier for the place at which the rule is being created",
                            "optional": false
                        },
                        "name": {
                            "type": "string",
                            "description": "The name assigned to the rule",
                            "optional": false
                        },
                        "description": {
                            "type": "string",
                            "description": "The user provided description of the rule",
                            "optional": true
                        },
                        "context": {
                            "type": "Object",
                            "description": "The context (user selections) for the rule"
                        }
                    }
                }
            },
            "Resolve": {
                "enabled": true,
                "required": [
                    "placeId"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "placeId": {
                            "type": "string",
                            "description": "The platform-owned identifier for the place at which to resovle the template parameters",
                            "optional": false
                        }
                    }
                }
            }
        },
        "events": {}
    },
    "subsafety": {
        "correlation_id": "8a7c1eda-029a-4b0a-9d2f-9943536e2ed3",
        "attributes": {
            "totalDevices": {
                "readonly": true,
                "required": true,
                "type": "set<String>",
                "description": "The addresses of all the safety devices in this place."
            },
            "activeDevices": {
                "readonly": true,
                "required": true,
                "type": "set<String>",
                "description": "the addresses of all the currently active (online) safety devices in this place."
            },
            "ignoredDevices": {
                "readonly": false,
                "required": true,
                "type": "set<String>",
                "description": "The addresses of the devices which should not be used to trigger safety alarms."
            },
            "waterShutoffValves": {
                "readonly": true,
                "required": true,
                "type": "set<String>",
                "description": "The addresses of the devices that are water shutoff valves."
            },
            "alarm": {
                "readonly": true,
                "required": true,
                "type": "enum",
                "description": "Indicates the current state of the alarm:         - READY - The alarm is active and watching for safety alerts         - WARN - The alarm is active, but one or more of the safety sensors has low battery or connectivity issues that could potentially cause an alarm to be missed         - SOAKING - One or more safety devices have triggered, but not a sufficient amount of time or devices to set off the whole system.         - ALERT - A safety device has triggered an alarm         - CLEARING - A request has been made to CLEAR the alarm, but there are still devices triggering an alarm.",
                "valid": [
                    "READY",
                    "WARN",
                    "SOAKING",
                    "ALERT",
                    "CLEARING"
                ]
            },
            "triggers": {
                "readonly": true,
                "required": true,
                "type": "list<TriggerEvent>",
                "description": "The addresses of all devices which currently have their alarm triggered.  If this is non-empty the alarm will be either ALERT, SOAKING or CLEARING"
            },
            "pendingClear": {
                "readonly": true,
                "required": true,
                "type": "list<TriggerEvent>",
                "description": "The list of events that were outstanding at the time the user canceled the alarm still waiting for an all clear from the device."
            },
            "warnings": {
                "readonly": true,
                "required": true,
                "type": "map<String>",
                "description": "A set of warnings about devices which have potential issues that could cause an alarm to be missed.  The key is the address of the device with a warning and the value is an I18N code with the description of the problem."
            },
            "callTreeEnabled": {
                "readonly": true,
                "required": true,
                "type": "boolean",
                "description": "Set to true if the account is PREMIUM, indicating the callTree will be used for alerts. Set to false if the account is BASIC, indicating that only the account owner will be notified."
            },
            "callTree": {
                "readonly": false,
                "required": true,
                "type": "list<CallTreeEntry>",
                "description": "The list of people who should be notified when the alarm goes into alert mode.  This is marked as a list to maintain ordering, but each entry may only appear once. Note that all addresses must be persons associated with this place."
            },
            "sensorState": {
                "readonly": true,
                "required": true,
                "type": "map<string>",
                "description": "A map of types of safety sensors to the current status. Each value means:     NONE - There are no devices of the given type     SAFE - All devices of that type are on and haven't detected a safety alarm     OFFLINE - At least one device of the given type is offline, but none have detected a safety alarm     DETECTED - At least one device of the given type has detected a safety alarm"
            },
            "lastAlertTime": {
                "readonly": true,
                "required": true,
                "type": "timestamp",
                "description": "The last time the alarm was fired."
            },
            "lastAlertCause": {
                "readonly": true,
                "required": true,
                "type": "string",
                "description": "The reason the alarm was fired."
            },
            "lastClearTime": {
                "readonly": true,
                "required": true,
                "type": "timestamp",
                "description": "The last time the alarm was cleared."
            },
            "lastClearedBy": {
                "readonly": true,
                "required": true,
                "type": "string",
                "description": "The actor that cleared the alarm."
            },
            "alarmSensitivitySec": {
                "readonly": true,
                "required": true,
                "type": "int",
                "description": "The amount of time an alarm device must be triggering for before the alarm is fired.<br/><b>Default: 0</b>"
            },
            "alarmSensitivityDeviceCount": {
                "readonly": false,
                "required": true,
                "type": "int",
                "description": "The number of alarm devices which must trigger before the alarm is fired.<br/><b>Default: 1</b>"
            },
            "quietPeriodSec": {
                "readonly": false,
                "required": true,
                "type": "int",
                "description": "The number of seconds after an alarm has been cleared before it can be fired again.<br/><b>Default: 0</b>"
            },
            "silentAlarm": {
                "readonly": false,
                "required": true,
                "type": "boolean",
                "description": "When set to true 'alert' devices will not be triggered when the alarm is raised."
            },
            "waterShutOff": {
                "readonly": false,
                "required": true,
                "type": "boolean",
                "description": "When set to true 'valve' devices will be turned off when a water leak is detected."
            },
            "smokePreAlertDevices": {
                "readonly": true,
                "required": true,
                "type": "list<String>",
                "description": "The addresses of all the devices in this place that are in smoke pre-alert state."
            },
            "smokePreAlert": {
                "readonly": true,
                "required": true,
                "type": "enum",
                "description": "Indicates the whether any devices that can provide a smoke pre-alert are alerting         - READY - The alarm is active and watching for safety alerts         - ALERT - A safety device has triggered a prealarm",
                "valid": [
                    "READY",
                    "ALERT"
                ]
            },
            "lastSmokePreAlertTime": {
                "readonly": true,
                "required": true,
                "type": "timestamp",
                "description": "The last time the alarm was fired."
            }
        },
        "is_device": false,
        "methods": {
            "Trigger": {
                "enabled": true,
                "required": [
                    "cause"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "cause": {
                            "type": "string",
                            "optional": false
                        }
                    }
                }
            },
            "Clear": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {}
                }
            }
        },
        "events": {}
    },
    "scene": {
        "correlation_id": "7e9521fe-6de4-418a-9035-0715b5f0f753",
        "attributes": {
            "name": {
                "readonly": false,
                "required": true,
                "type": "string",
                "description": "The name of the scene"
            },
            "created": {
                "readonly": true,
                "required": true,
                "type": "timestamp",
                "description": "Timestamp that the rule was created"
            },
            "modified": {
                "readonly": true,
                "required": true,
                "type": "timestamp",
                "description": "Timestamp that the rule was last modified"
            },
            "template": {
                "readonly": true,
                "required": false,
                "type": "string",
                "description": "The address of the template this scene was created from."
            },
            "enabled": {
                "readonly": true,
                "required": true,
                "type": "boolean",
                "description": "Whether or not this scene is enabled, currently this is tied directly to PREMIUM / BASIC status and may not be changed."
            },
            "notification": {
                "readonly": false,
                "required": true,
                "type": "boolean",
                "description": "Whether or not a notification should be fired when this scene is executed."
            },
            "scheduler": {
                "readonly": true,
                "required": true,
                "type": "string",
                "description": "The id of the associated scheduler."
            },
            "firing": {
                "readonly": true,
                "required": true,
                "type": "boolean",
                "description": "True while the scene is being executed, the scene may not be ran again until executing is false, at which point all actions have succeeded or failed."
            },
            "actions": {
                "readonly": false,
                "required": true,
                "type": "list<Action>",
                "description": "The actions associated with this scene."
            },
            "lastFireTime": {
                "readonly": true,
                "required": false,
                "type": "timestamp",
                "description": "The last time this scene was run."
            },
            "lastFireStatus": {
                "readonly": true,
                "required": true,
                "type": "enum",
                "description": "The actions associated with this scene.",
                "valid": [
                    "NOTRUN",
                    "SUCCESS",
                    "FAILURE",
                    "PARTIAL"
                ]
            }
        },
        "is_device": false,
        "methods": {
            "Fire": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {}
                }
            },
            "Delete": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {}
                }
            },
            "ListScenes": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {}
                }
            }
        },
        "events": {}
    },
    "scenetmpl": {
        "correlation_id": "7042c7e0-1e2d-4baa-9f62-81ccd4e56d3c",
        "attributes": {
            "added": {
                "readonly": true,
                "required": true,
                "type": "timestamp",
                "description": "Timestamp that the scene template was added to the catalog"
            },
            "modified": {
                "readonly": true,
                "required": true,
                "type": "timestamp",
                "description": "Timestamp that the scene template was last modified"
            },
            "name": {
                "readonly": true,
                "required": true,
                "type": "string",
                "description": "The name of the rule template"
            },
            "description": {
                "readonly": true,
                "required": false,
                "type": "string",
                "description": "A description of the rule template"
            },
            "custom": {
                "readonly": true,
                "required": true,
                "type": "boolean",
                "description": "True if this is a custom template that may be re-used."
            },
            "available": {
                "readonly": true,
                "required": true,
                "type": "boolean",
                "description": "Indicates if the scene template is in use or not."
            }
        },
        "is_device": false,
        "methods": {
            "Create": {
                "enabled": true,
                "required": [
                    "placeId"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "placeId": {
                            "type": "string",
                            "description": "The platform-owned identifier for the place at which the scene is being created",
                            "optional": false
                        },
                        "name": {
                            "type": "string",
                            "description": "Default: Name of the scene template.  The name assigned to the scene, defaults to the template name.",
                            "optional": true
                        },
                        "actions": {
                            "type": "list<Action>",
                            "description": "Default: Empty list.  A list of Actions for the scene to execute",
                            "optional": true
                        }
                    }
                }
            },
            "ResolveActions": {
                "enabled": true,
                "required": [
                    "placeId"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "placeId": {
                            "type": "string",
                            "description": "The place id of the scene to resolve.",
                            "optional": false
                        }
                    }
                }
            }
        },
        "events": {}
    },
    "schedulable": {
        "correlation_id": "e4d16f75-6fa9-4ac8-bb08-45024114de79",
        "attributes": {
            "type": {
                "readonly": true,
                "required": true,
                "type": "enum",
                "description": "The type of scheduling that is possible on this device. NOT_SUPPORTED:  No scheduling is possible either via Iris or the physical device DEVICE_ONLY:  Scheduling is not possible via Iris, but can be configured on the physical device DRIVER_READ_ONLY:  Iris may read scheduling information via a driver specific implementation but cannot write schedule information DRIVER_WRITE_ONLY:  Iris may write scheduling information via a driver specific implementation but cnnot read schedule information SUPPORTED_DRIVER:  Iris may completely control scheduling of the device via a driver specific implementation (i.e. schedule is likely read and pushed to the device) SUPPORTED_CLOUD:  Iris may completely control scheduling of the device via an internal mechanism (i.e. cloud or hub based) ",
                "valid": [
                    "NOT_SUPPORTED",
                    "DEVICE_ONLY",
                    "DRIVER_READ_ONLY",
                    "DRIVER_WRITE_ONLY",
                    "SUPPORTED_DRIVER",
                    "SUPPORTED_CLOUD"
                ]
            },
            "scheduleEnabled": {
                "readonly": true,
                "type": "boolean",
                "description": "Whether or not a schedule is currently enabled for this device"
            }
        },
        "is_device": true,
        "methods": {
            "EnableSchedule": {
                "enabled": true,
                "required": [
                    "device"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "device": {
                            "type": "string",
                            "decription": "The name of the schedulable device."
                        }
                    }
                }
            },
            "DisableSchedule": {
                "enabled": true,
                "required": [
                    "device"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "device": {
                            "type": "string",
                            "decription": "The name of the schedulable device."
                        }
                    }
                }
            }
        },
        "events": {}
    },
    "sched": {
        "correlation_id": "c9b97c74-080d-4c2f-a8bc-fde57d9c7a41",
        "attributes": {
            "group": {
                "readonly": true,
                "required": true,
                "type": "string",
                "description": "The scheduling group.  Only one Schedule in a scheduling group may be enabled at a time."
            },
            "enabled": {
                "readonly": false,
                "required": true,
                "type": "boolean",
                "description": "Whether or not this scheduled is currently enabled to run.  When disabled no scheduled commands will be sent."
            },
            "nextFireTime": {
                "readonly": true,
                "required": true,
                "type": "timestamp",
                "description": "The next time the schedule will fire, this may be null if the schedule is disabled or there are no scheduled times."
            },
            "nextFireCommand": {
                "readonly": true,
                "required": true,
                "type": "string",
                "description": "The command that will be sent when it fires next.  This is a key into the commands attribute."
            },
            "lastFireTime": {
                "readonly": true,
                "required": false,
                "type": "timestamp",
                "description": "The last time the schedule executed a command."
            },
            "lastFireCommand": {
                "readonly": true,
                "required": false,
                "type": "string",
                "description": "The id of the last command that was executed.  This may not exist in the commands attribute if the schedule has been modified since it last fired."
            },
            "lastFireMessageType": {
                "readonly": true,
                "required": false,
                "type": "string",
                "description": "The type of message that was sent on last execution."
            },
            "lastFireAttributes": {
                "readonly": true,
                "required": false,
                "type": "map<any>",
                "description": "The attributes that were sent on last execution."
            }
        },
        "is_device": false,
        "methods": {
            "Delete": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {}
                }
            },
            "DeleteCommand": {
                "enabled": true,
                "required": [
                    "commandId"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "commandId": {
                            "type": "string",
                            "description": "The id of the command to delete.",
                            "optional": false
                        }
                    }
                }
            }
        },
        "events": {}
    },
    "scheduler": {
        "correlation_id": "42e24060-9552-4403-834d-9ca4f9da4d06",
        "attributes": {
            "placeId": {
                "readonly": true,
                "required": true,
                "type": "string",
                "description": "The ID of the place that this object is associated with."
            },
            "target": {
                "readonly": true,
                "required": true,
                "type": "string",
                "description": "The target that scheduled messages will be sent to."
            },
            "nextFireTime": {
                "readonly": true,
                "required": true,
                "type": "timestamp",
                "description": "The next time a scheduled command will fire.  This may be null if all schedules are disabled."
            },
            "nextFireSchedule": {
                "readonly": true,
                "required": true,
                "type": "string",
                "description": "ID of the schedule that will fire next."
            },
            "lastFireTime": {
                "readonly": true,
                "required": false,
                "type": "timestamp",
                "description": "The last time the schedule executed a command."
            },
            "lastFireSchedule": {
                "readonly": true,
                "required": false,
                "type": "string",
                "description": "ID of the schedule that fired previously."
            },
            "commands": {
                "readonly": true,
                "required": false,
                "type": "map<object>",
                "description": " The commands that this schedule may send.  This is a derived, read-only view.  The specific format of the ScheduledCommand depends on the type of schedule this is.  Currently only WeeklySchedule and TimeOfDayCommand are supported.          "
            }
        },
        "is_device": false,
        "methods": {
            "FireCommand": {
                "enabled": true,
                "required": [
                    "commandId"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "commandId": {
                            "type": "string",
                            "description": "The id of the command to fire",
                            "optional": false
                        }
                    }
                }
            },
            "AddWeeklySchedule": {
                "enabled": true,
                "required": [
                    "id"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "id": {
                            "type": "string",
                            "description": "The instance id of the schedule to create.",
                            "optional": false
                        },
                        "group": {
                            "type": "string",
                            "description": "Default: id. The group to associate this schedule with, when not specified the id will be used.",
                            "optional": true
                        }
                    }
                }
            },
            "Delete": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {}
                }
            }
        },
        "events": {}
    },
    "subsecuritymode": {
        "correlation_id": "6b5db813-4686-49a1-9b86-a6743e478c11",
        "attributes": {
            "devices": {
                "readonly": false,
                "required": true,
                "type": "set<String>",
                "description": "The addresses of all the security devices that participate in this mode."
            },
            "entranceDelaySec": {
                "readonly": false,
                "required": true,
                "type": "int",
                "description": "The amount of time an alarm device must be triggering for before the alarm is fired.<br/><b>Default: 30</b>"
            },
            "exitDelaySec": {
                "readonly": false,
                "required": true,
                "type": "int",
                "description": "The amount of time before the alarm is fully armed.<br/><b>Default: 30</b>"
            },
            "alarmSensitivityDeviceCount": {
                "readonly": false,
                "required": true,
                "type": "int",
                "description": "The number of alarm devices which must trigger before the alarm is fired.<br/><b>Default: 1</b>"
            },
            "silent": {
                "readonly": false,
                "required": true,
                "type": "boolean",
                "description": "When true only notifications will be sent, alert devices will not be triggered."
            },
            "soundsEnabled": {
                "readonly": false,
                "required": true,
                "type": "boolean",
                "description": "Hub and keypad make sounds when arming.<br/><b>Default: true</b>"
            },
            "motionSensorCount": {
                "readonly": false,
                "required": true,
                "type": "int",
                "description": "The number of the number of motion sensors associated with this mode"
            }
        },
        "is_device": false,
        "methods": {},
        "events": {}
    },
    "subsecurity": {
        "correlation_id": "d2a34b03-d4df-4adc-af32-01fa16ddc0ef",
        "attributes": {
            "securityDevices": {
                "readonly": true,
                "required": true,
                "type": "set<String>",
                "description": "The addresses of all the security devices in the safety alarm subsystem.  This includes sensor devices (contact and motion), input devices (keypads), and output devices (sirens). Whether or not these devices actually participate in any alarm states depend on the alarm mode."
            },
            "triggeredDevices": {
                "readonly": true,
                "required": true,
                "type": "set<String>",
                "description": "Devices which are ready to be armed, this set is empty the the alarmState is not DISARMED.  This will only include sensors."
            },
            "readyDevices": {
                "readonly": true,
                "required": true,
                "type": "set<String>",
                "description": "Devices which are ready to be armed, this set is empty the the alarmState is not DISARMED.  This will only include sensors."
            },
            "armedDevices": {
                "readonly": true,
                "required": true,
                "type": "set<String>",
                "description": "Devices which may result in triggering an alarm.  This set is empty when the alarmState is DISARMED. Note that armedDevices / bypassedDevices / offlineDevices are disjoint, a value will only appear in one of these sets at a time.  Additionally when the alarm is not\u200b DISARMED the union of these sets should equals devices:{alarmMode}."
            },
            "bypassedDevices": {
                "readonly": true,
                "required": true,
                "type": "set<String>",
                "description": "Devices which are online and would normally be armed in the current mode but have been explicitly bypassed via ArmBypassed.  This set is empty when alarmState is DISARMED. Note that armedDevices / bypassedDevices / offlineDevices are disjoint, a value will only appear in one of these sets at a time.  Additionally when the alarm is not DISARMED the union of these sets should equals devices:{alarmMode}."
            },
            "offlineDevices": {
                "readonly": true,
                "required": true,
                "type": "set<String>",
                "description": "Devices which would normally be armed in the current mode but have fallen offline.  This state takes precedent over bypassedDevices. Note that armedDevices / bypassedDevices / offlineDevices are disjoint, a value will only appear in one of these sets at a time.  Additionally when the alarm is not DISARMED the union of these sets should equals devices:{alarmMode}."
            },
            "keypads": {
                "readonly": true,
                "required": true,
                "type": "set<String>",
                "description": "Keypad devices"
            },
            "alarmState": {
                "readonly": true,
                "required": true,
                "type": "enum",
                "description": "Indicates the current state of the alarm:     DISARMED - The alarm is currently DISARMED.  Note that any devices in the triggered or warning state may prevent the alarm from going to fully armed.     ARMING - The alarm is in the process of arming, delaying giving users a chance to leave the house.     ARMED - Indicate the alarm is armed and any security device may trigger an alarm.  See armedDevices to determine which devices might trigger the alarm.     ALERT - The alarm is 'going off'.  Any sirens are triggered, the call tree is activated, etc.     CLEARING - The alarm has been acknowledged and the system is waiting for all devices to no longer be triggered at which point it will return to DISARMED     SOAKING - An armed secuirty device has triggered the alarm and the system is waiting for the alarm to be disarmed.",
                "valid": [
                    "DISARMED",
                    "ARMING",
                    "ARMED",
                    "ALERT",
                    "CLEARING",
                    "SOAKING"
                ]
            },
            "alarmMode": {
                "readonly": true,
                "required": true,
                "type": "enum",
                "description": "If the alarmState is 'DISARMED' this will be OFF.  Otherwise it will be id of the alarmMode which is currently active.",
                "valid": [
                    "OFF",
                    "ON",
                    "PARTIAL"
                ]
            },
            "lastAlertTime": {
                "readonly": true,
                "required": true,
                "type": "timestamp",
                "description": "The last time the alarm was fired."
            },
            "lastAlertCause": {
                "readonly": true,
                "required": true,
                "type": "string",
                "description": "The reason the alarm was fired."
            },
            "currentAlertTriggers": {
                "readonly": true,
                "required": true,
                "type": "map<Timestamp>",
                "description": "A map of address to timestamp of when a device was triggered during an alert.  This map will not be populated until the alarm enters the alert state. Note this will only include the first time a device was triggered during an alert.  For more detailed information see the history log."
            },
            "currentAlertCause": {
                "readonly": true,
                "required": true,
                "type": "enum",
                "description": "The reason the current alert was raised",
                "valid": [
                    "ALARM",
                    "PANIC",
                    "NONE"
                ]
            },
            "lastAlertTriggers": {
                "readonly": true,
                "required": true,
                "type": "map<Timestamp>",
                "description": "A map of address to timestamp of when a device was triggered during an alert.  This map will not be populated until the alarm enters the soak state. Note this will only include the first time a device was triggered during an alert.  For more detailed information see the history log."
            },
            "lastAcknowledgement": {
                "readonly": true,
                "required": true,
                "type": "enum",
                "description": "The current state of acknowledgement:     PENDING - Iris is attempting to notify the user that an alarm has been triggered     ACKNOWLEDGED - One of the persons from the call tree has acknowledged the alarm     FAILED - No one acknowledged the alarm but no one was available to acknowledged it.",
                "valid": [
                    "NEVER",
                    "PENDING",
                    "ACKNOWLEDGED",
                    "FAILED"
                ]
            },
            "lastAcknowledgementTime": {
                "readonly": true,
                "required": true,
                "type": "timestamp",
                "description": "The last time the alarm was acknowledged."
            },
            "lastAcknowledgedBy": {
                "readonly": true,
                "required": true,
                "type": "string",
                "description": "The actor that acknowledge the alarm when lastAcknowledgement is ACKNOWLEDGED.  Otherwise this field will be empty."
            },
            "lastArmedTime": {
                "readonly": true,
                "required": true,
                "type": "timestamp",
                "description": "The last time the alarm was armed."
            },
            "lastArmedBy": {
                "readonly": true,
                "required": true,
                "type": "string",
                "description": "The actor that armed the alarm, if available.  If it can't be determined this will be empty."
            },
            "lastDisarmedTime": {
                "readonly": true,
                "required": true,
                "type": "timestamp",
                "description": "The last time the alarm was disarmed."
            },
            "lastDisarmedBy": {
                "readonly": true,
                "required": true,
                "type": "string",
                "description": "The actor that disarmed the alarm, if available.  If it can't be determined this will be empty."
            },
            "callTreeEnabled": {
                "readonly": true,
                "required": true,
                "type": "boolean",
                "description": "Set to true if the account is PREMIUM, indicating the callTree will be used for alerts. Set to false if the account is BASIC, indicating that only the account owner will be notified."
            },
            "callTree": {
                "readonly": false,
                "required": true,
                "type": "list<CallTreeEntry>",
                "description": "The list of people who should be notified when the alarm goes into alert mode.  This is marked as a list to maintain ordering, but each entry may only appear once. Note that all addresses must be persons associated with this place."
            },
            "keypadArmBypassedTimeOutSec": {
                "readonly": false,
                "required": true,
                "type": "int",
                "description": "The number of seconds the subsystem will allow for a second keypad ON push to armbypassed the system."
            },
            "blacklistedSecurityDevices": {
                "readonly": true,
                "required": true,
                "type": "set<String>",
                "description": "The addresses of all the devices that are blacklisted, and therefore not considered as security devices."
            }
        },
        "is_device": false,
        "methods": {
            "Panic": {
                "enabled": true,
                "required": [
                    "silent"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "silent": {
                            "type": "boolean",
                            "optional": false
                        }
                    }
                }
            },
            "Arm": {
                "enabled": true,
                "required": [
                    "mode"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "mode": {
                            "type": "string",
                            "optional": false
                        }
                    }
                }
            },
            "ArmBypassed": {
                "enabled": true,
                "required": [
                    "mode"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "mode": {
                            "type": "string",
                            "optional": false
                        }
                    }
                }
            },
            "Acknowledge": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {}
                }
            },
            "Disarm": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {}
                }
            }
        },
        "events": {
            "Armed": {
                "required": [
                    "alarmMode",
                    "bypassedDevices",
                    "participatingDevices",
                    "method",
                    "by"
                ],
                "valid": {
                    "params": {
                        "alarmMode": [
                            "ON",
                            "PARTIAL"
                        ],
                        "bypassedDevices": {
                            "type": "set<String>",
                            "description": "Devices which are online and would normally be armed in the current mode but have been explicitly bypassed via ArmBypassed.",
                            "optional": false
                        },
                        "participatingDevices": {
                            "type": "set<String>",
                            "description": "Devices which are actively being be used to trigger an alarm.",
                            "optional": false
                        },
                        "method": [
                            "CLIENT",
                            "DEVICE",
                            "RULE"
                        ],
                        "by": {
                            "type": "string",
                            "description": "The address of the client / device that was used to arm the alarm. Note that while the actor header will always contain a PERSON address, this should contain the address of the keypad or client that was used to arm the alarm.",
                            "optional": false
                        }
                    }
                },
                "description": "Fired when the alarmState from ARMING to ARMED.  This event is not re-sent when the system goes from SOAKING to ARMED."
            },
            "Alert": {
                "required": [
                    "cause",
                    "triggers",
                    "method",
                    "by"
                ],
                "valid": {
                    "params": {
                        "cause": {
                            "type": "string",
                            "description": "The same as lastAlertCause.",
                            "optional": false
                        },
                        "triggers": {
                            "type": "map<timestamp>",
                            "description": "True if the alarm was force armed.",
                            "optional": false
                        },
                        "method": [
                            "PANIC",
                            "DEVICE"
                        ],
                        "by": {
                            "type": "string",
                            "description": "The address of the thing that tripped the alarm.",
                            "optional": false
                        }
                    }
                },
                "description": "Fired when alarmState switches from ARMED to ALERTING."
            },
            "Disarmed": {
                "required": [
                    "method",
                    "by"
                ],
                "valid": {
                    "params": {
                        "method": [
                            "CLIENT",
                            "DEVICE",
                            "RULE"
                        ],
                        "by": {
                            "type": "string",
                            "description": "The address of the client / device that was used to disarm the alarm. Note that while the actor header will always contain a PERSON address, this should contain the address of the keypad or client that was used to disarm the alarm.",
                            "optional": false
                        }
                    }
                },
                "description": "Fired when alarmState switches to DISARMED."
            }
        }
    },
    "shade": {
        "correlation_id": "cfd30d64-a7b4-4fa0-ab7a-e8b8f71645e1",
        "attributes": {
            "level": {
                "readonly": false,
                "required": true,
                "type": "int",
                "description": "The percentage that the shades are open (raised/lowered). May also be used to set how closed (lowered) or open (raised) the shade is where 100% is fully open and 0% is fully closed. For devices that only support being set fully Open (Raised) or Closed (Lowered), use 0% for Closed (Lowered) and 100% for Open (Raised).",
                "min": "0",
                "max": "100"
            },
            "shadestate": {
                "readonly": true,
                "required": true,
                "type": "enum",
                "description": "Reflects the current state of the shade.  Obstruction implying that something is preventing the opening or closing of the shade.",
                "valid": [
                    "OK",
                    "OBSTRUCTION"
                ]
            },
            "levelchanged": {
                "readonly": true,
                "required": true,
                "type": "timestamp",
                "description": "UTC time of last level change."
            }
        },
        "is_device": true,
        "methods": {
            "GoToOpen": {
                "enabled": true,
                "required": [
                    "device"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "device": {
                            "type": "string",
                            "decription": "The name of the shade device."
                        }
                    }
                }
            },
            "GoToClosed": {
                "enabled": true,
                "required": [
                    "device"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "device": {
                            "type": "string",
                            "decription": "The name of the shade device."
                        }
                    }
                }
            },
            "GoToFavorite": {
                "enabled": true,
                "required": [
                    "device"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "device": {
                            "type": "string",
                            "decription": "The name of the shade device."
                        }
                    }
                }
            }
        },
        "events": {}
    },
    "smoke": {
        "correlation_id": "804bc467-a341-41f4-b4a1-b639e57b5b45",
        "attributes": {
            "smoke": {
                "readonly": true,
                "required": true,
                "type": "enum",
                "description": "Reflects the current state of the smoke detector (safe,detected).",
                "valid": [
                    "SAFE",
                    "DETECTED"
                ]
            },
            "smokechanged": {
                "readonly": true,
                "required": true,
                "type": "timestamp",
                "description": "UTC date time of last smoke change"
            }
        },
        "is_device": true,
        "methods": {},
        "events": {}
    },
    "soilmoisture": {
        "correlation_id": "23b4d48f-8f83-4442-b516-7c5ba2da7eaf",
        "attributes": {
            "watercontent": {
                "readonly": true,
                "required": true,
                "type": "double",
                "description": "Reflects the ratio of volume of water per volume of soil (0.0 = No Moisture, 0.5 = Completely Saturated).",
                "min": "0.0",
                "max": "0.5"
            },
            "soiltype": {
                "readonly": false,
                "required": true,
                "type": "enum",
                "description": "Reflects the type of soil in which the water content is being measured. Defaults to NORMAL.",
                "valid": [
                    "NORMAL",
                    "SANDY",
                    "CLAY"
                ]
            },
            "watercontentupdated": {
                "readonly": true,
                "required": true,
                "type": "timestamp",
                "description": "UTC date time of when Water Content value was reported by sensor."
            }
        },
        "is_device": true,
        "methods": {},
        "events": {}
    },
    "somfy1": {
        "correlation_id": "50fae61e-50fe-46af-81fa-7453fe0942c0",
        "attributes": {
            "mode": {
                "readonly": false,
                "required": true,
                "type": "enum",
                "description": "The user has to set the type of device (Blinds or Shade) they have to generate the proper UI. Defaults to SHADE.",
                "valid": [
                    "SHADE",
                    "BLIND"
                ]
            },
            "reversed": {
                "readonly": false,
                "required": true,
                "type": "enum",
                "description": "The user may need to reverse the shade motor direction if wiring is reversed. Defaults to NORMAL.",
                "valid": [
                    "NORMAL",
                    "REVERSED"
                ]
            }
        },
        "is_device": true,
        "methods": {},
        "events": {}
    },
    "somfyv1": {
        "correlation_id": "2f20da1e-cdc2-43e6-8643-8c85dc5394fd",
        "attributes": {
            "type": {
                "readonly": false,
                "required": true,
                "type": "enum",
                "description": "The user has to set the type of device (Blinds or Shade) they have to generate the proper UI. Defaults to SHADE.",
                "valid": [
                    "SHADE",
                    "BLIND"
                ]
            },
            "reversed": {
                "readonly": false,
                "required": true,
                "type": "enum",
                "description": "The user may need to reverse the shade motor direction if wiring is reversed. Defaults to NORMAL.",
                "valid": [
                    "NORMAL",
                    "REVERSED"
                ]
            },
            "channel": {
                "readonly": true,
                "required": true,
                "type": "int",
                "description": "The channel of the Blinds or Shade on the Bridge.",
                "min": "1",
                "max": "16"
            },
            "currentstate": {
                "readonly": true,
                "required": true,
                "type": "enum",
                "description": "The current state (position) of the Blinds or Shade reported by the bridge.",
                "valid": [
                    "OPEN",
                    "CLOSED"
                ]
            },
            "statechanged": {
                "readonly": true,
                "required": true,
                "type": "timestamp",
                "description": "UTC time of last state (OPEN/CLOSED/FAVORITE) change."
            }
        },
        "is_device": true,
        "methods": {
            "GoToOpen": {
                "enabled": true,
                "required": [
                    "device"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "device": {
                            "type": "string",
                            "decription": "The name of the somfyv1 device."
                        }
                    }
                }
            },
            "GoToClosed": {
                "enabled": true,
                "required": [
                    "device"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "device": {
                            "type": "string",
                            "decription": "The name of the somfyv1 device."
                        }
                    }
                }
            },
            "GoToFavorite": {
                "enabled": true,
                "required": [
                    "device"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "device": {
                            "type": "string",
                            "decription": "The name of the somfyv1 device."
                        }
                    }
                }
            }
        },
        "events": {}
    },
    "spaceheater": {
        "correlation_id": "fdb45132-7c9d-4c96-bd26-c3974854d886",
        "attributes": {
            "setpoint": {
                "readonly": false,
                "required": true,
                "type": "double",
                "description": "The desired temperature when the unit is running, maps to heatsetpoint in  thermostat. May also be used to set the target temperature."
            },
            "minsetpoint": {
                "readonly": true,
                "required": false,
                "type": "double",
                "description": "The minimum temperature that can be placed in setpoint."
            },
            "maxsetpoint": {
                "readonly": true,
                "required": false,
                "type": "double",
                "description": "The maximum temperature that can be placed in setpoint."
            },
            "heatstate": {
                "readonly": false,
                "required": true,
                "type": "enum",
                "description": "The current mode of the device, maps to OFF, HEAT in thermostat:mode.",
                "valid": [
                    "OFF",
                    "ON"
                ]
            }
        },
        "is_device": true,
        "methods": {},
        "events": {}
    },
    "subs": {
        "correlation_id": "cd1e2500-4a1d-40a2-9c5a-ae5fee5dec67",
        "attributes": {
            "name": {
                "readonly": true,
                "required": true,
                "type": "string",
                "description": "A display name for the subsystem, generally not shown to end-users"
            },
            "version": {
                "readonly": true,
                "required": true,
                "type": "string",
                "description": "The published version of the subsystem"
            },
            "hash": {
                "readonly": true,
                "required": true,
                "type": "string",
                "description": "A hash of the subsystem may be used to ensure the exact version that is being run"
            },
            "account": {
                "readonly": true,
                "required": true,
                "type": "uuid",
                "description": "The account associated with the this subsystem."
            },
            "place": {
                "readonly": true,
                "required": true,
                "type": "uuid",
                "description": "The place the subsystem is associated with, there may be only one instance of each subsystem per place."
            },
            "available": {
                "readonly": true,
                "required": true,
                "type": "boolean",
                "description": "Indicates whether the subsystem is available on the current place or not. When this is false it generally means there need to be more devices added to the place."
            },
            "state": {
                "readonly": true,
                "required": false,
                "type": "enum",
                "description": "Indicates the current state of a subsystem.  A SUSPENDED subsystem will not collect any new data or enable associated rules, but may still allow previously collected data to be viewed.",
                "valid": [
                    "ACTIVE",
                    "SUSPENDED"
                ]
            }
        },
        "is_device": false,
        "methods": {
            "Activate": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {}
                }
            },
            "Suspend": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {}
                }
            },
            "Delete": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {}
                }
            },
            "ListHistoryEntries": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {
                        "limit": {
                            "type": "int",
                            "description": "The maximum number of events to return (defaults to 10)",
                            "optional": true
                        },
                        "token": {
                            "type": "string",
                            "description": "The token from a previous query to use for retrieving the next set of results",
                            "optional": true
                        },
                        "includeIncidents": {
                            "type": "boolean",
                            "description": "Whether or not incidents should be included in history, defaults to false for backwards compatibility",
                            "optional": true
                        }
                    }
                }
            }
        },
        "events": {}
    },
    "supportagent": {
        "correlation_id": "779ed3ff-343f-4079-bdd5-d178c0f4fdad",
        "attributes": {
            "created": {
                "readonly": true,
                "required": false,
                "type": "timestamp",
                "description": "The date the agent was created"
            },
            "modified": {
                "readonly": false,
                "required": false,
                "type": "timestamp",
                "description": "The date the agent was last modified"
            },
            "state": {
                "readonly": false,
                "required": false,
                "type": "string",
                "description": "The state of the agent"
            },
            "firstName": {
                "readonly": false,
                "required": true,
                "type": "string",
                "description": "First name of the agent"
            },
            "lastName": {
                "readonly": false,
                "required": true,
                "type": "string",
                "description": "Last name of the agent"
            },
            "email": {
                "readonly": false,
                "required": true,
                "type": "string",
                "description": "The email address for the agent"
            },
            "emailVerified": {
                "readonly": false,
                "required": false,
                "type": "timestamp",
                "description": "The date the email was verified"
            },
            "mobileNumber": {
                "readonly": false,
                "required": false,
                "type": "string",
                "description": "The mobile phone number for the agent"
            },
            "mobileVerified": {
                "readonly": false,
                "required": false,
                "type": "timestamp",
                "description": "The date the mobile phone number was verified"
            },
            "supportTier": {
                "readonly": false,
                "required": false,
                "type": "string",
                "description": "The support tier for the agent"
            },
            "currLocation": {
                "readonly": false,
                "required": false,
                "type": "string",
                "description": "The support center the agent belongs to"
            },
            "currLocationTimeZone": {
                "readonly": false,
                "required": false,
                "type": "string",
                "description": "The time zone the support center is located in"
            },
            "mobileNotificationEndpoints": {
                "readonly": false,
                "required": false,
                "type": "list<string>",
                "description": "The list of mobile endpoints where notifications may be sent"
            },
            "preferences": {
                "readonly": true,
                "required": false,
                "type": "map<string>",
                "description": "maps preferences by name to value "
            }
        },
        "is_device": false,
        "methods": {
            "ListAgents": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {}
                }
            },
            "CreateSupportAgent": {
                "enabled": true,
                "required": [
                    "email",
                    "firstName",
                    "lastName",
                    "supportTier"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "email": {
                            "type": "string",
                            "description": "Email address of the agent",
                            "optional": false
                        },
                        "firstName": {
                            "type": "string",
                            "description": "First name of the agent",
                            "optional": false
                        },
                        "lastName": {
                            "type": "string",
                            "description": "Last name of the agent",
                            "optional": false
                        },
                        "supportTier": {
                            "type": "string",
                            "description": "Support tier of the agent",
                            "optional": false
                        },
                        "password": {
                            "type": "string",
                            "description": "Password of the agent",
                            "optional": true
                        },
                        "mobileNumber": {
                            "type": "string",
                            "description": "Mobile number of the agent",
                            "optional": true
                        },
                        "currLocation": {
                            "type": "string",
                            "description": "Location of the agent",
                            "optional": true
                        },
                        "currLocationTimeZone": {
                            "type": "string",
                            "description": "Location of the agent",
                            "optional": true
                        }
                    }
                }
            },
            "FindAgentById": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {}
                }
            },
            "FindAgentByEmail": {
                "enabled": true,
                "required": [
                    "email"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "email": {
                            "type": "string",
                            "description": "Email address of the agent",
                            "optional": false
                        }
                    }
                }
            },
            "DeleteAgent": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {}
                }
            },
            "ResetAgentPassword": {
                "enabled": true,
                "required": [
                    "email",
                    "newPassword"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "email": {
                            "type": "string",
                            "description": "Email address of the agent",
                            "optional": false
                        },
                        "newPassword": {
                            "type": "string",
                            "description": "New password for the agent",
                            "optional": false
                        }
                    }
                }
            },
            "EditPreferences": {
                "enabled": true,
                "required": [
                    "email",
                    "prefValues"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "email": {
                            "type": "string",
                            "description": "Email address of the agent",
                            "optional": false
                        },
                        "prefValues": {
                            "type": "map<string>",
                            "description": "preference valuse",
                            "optional": false
                        }
                    }
                }
            }
        },
        "events": {}
    },
    "salogentry": {
        "correlation_id": "7ee058ce-ed8c-4024-9cab-a46f3d89dae6",
        "attributes": {
            "created": {
                "readonly": true,
                "required": false,
                "type": "timestamp",
                "description": "The date the entry was created"
            },
            "agentId": {
                "readonly": true,
                "required": true,
                "type": "uuid",
                "description": "Id of the agent"
            },
            "accountId": {
                "readonly": true,
                "required": true,
                "type": "uuid",
                "description": "Account id in the log entry"
            },
            "action": {
                "readonly": true,
                "required": true,
                "type": "string",
                "description": "The action that happened"
            },
            "parameters": {
                "readonly": true,
                "required": false,
                "type": "set<string>",
                "description": "The parameters used in the action"
            },
            "userId": {
                "readonly": true,
                "required": false,
                "type": "uuid",
                "description": "Id of the user this log is associated with (if any)"
            },
            "placeId": {
                "readonly": true,
                "required": false,
                "type": "uuid",
                "description": "The place id in the log entry, if any"
            },
            "deviceId": {
                "readonly": true,
                "required": false,
                "type": "uuid",
                "description": "The device id in the log entry, if any"
            }
        },
        "is_device": false,
        "methods": {
            "CreateAgentLogEntry": {
                "enabled": true,
                "required": [
                    "agentId",
                    "accountId",
                    "action"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "agentId": {
                            "type": "uuid",
                            "description": "ID of agent",
                            "optional": false
                        },
                        "accountId": {
                            "type": "uuid",
                            "description": "ID of account",
                            "optional": false
                        },
                        "action": {
                            "type": "string",
                            "description": "what occurred",
                            "optional": false
                        },
                        "parameters": {
                            "type": "set<string>",
                            "description": "set of parameters",
                            "optional": true
                        },
                        "userId": {
                            "type": "uuid",
                            "description": "ID of customer",
                            "optional": true
                        },
                        "deviceId": {
                            "type": "uuid",
                            "description": "ID of device",
                            "optional": true
                        },
                        "placeId": {
                            "type": "uuid",
                            "description": "ID of place",
                            "optional": true
                        }
                    }
                }
            },
            "ListAgentLogEntries": {
                "enabled": true,
                "required": [
                    "agentId",
                    "startDate",
                    "endDate"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "agentId": {
                            "type": "uuid",
                            "description": "ID of agent",
                            "optional": false
                        },
                        "startDate": {
                            "type": "string",
                            "description": "Earliest date for logs. Format is yyyy-MM-dd HH:mm:ss",
                            "optional": false
                        },
                        "endDate": {
                            "type": "string",
                            "description": "Latest date for logs. Format is yyyy-MM-dd HH:mm:ss",
                            "optional": false
                        }
                    }
                }
            }
        },
        "events": {}
    },
    "suppcustinteraction": {
        "correlation_id": "2db0068d-c2df-4ae3-8d8c-dc7ad44cb431",
        "attributes": {
            "created": {
                "readonly": true,
                "required": false,
                "type": "timestamp",
                "description": "The date the interaction was created"
            },
            "id": {
                "readonly": true,
                "required": true,
                "type": "uuid",
                "description": "unique id"
            },
            "account": {
                "readonly": true,
                "required": true,
                "type": "uuid",
                "description": "Account id of the interaction"
            },
            "place": {
                "readonly": true,
                "required": true,
                "type": "uuid",
                "description": "The place id of the interaction"
            },
            "customer": {
                "readonly": true,
                "required": true,
                "type": "uuid",
                "description": "The customer of in the interaction"
            },
            "agent": {
                "readonly": true,
                "required": true,
                "type": "uuid",
                "description": "Id of the agent that created the interaction"
            },
            "action": {
                "readonly": false,
                "required": true,
                "type": "string",
                "description": "The action that happened"
            },
            "comment": {
                "readonly": false,
                "required": true,
                "type": "string",
                "description": "The comment entered about the interaction"
            },
            "concessions": {
                "readonly": false,
                "required": true,
                "type": "string",
                "description": "The concessions that were given"
            },
            "incidentNumber": {
                "readonly": false,
                "required": false,
                "type": "string",
                "description": "The incident number entered about the interaction"
            },
            "modified": {
                "readonly": true,
                "required": false,
                "type": "timestamp",
                "description": "The last date the interaction was modified"
            }
        },
        "is_device": false,
        "methods": {
            "CreateInteraction": {
                "enabled": true,
                "required": [
                    "account",
                    "place",
                    "customer",
                    "agent",
                    "action",
                    "comment"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "id": {
                            "type": "uuid",
                            "description": "unique id",
                            "optional": true
                        },
                        "account": {
                            "type": "uuid",
                            "description": "ID of account",
                            "optional": false
                        },
                        "place": {
                            "type": "uuid",
                            "description": "ID of place",
                            "optional": false
                        },
                        "customer": {
                            "type": "uuid",
                            "description": "ID of customer",
                            "optional": false
                        },
                        "agent": {
                            "type": "uuid",
                            "description": "ID of agent",
                            "optional": false
                        },
                        "action": {
                            "type": "string",
                            "description": "what occurred",
                            "optional": false
                        },
                        "comment": {
                            "type": "string",
                            "description": "agent comment",
                            "optional": false
                        },
                        "concessions": {
                            "type": "string",
                            "description": "agent concessions",
                            "optional": true
                        },
                        "incidentNumber": {
                            "type": "string",
                            "description": "incident number",
                            "optional": true
                        }
                    }
                }
            },
            "UpdateInteraction": {
                "enabled": true,
                "required": [
                    "id",
                    "account",
                    "place",
                    "customer",
                    "agent",
                    "action",
                    "comment",
                    "created"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "id": {
                            "type": "uuid",
                            "description": "unique id",
                            "optional": false
                        },
                        "account": {
                            "type": "uuid",
                            "description": "ID of account",
                            "optional": false
                        },
                        "place": {
                            "type": "uuid",
                            "description": "ID of place",
                            "optional": false
                        },
                        "customer": {
                            "type": "uuid",
                            "description": "ID of customer",
                            "optional": false
                        },
                        "agent": {
                            "type": "uuid",
                            "description": "ID of agent",
                            "optional": false
                        },
                        "action": {
                            "type": "string",
                            "description": "what occurred",
                            "optional": false
                        },
                        "comment": {
                            "type": "string",
                            "description": "agent comment",
                            "optional": false
                        },
                        "concessions": {
                            "type": "string",
                            "description": "agent concessions",
                            "optional": true
                        },
                        "incidentNumber": {
                            "type": "string",
                            "description": "incident number",
                            "optional": true
                        },
                        "created": {
                            "type": "timestamp",
                            "description": "created",
                            "optional": false
                        }
                    }
                }
            },
            "ListInteractions": {
                "enabled": true,
                "required": [
                    "account",
                    "place",
                    "startDate",
                    "endDate"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "account": {
                            "type": "uuid",
                            "description": "ID of account",
                            "optional": false
                        },
                        "place": {
                            "type": "uuid",
                            "description": "ID of place",
                            "optional": false
                        },
                        "startDate": {
                            "type": "string",
                            "description": "Earliest date for interactions. Format is yyyy-MM-dd HH:mm:ss",
                            "optional": false
                        },
                        "endDate": {
                            "type": "string",
                            "description": "Latest date for interactions. Format is yyyy-MM-dd HH:mm:ss",
                            "optional": false
                        }
                    }
                }
            },
            "ListInteractionsForTimeframe": {
                "enabled": true,
                "required": [
                    "startDate",
                    "endDate"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "startDate": {
                            "type": "string",
                            "description": "Earliest date for interactions. Format is yyyy-MM-dd HH:mm:ss",
                            "optional": false
                        },
                        "endDate": {
                            "type": "string",
                            "description": "Latest date for interactions. Format is yyyy-MM-dd HH:mm:ss",
                            "optional": false
                        },
                        "token": {
                            "type": "string",
                            "description": "token for paging results",
                            "optional": true
                        },
                        "limit": {
                            "type": "int",
                            "description": "max 1000, default 50",
                            "optional": true
                        }
                    }
                }
            }
        },
        "events": {}
    },
    "suppcustsession": {
        "correlation_id": "57f0f867-01a2-4687-90bf-c064167951ff",
        "attributes": {
            "created": {
                "readonly": true,
                "required": true,
                "type": "timestamp",
                "description": "The date the session was started"
            },
            "modified": {
                "readonly": true,
                "required": true,
                "type": "timestamp",
                "description": "The date the session was last updated"
            },
            "end": {
                "readonly": true,
                "required": false,
                "type": "timestamp",
                "description": "The date the session was closed"
            },
            "agent": {
                "readonly": true,
                "required": true,
                "type": "uuid",
                "description": "The id of the agent"
            },
            "account": {
                "readonly": true,
                "required": true,
                "type": "uuid",
                "description": "The id of the account"
            },
            "caller": {
                "readonly": true,
                "required": true,
                "type": "uuid",
                "description": "The id of the caller"
            },
            "origin": {
                "readonly": true,
                "required": true,
                "type": "string",
                "description": "What started this session"
            },
            "url": {
                "readonly": false,
                "required": false,
                "type": "string",
                "description": "The last known URL for the session."
            },
            "place": {
                "readonly": false,
                "required": false,
                "type": "uuid",
                "description": "The current place in the session"
            },
            "notes": {
                "readonly": false,
                "required": false,
                "type": "set<string>",
                "description": "Notes taken by the agent during the session"
            }
        },
        "is_device": false,
        "methods": {
            "StartSession": {
                "enabled": true,
                "required": [
                    "agent",
                    "account",
                    "caller",
                    "origin"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "agent": {
                            "type": "uuid",
                            "description": "Agent UUID",
                            "optional": false
                        },
                        "account": {
                            "type": "uuid",
                            "description": "Account UUID",
                            "optional": false
                        },
                        "caller": {
                            "type": "uuid",
                            "description": "caller UUID",
                            "optional": false
                        },
                        "origin": {
                            "type": "string",
                            "description": "Origin of session (inbound, outbound, email)",
                            "optional": false
                        }
                    }
                }
            },
            "FindActiveSession": {
                "enabled": true,
                "required": [
                    "agent",
                    "account"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "agent": {
                            "type": "uuid",
                            "description": "Agent UUID",
                            "optional": false
                        },
                        "account": {
                            "type": "uuid",
                            "description": "Account UUID",
                            "optional": false
                        }
                    }
                }
            },
            "ListSessions": {
                "enabled": true,
                "required": [
                    "account"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "account": {
                            "type": "uuid",
                            "description": "Account UUID",
                            "optional": false
                        }
                    }
                }
            },
            "CloseSession": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {}
                }
            }
        },
        "events": {}
    },
    "swit": {
        "correlation_id": "f4177c0f-eb70-4939-8dd4-5234e45a130c",
        "attributes": {
            "state": {
                "readonly": false,
                "required": true,
                "type": "enum",
                "description": "Reflects the state of the switch. Also used to set the state of the switch.",
                "valid": [
                    "ON",
                    "OFF"
                ]
            },
            "inverted": {
                "readonly": false,
                "required": false,
                "type": "boolean",
                "description": "Indicates whether operation of the physical switch toggle should be inverted, if supported."
            },
            "statechanged": {
                "readonly": true,
                "required": true,
                "type": "timestamp",
                "description": "UTC date time of last state change"
            }
        },
        "is_device": true,
        "methods": {},
        "events": {}
    },
    "temp": {
        "correlation_id": "6a64d0d3-abb4-4cfc-a244-94ccb67fb475",
        "attributes": {
            "temperature": {
                "readonly": true,
                "required": true,
                "type": "double",
                "description": "Reflects a temperature measurement taken from a thermistor."
            }
        },
        "is_device": true,
        "methods": {},
        "events": {}
    },
    "test": {
        "correlation_id": "5d7725c4-890f-43dc-b9c3-a60d5b65c3a7",
        "attributes": {
            "lastTestTime": {
                "readonly": true,
                "required": true,
                "type": "timestamp",
                "description": "The last time the device was tested (a test:Test event was emitted)."
            }
        },
        "is_device": true,
        "methods": {},
        "events": {
            "Test": {
                "required": [],
                "valid": {
                    "params": {}
                },
                "description": "Emitted when the test button or other test procedure is executed."
            }
        }
    },
    "therm": {
        "correlation_id": "d72c7009-2233-43d9-8316-41090d9680af",
        "attributes": {
            "coolsetpoint": {
                "readonly": false,
                "required": true,
                "type": "double",
                "description": "The desired low temperature when the HVAC unit is in cooling or auto mode. May also be used to set the target temperature."
            },
            "heatsetpoint": {
                "readonly": false,
                "required": true,
                "type": "double",
                "description": "The desired high temperature when the HVAC unit is in heating or auto mode. May also be used to set the target temperature."
            },
            "minsetpoint": {
                "readonly": true,
                "required": true,
                "type": "double",
                "description": "The minimum setpoint for the thermostat, inclusive.  The heatsetpoint can't be set below this and the coolsetpoint can't be set below minsetpoint + setpointseparation."
            },
            "maxsetpoint": {
                "readonly": true,
                "required": true,
                "type": "double",
                "description": "The maximum setpoint for the thermostat, inclusive.  The coolsetpoint can't be set above this and the heatsetpoint can't be set above maxsetpoint - setpointseparation."
            },
            "setpointseparation": {
                "readonly": true,
                "required": true,
                "type": "double",
                "description": "The heatsetpoint and coolsetpoint should be kept apart by at least this many degrees.  If only heatsetpoint or coolsetpoint are changed then the driver must automatically adjust the other setpoint if needed.  If both are specified and within setpointseparation of each other the driver may adjust either setpoint as needed to maintain the proper amount of separation."
            },
            "hvacmode": {
                "readonly": false,
                "required": true,
                "type": "enum",
                "description": "The current mode of the HVAC system.",
                "valid": [
                    "OFF",
                    "AUTO",
                    "COOL",
                    "HEAT",
                    "ECO"
                ]
            },
            "supportedmodes": {
                "readonly": true,
                "required": true,
                "type": "set<String>",
                "description": "Modes supported by this thermostat",
                "valid": [
                    "OFF",
                    "AUTO",
                    "COOL",
                    "HEAT",
                    "ECO"
                ]
            },
            "supportsAuto": {
                "readonly": true,
                "required": false,
                "type": "boolean",
                "description": "Whether or not the thermostat supports AUTO mode.  If not present, assume true"
            },
            "fanmode": {
                "readonly": false,
                "required": false,
                "type": "int",
                "description": "Current fan mode setting.",
                "min": "0",
                "max": "7"
            },
            "maxfanspeed": {
                "readonly": true,
                "required": false,
                "type": "int",
                "description": "The maximum speed supported by the fan.",
                "min": "1",
                "max": "7"
            },
            "autofanspeed": {
                "readonly": true,
                "required": false,
                "type": "int",
                "description": "Set the speed of the fan when in auto mode.",
                "min": "1",
                "max": "7"
            },
            "emergencyheat": {
                "readonly": false,
                "required": false,
                "type": "enum",
                "description": "Useful only for 2 stage heat pumps that require a secondary (usually electric) heater when the external temperature is below a certain threshold.",
                "valid": [
                    "ON",
                    "OFF"
                ]
            },
            "controlmode": {
                "readonly": false,
                "required": true,
                "type": "enum",
                "description": "The current mode of the HVAC system.",
                "valid": [
                    "PRESENCE",
                    "MANUAL",
                    "SCHEDULESIMPLE",
                    "SCHEDULEADVANCED"
                ]
            },
            "filtertype": {
                "readonly": false,
                "required": true,
                "type": "string",
                "description": "Placeholder for user to enter filter type like 16x25x1."
            },
            "filterlifespanruntime": {
                "readonly": false,
                "required": true,
                "type": "int",
                "description": "Placeholder for user to enter life span (in runtime hours) of the filter."
            },
            "filterlifespandays": {
                "readonly": false,
                "required": true,
                "type": "int",
                "description": "Placeholder for user to enter life span (in total days) of the filter."
            },
            "runtimesincefilterchange": {
                "readonly": true,
                "required": true,
                "type": "int",
                "description": "Number of hours of runtime since the last filter change."
            },
            "dayssincefilterchange": {
                "readonly": true,
                "required": true,
                "type": "int",
                "description": "Number of days elapsed since the last filter change."
            },
            "active": {
                "readonly": true,
                "required": true,
                "type": "enum",
                "description": "Indicator of whether the HVAC system is actively running or not.  Interpreted as fan is blowing, not necessarily heating or cooling.",
                "valid": [
                    "RUNNING",
                    "NOTRUNNING"
                ]
            }
        },
        "is_device": true,
        "methods": {
            "changeFilter": {
                "enabled": true,
                "required": [
                    "device"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "device": {
                            "type": "string",
                            "decription": "The name of the therm device."
                        }
                    }
                }
            },
            "SetIdealTemperature": {
                "enabled": true,
                "required": [
                    "device",
                    "temperature"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "device": {
                            "type": "string",
                            "decription": "The name of the therm device."
                        },
                        "temperature": {
                            "type": "double",
                            "description": "The target temperature to set.",
                            "optional": false
                        }
                    }
                }
            },
            "IncrementIdealTemperature": {
                "enabled": true,
                "required": [
                    "device",
                    "amount"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "device": {
                            "type": "string",
                            "decription": "The name of the therm device."
                        },
                        "amount": {
                            "type": "double",
                            "description": "The amount to increment the temperature",
                            "optional": false
                        }
                    }
                }
            },
            "DecrementIdealTemperature": {
                "enabled": true,
                "required": [
                    "device",
                    "amount"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "device": {
                            "type": "string",
                            "decription": "The name of the therm device."
                        },
                        "amount": {
                            "type": "double",
                            "description": "The amount to decrement the temperature",
                            "optional": false
                        }
                    }
                }
            }
        },
        "events": {
            "SetPointChanged": {
                "required": [
                    "type",
                    "hvacmode",
                    "setpoint"
                ],
                "valid": {
                    "params": {
                        "type": [
                            "COOL",
                            "HEAT"
                        ],
                        "hvacmode": [
                            "AUTO",
                            "COOL",
                            "HEAT"
                        ],
                        "setpoint": {
                            "type": "double",
                            "description": "Value of setpoint in degrees C.",
                            "optional": false
                        }
                    }
                },
                "description": "Notifies the system that a thermostat setpoint has been changed."
            }
        }
    },
    "tilt": {
        "correlation_id": "63e4a5cc-a88e-416b-941b-d00ddd63f746",
        "attributes": {
            "tiltstate": {
                "readonly": false,
                "required": true,
                "type": "enum",
                "description": "Reflects the current state of the tilt sensor.",
                "valid": [
                    "FLAT",
                    "UPRIGHT"
                ]
            },
            "tiltstatechanged": {
                "readonly": true,
                "required": true,
                "type": "timestamp",
                "description": "UTC date time of last tilt state change"
            }
        },
        "is_device": true,
        "methods": {},
        "events": {}
    },
    "twinstar": {
        "correlation_id": "3bba80b2-d479-4e04-866c-9f1d604e58b9",
        "attributes": {
            "ecomode": {
                "readonly": false,
                "required": true,
                "type": "enum",
                "description": "If enabled the heater will reduce power consumption to save energy.",
                "valid": [
                    "ENABLED",
                    "DISABLED"
                ]
            }
        },
        "is_device": true,
        "methods": {},
        "events": {}
    },
    "valv": {
        "correlation_id": "3383f89a-8b1f-4284-a59f-fd90957cb31f",
        "attributes": {
            "valvestate": {
                "readonly": false,
                "required": true,
                "type": "enum",
                "description": "Reflects the current state of the valve. Obstruction implying that something is preventing the opening or closing of the valve. May also be used to set the state of the valve.",
                "valid": [
                    "CLOSED",
                    "OPEN",
                    "OPENING",
                    "CLOSING",
                    "OBSTRUCTION"
                ]
            },
            "valvestatechanged": {
                "readonly": true,
                "required": true,
                "type": "timestamp",
                "description": "UTC date time of last valve state change"
            }
        },
        "is_device": true,
        "methods": {},
        "events": {}
    },
    "vent": {
        "correlation_id": "1fd01f84-1a77-438f-84ad-09e882b70fb5",
        "attributes": {
            "ventstate": {
                "readonly": true,
                "required": true,
                "type": "enum",
                "description": "Reflects the current state of the vent.  Obstruction implying that something is preventing the opening or closing of the vent.",
                "valid": [
                    "OK",
                    "OBSTRUCTION"
                ]
            },
            "level": {
                "readonly": false,
                "required": true,
                "type": "int",
                "description": "Reflects the current level of openness, as a percentage.",
                "min": "0",
                "max": "100"
            },
            "airpressure": {
                "readonly": true,
                "required": false,
                "type": "double",
                "description": "Air pressure in duct."
            }
        },
        "is_device": true,
        "methods": {},
        "events": {}
    },
    "waterhardness": {
        "correlation_id": "c716f245-a9a6-4ca7-b4ce-89db367e5df7",
        "attributes": {
            "hardness": {
                "readonly": true,
                "required": true,
                "type": "double",
                "description": "Hardness of water in grains per gallon"
            }
        },
        "is_device": true,
        "methods": {},
        "events": {}
    },
    "waterheater": {
        "correlation_id": "ef35a75c-e9d6-4352-978e-cd31c44b96c7",
        "attributes": {
            "heatingstate": {
                "readonly": true,
                "required": true,
                "type": "boolean",
                "description": "Indicates if system is currently heating water through an element."
            },
            "maxsetpoint": {
                "readonly": true,
                "required": false,
                "type": "double",
                "description": "This is the maximum temperature as set on the device. It can be changed on the device and it will report that here."
            },
            "setpoint": {
                "readonly": false,
                "required": true,
                "type": "double",
                "description": "This is the user-defined setpoint of desired hotwater. The setting cannot be above the (max) setpoint set on the hardware."
            },
            "hotwaterlevel": {
                "readonly": true,
                "required": true,
                "type": "enum",
                "description": "How much hot water is available.",
                "valid": [
                    "LOW",
                    "MEDIUM",
                    "HIGH"
                ]
            }
        },
        "is_device": true,
        "methods": {},
        "events": {}
    },
    "watersoftener": {
        "correlation_id": "d263ae79-be8b-49f2-8ad1-3b53c6fff02f",
        "attributes": {
            "rechargeStatus": {
                "readonly": true,
                "required": true,
                "type": "enum",
                "description": "Recharge status of the water softener:  READY (providing soft water), RECHARGING (actively regenerating), RECHARGE_SCHEDULED (recharge required and will be done at rechargeStartTime)",
                "valid": [
                    "READY",
                    "RECHARGING",
                    "RECHARGE_SCHEDULED"
                ]
            },
            "currentSaltLevel": {
                "readonly": true,
                "required": true,
                "type": "int",
                "description": "Current salt level from 0 (empty) to maxSaltLevel",
                "min": "0"
            },
            "maxSaltLevel": {
                "readonly": true,
                "required": true,
                "type": "int",
                "description": "Max salt level for this softener"
            },
            "saltLevelEnabled": {
                "readonly": true,
                "required": false,
                "type": "boolean",
                "description": "true indicates currentSaltLevel should be accurate - false indicates currentSaltLevel should be ignored"
            },
            "rechargeStartTime": {
                "readonly": false,
                "required": false,
                "type": "int",
                "description": "When regeneration is needed, hour of the day when it should be scheduled (e.g. 14 = 2:00 PM). Does not guarantee that regeneration will occur daily.",
                "min": "0",
                "max": "23"
            },
            "rechargeTimeRemaining": {
                "readonly": true,
                "required": false,
                "type": "int",
                "description": "The number of minutes left before the softener completes its recharge cycle."
            },
            "daysPoweredUp": {
                "readonly": true,
                "required": false,
                "type": "int",
                "description": "The number of consecutive days the softener has been powered on"
            },
            "totalRecharges": {
                "readonly": true,
                "required": false,
                "type": "int",
                "description": "The total number of recharge cycles the softener has performed since being added to the network"
            }
        },
        "is_device": true,
        "methods": {
            "rechargeNow": {
                "enabled": true,
                "required": [
                    "device"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "device": {
                            "type": "string",
                            "decription": "The name of the watersoftener device."
                        }
                    }
                }
            }
        },
        "events": {}
    },
    "subwater": {
        "correlation_id": "88329261-560b-4e46-96b6-e0bc4688f23b",
        "attributes": {
            "primaryWaterHeater": {
                "readonly": false,
                "required": false,
                "type": "string",
                "description": "When the first water heater is added it will be populated with that value.  This will be null if no water heater devices exist in the system."
            },
            "primaryWaterSoftener": {
                "readonly": false,
                "required": false,
                "type": "string",
                "description": "When the first water softener is added it will be populated with that value. This will be null if no water softener devices exist in the system."
            },
            "closedWaterValves": {
                "readonly": true,
                "required": true,
                "type": "set<String>",
                "description": "The set of water shutoff valves that are currently closed."
            },
            "waterDevices": {
                "readonly": true,
                "required": true,
                "type": "set<String>",
                "description": "The set of devices that participate in the water service."
            },
            "continuousWaterUseDevices": {
                "readonly": true,
                "required": true,
                "type": "set<String>",
                "description": "The set of devices that have a continuous water use alert enabled and active."
            },
            "excessiveWaterUseDevices": {
                "readonly": true,
                "required": true,
                "type": "set<String>",
                "description": "The set of devices that have an excessive water use alert enabled and active."
            },
            "lowSaltDevices": {
                "readonly": true,
                "required": true,
                "type": "set<String>",
                "description": "The set of water softeners that have a low salt level."
            }
        },
        "is_device": false,
        "methods": {},
        "events": {
            "ContinuousWaterUse": {
                "required": [
                    "sensor",
                    "flowRate",
                    "durationSec"
                ],
                "valid": {
                    "params": {
                        "sensor": {
                            "type": "String",
                            "description": "The address of the sensor that detected continuous water use.",
                            "optional": false
                        },
                        "flowRate": {
                            "type": "double",
                            "description": "The configured flowRate in gallons per minute that was set when the alert was triggered.",
                            "optional": false
                        },
                        "durationSec": {
                            "type": "int",
                            "description": "The configured duration in seconds that was set when the alert was triggered.",
                            "optional": false
                        }
                    }
                },
                "description": "Emitted when a new water flow sensor detects continuous use. The device address will also be added to continuousWaterUseDevices."
            },
            "ExcessiveWaterUse": {
                "required": [
                    "sensor"
                ],
                "valid": {
                    "params": {
                        "sensor": {
                            "type": "String",
                            "description": "The address of the sensor that detected excessive water use.",
                            "optional": false
                        }
                    }
                },
                "description": "Emitted when a new water flow sensor detects excessive use. The device address will also be added to excessiveWaterUseDevices."
            },
            "LowSalt": {
                "required": [
                    "sensor"
                ],
                "valid": {
                    "params": {
                        "sensor": {
                            "type": "String",
                            "description": "The address of the device that has a low salt level.",
                            "optional": false
                        }
                    }
                },
                "description": "Emitted when a new water softener is added to the set of low salt devices."
            }
        }
    },
    "noaa": {
        "correlation_id": "c6460e0a-0189-4372-ac77-c83205f4064e",
        "attributes": {
            "alertstate": {
                "readonly": true,
                "required": true,
                "type": "enum",
                "description": "Reflects the current state of the weather radio (alerting, no existing alert, or an existing hushed alert).",
                "valid": [
                    "ALERT",
                    "NO_ALERT",
                    "HUSHED"
                ]
            },
            "playingstate": {
                "readonly": true,
                "required": true,
                "type": "enum",
                "description": "Reflects whether the weather radio is currently playing or is quiet.",
                "valid": [
                    "PLAYING",
                    "QUIET"
                ]
            },
            "currentalert": {
                "readonly": true,
                "required": false,
                "type": "string",
                "description": "EAS code for current alert (three letter strings). Set to NONE when no alert is active. Set to UNKNOWN when a code not currently known is sent."
            },
            "lastalerttime": {
                "readonly": true,
                "required": false,
                "type": "timestamp",
                "description": "UTC date time of last alert start time. Note if alert changes (county list or duration), timestamp will be updated."
            },
            "alertsofinterest": {
                "readonly": false,
                "required": false,
                "type": "list<string>",
                "description": "List of EAS alert codes the user wishes to be notifed of (three letter strings)."
            },
            "location": {
                "readonly": false,
                "required": false,
                "type": "string",
                "description": "Six digit S.A.M.E. code for locations published by NOAA."
            },
            "stationselected": {
                "readonly": false,
                "required": false,
                "type": "int",
                "description": "station ID of selected station."
            },
            "frequency": {
                "readonly": true,
                "required": false,
                "type": "string",
                "description": "Broadcast frequency of selected station."
            }
        },
        "is_device": true,
        "methods": {
            "ScanStations": {
                "enabled": true,
                "required": [
                    "device"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "device": {
                            "type": "string",
                            "decription": "The name of the noaa device."
                        }
                    }
                }
            },
            "PlayStation": {
                "enabled": true,
                "required": [
                    "device",
                    "station",
                    "time"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "device": {
                            "type": "string",
                            "decription": "The name of the noaa device."
                        },
                        "station": {
                            "type": "int",
                            "description": "The ID of the station to play (1-7)",
                            "optional": false
                        },
                        "time": {
                            "type": "int",
                            "description": "Timeout in seconds after which player will stop (-1 to play forever)",
                            "optional": false
                        }
                    }
                }
            },
            "StopPlayingStation": {
                "enabled": true,
                "required": [
                    "device"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "device": {
                            "type": "string",
                            "decription": "The name of the noaa device."
                        }
                    }
                }
            },
            "SelectStation": {
                "enabled": true,
                "required": [
                    "device",
                    "station"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "device": {
                            "type": "string",
                            "decription": "The name of the noaa device."
                        },
                        "station": {
                            "type": "int",
                            "description": "The ID of the station to use (1-7)",
                            "optional": false
                        }
                    }
                }
            }
        },
        "events": {}
    },
    "subweather": {
        "correlation_id": "4159c04b-c9b4-4a76-ae2e-e8b8ec4cafa8",
        "attributes": {
            "weatherRadios": {
                "readonly": true,
                "required": true,
                "type": "set<String>",
                "description": "The set of weather radio devices in the place"
            },
            "weatherAlert": {
                "readonly": true,
                "required": true,
                "type": "enum",
                "description": "Indicates the whether any weather radios are currently alerting         - READY - No weather radios are alerting         - ALERT - One or more weather radios are alerting",
                "valid": [
                    "READY",
                    "ALERT"
                ]
            },
            "alertingRadios": {
                "readonly": true,
                "required": true,
                "type": "map<set<string>>",
                "description": "A map of NWS EAS event codes for the current alert to the devices that are reporting that alert"
            },
            "lastWeatherAlertTime": {
                "readonly": true,
                "required": true,
                "type": "timestamp",
                "description": "The last time a weather alert was raised"
            }
        },
        "is_device": false,
        "methods": {
            "SnoozeAllAlerts": {
                "enabled": true,
                "required": [],
                "oneof": [],
                "valid": {
                    "params": {}
                }
            }
        },
        "events": {}
    },
    "schedweek": {
        "correlation_id": "be79b639-bad5-41fb-a6cd-6f6f53fc9fb9",
        "attributes": {
            "mon": {
                "readonly": true,
                "required": false,
                "type": "list<TimeOfDayCommand>",
                "description": "The commands that are scheduled to run on Mondays"
            },
            "tue": {
                "readonly": true,
                "required": false,
                "type": "list<TimeOfDayCommand>",
                "description": "The commands that are scheduled to run on Tuesdays"
            },
            "wed": {
                "readonly": true,
                "required": false,
                "type": "list<TimeOfDayCommand>",
                "description": "The commands that are scheduled to run on Wednesdays"
            },
            "thu": {
                "readonly": true,
                "required": false,
                "type": "list<TimeOfDayCommand>",
                "description": "The commands that are scheduled to run on Thursdays"
            },
            "fri": {
                "readonly": true,
                "required": false,
                "type": "list<TimeOfDayCommand>",
                "description": "The commands that are scheduled to run on Fridays"
            },
            "sat": {
                "readonly": true,
                "required": false,
                "type": "list<TimeOfDayCommand>",
                "description": "The commands that are scheduled to run on Saturdays"
            },
            "sun": {
                "readonly": true,
                "required": false,
                "type": "list<TimeOfDayCommand>",
                "description": "The commands that are scheduled to run on Sundays"
            }
        },
        "is_device": false,
        "methods": {
            "ScheduleWeeklyCommand": {
                "enabled": true,
                "required": [
                    "days",
                    "attributes"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "days": {
                            "type": "set<string>",
                            "description": "The days of the week that this command should be run on.  There must be at least one day in this set.",
                            "optional": false
                        },
                        "time": {
                            "type": "string",
                            "description": "The time of day formatted as HH:MM:SS using a 24-hour clock, in place-local time (see Place#TimeZone), that the command should be sent.  This may not be set if mode is SUNRISE or SUNSET, this must be set of mode is ABSOLUTE or unspecified.",
                            "optional": true
                        },
                        "mode": {
                            "type": "enum",
                            "description": "What mode this command is scheduled in:     ABSOLUTE - The time reported in time will be used.     SUNRISE - The command will execute at local sunrise + offsetMin.  The time reported in the time field will be the calculated run time for today.     SUNSET - The command will execute at local sunset + offsetMin. The time reported in the time field will be the calculated run time for today.",
                            "optional": true
                        },
                        "offsetMinutes": {
                            "type": "int",
                            "description": "This will always be 0 if the mode is set to ABSOLUTE.  If mode is set to SUNRISE or SUNSET this will be the offset / delta from sunrise or sunset that the event should run at.  A negative number means the event should happen before sunrise/sunset, a postive means after.",
                            "optional": true
                        },
                        "messageType": {
                            "type": "string",
                            "description": "Default: base:SetAttributes. Type of message to be sent.",
                            "optional": true
                        },
                        "attributes": {
                            "type": "map<any>",
                            "description": "The attributes to send with the request.",
                            "optional": false
                        }
                    },
                    "days": [
                        "MON",
                        "TUE",
                        "WED",
                        "THU",
                        "FRI",
                        "SAT",
                        "SUN"
                    ],
                    "mode": [
                        "ABSOLUTE",
                        "SUNRISE",
                        "SUNSET"
                    ]
                }
            },
            "UpdateWeeklyCommand": {
                "enabled": true,
                "required": [
                    "commandId"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "commandId": {
                            "type": "string",
                            "description": "The id of the command to update. Only the specified fields will be changed.",
                            "optional": false
                        },
                        "days": {
                            "type": "set<string>",
                            "description": "If specified it will update the schedule to only run on the requested days.",
                            "optional": true
                        },
                        "mode": {
                            "type": "enum",
                            "description": "What mode this command is scheduled in:     ABSOLUTE - The time reported in time will be used.     SUNRISE - The command will execute at local sunrise + offsetMin.  The time reported in the time field will be the calculated run time for today.     SUNSET - The command will execute at local sunset + offsetMin. The time reported in the time field will be the calculated run time for today.",
                            "optional": true
                        },
                        "offsetMinutes": {
                            "type": "int",
                            "description": "This will always be 0 if the mode is set to ABSOLUTE.  If mode is set to SUNRISE or SUNSET this will be the offset / delta from sunrise or sunset that the event should run at.  A negative number means the event should happen before sunrise/sunset, a postive means after.",
                            "optional": true
                        },
                        "time": {
                            "type": "string",
                            "description": "If specified it will update the time of each instance of this event.",
                            "optional": true
                        },
                        "messageType": {
                            "type": "string",
                            "description": "Default: base:SetAttributes. Type of message to be sent.",
                            "optional": true
                        },
                        "attributes": {
                            "type": "map<any>",
                            "description": "If specified it will update the attributes to be included in the message.",
                            "optional": true
                        }
                    },
                    "days": [
                        "MON",
                        "TUE",
                        "WED",
                        "THU",
                        "FRI",
                        "SAT",
                        "SUN"
                    ],
                    "mode": [
                        "ABSOLUTE",
                        "SUNRISE",
                        "SUNSET"
                    ]
                }
            }
        },
        "events": {}
    },
    "wifi": {
        "correlation_id": "3f5a0786-346e-474f-8a05-42380681cac0",
        "attributes": {
            "enabled": {
                "readonly": false,
                "required": false,
                "type": "boolean",
                "description": "When true, wireless interface is enabled."
            },
            "state": {
                "readonly": true,
                "required": true,
                "type": "enum",
                "description": "Indicates whether or not this device has a WiFi connection to an access point.",
                "valid": [
                    "CONNECTED",
                    "DISCONNECTED"
                ]
            },
            "ssid": {
                "readonly": true,
                "required": true,
                "type": "string",
                "description": "SSID of base station connected to."
            },
            "bssid": {
                "readonly": true,
                "required": false,
                "type": "string",
                "description": "BSSID of base station connected to."
            },
            "security": {
                "readonly": true,
                "required": false,
                "type": "enum",
                "description": "Security of connection.",
                "valid": [
                    "NONE",
                    "WEP",
                    "WPA_PSK",
                    "WPA2_PSK",
                    "WPA_ENTERPRISE",
                    "WPA2_ENTERPRISE"
                ]
            },
            "channel": {
                "readonly": true,
                "required": false,
                "type": "int",
                "description": "Channel in use."
            },
            "noise": {
                "readonly": true,
                "required": false,
                "type": "int",
                "description": "Noise level in dBm"
            },
            "rssi": {
                "readonly": true,
                "required": false,
                "type": "int",
                "description": "Received signal stength indicator in dB."
            }
        },
        "is_device": true,
        "methods": {
            "Connect": {
                "enabled": true,
                "required": [
                    "device",
                    "ssid",
                    "security"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "device": {
                            "type": "string",
                            "decription": "The name of the wifi device."
                        },
                        "ssid": {
                            "type": "string",
                            "description": "SSID of base station connected to.",
                            "optional": false
                        },
                        "bssid": {
                            "type": "string",
                            "description": "BSSID of base station connected to.",
                            "optional": true
                        },
                        "security": {
                            "type": "string",
                            "description": "Security of connection.",
                            "optional": false
                        },
                        "key": {
                            "type": "string",
                            "description": "Security key.",
                            "optional": true
                        }
                    }
                }
            },
            "Disconnect": {
                "enabled": true,
                "required": [
                    "device"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "device": {
                            "type": "string",
                            "decription": "The name of the wifi device."
                        }
                    }
                }
            }
        },
        "events": {}
    },
    "wifiscan": {
        "correlation_id": "843b89f9-45be-4ba3-a4fa-caaa959a9b99",
        "attributes": {},
        "is_device": true,
        "methods": {
            "StartWifiScan": {
                "enabled": true,
                "required": [
                    "device",
                    "timeout"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "device": {
                            "type": "string",
                            "decription": "The name of the wifiscan device."
                        },
                        "timeout": {
                            "type": "int",
                            "description": "The number of seconds to scan unless endWifiScan() is called.",
                            "optional": false
                        }
                    }
                }
            },
            "EndWifiScan": {
                "enabled": true,
                "required": [
                    "device"
                ],
                "oneof": [],
                "valid": {
                    "params": {
                        "device": {
                            "type": "string",
                            "decription": "The name of the wifiscan device."
                        }
                    }
                }
            }
        },
        "events": {
            "WiFiScanResults": {
                "required": [
                    "scanResults"
                ],
                "valid": {
                    "params": {
                        "scanResults": {
                            "type": "list<map>",
                            "description": "Results of wifi scan",
                            "optional": false
                        },
                        "message": {
                            "type": "string",
                            "description": "Error message, if any",
                            "optional": true
                        }
                    }
                },
                "description": "Drivers should return a complete list of all BSSIDs found during the lifetime of the scan, not just those BSSIDs which are newly observed at the time of event generation."
            }
        }
    }
}